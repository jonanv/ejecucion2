<?php

class archivoModel extends modelBase{


   /***********************************************************************************/

    /*----------------------------- Mensajes ---------------------------------------*/

    /***********************************************************************************/

      public function mensajes()

  {

      $condicion=$_GET['nombre'];
	  
	  
	  if($condicion==1)

	  {

	    $_SESSION['elemento'] = "El seguimiento ha sido registrado correctamente";

	    $_SESSION['elem_conscontrato'] = true;

	     if($_SESSION['id']!="")
		 {

	      print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=regseguimiento"</script>';
	     }
  
	   }

	 if($condicion==2)

	  {

	    $_SESSION['elemento'] = "El registro ha sido actualizado correctamente";

	    $_SESSION['elem_conscontrato'] = true;

	   if($_SESSION['id']!="")
	   {

	    print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_archivo"</script>';
	  
	   }

	 }
	 if($condicion=="2b")

	  {

	    $_SESSION['elemento'] = "Error al Realizar el Registro...";

	    $_SESSION['elem_error_transaccion'] = true;

	   if($_SESSION['id']!="")
	   {

	    print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_archivo"</script>';
	  
	   }

	 }
	  if($condicion==22)

	  {

	    $_SESSION['elemento'] = "El registro ha sido actualizado correctamente";

	    $_SESSION['elem_conscontrato'] = true;

	   if($_SESSION['id']!="")
	   {

	    print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_archivo"</script>';
	  
	   }
	   

	 }
	 if($condicion==23)

	  {

	    $_SESSION['elemento'] = "Actualizaciï¿½n del Reparto Incorrecta, Faltan Valores por Definir en el Reparto, Verificar clic en Reparto, Fecha, Juzgado Reparto y Cambio Ponente";

	    $_SESSION['elem_reparto'] = true;

	   if($_SESSION['id']!="")
	   {

	    	print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_archivo"</script>';
			
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Reparto_archivomodificarOtro&nombre1="+"'.$condicion2.'""</script>';*/
		
		
	  
	   }
	   

	 }
     if($condicion==3)

	  {

	    $_SESSION['elemento'] = "El radicado que intenta registrar ya existe en el sistema";

	    $_SESSION['elem_conscontrato'] = true;

	     if($_SESSION['id']!="")
		 {

	      print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_archivo"</script>';
	     }
  
	   }
	    
	       if($condicion==4)

	  {

	    $_SESSION['elemento'] = "El acta de entrega ha sido registrada correctamente";

	    $_SESSION['elem_conscontrato'] = true;

	     if($_SESSION['id']!="")
		 {

	      print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_archivo"</script>';
	     }
  
	   }
	   
	   
	       if($condicion==5)

	  {

	    $_SESSION['elemento'] = "El acta ha sido modificada correctamente";

	    $_SESSION['elem_conscontrato'] = true;

	     if($_SESSION['id']!="")
		 {

	      print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_archivo"</script>';
	     }
  
	   }
	   
	      if($condicion==6)

	  {

	    $_SESSION['elemento'] = "El informe ha sido registrado correctamente";

	    $_SESSION['elem_conscontrato'] = true;

	     if($_SESSION['id']!="")
		 {

	      print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_archivo"</script>';
	     }
  
	   }
	    if($condicion==7)

	  {

	    $_SESSION['elemento'] = "El informe ha sido actualizado correctamente";

	    $_SESSION['elem_conscontrato'] = true;

	     if($_SESSION['id']!="")
		 {

	      print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_archivo"</script>';
	     }
  
	   }
	        if($condicion==8)

	  {

	    $_SESSION['elemento'] = "El acta ha sido entregada correctamente";

	    $_SESSION['elem_conscontrato'] = true;

	     if($_SESSION['id']!="")
		 {

	      print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_archivo"</script>';
	     }
  
	   }  
	   
	   
	   if($condicion == 9){

	 		$_SESSION['elemento'] = "El registro ha sido ingresado correctamente";

	    	$_SESSION['elem_conscontrato'] = true;

	   		if($_SESSION['id']!=""){

	    		/*print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_empleados"</script>';*/
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Titulos_Encustodia"</script>';
			}
		}
		 
	 	if($condicion == "9b"){

	 		$_SESSION['elemento'] = "Error al Realizar el registro";

	    	$_SESSION['elem_error_transaccion'] = true;

	   		if($_SESSION['id']!=""){

				/*print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_empleados"</script>';*/
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Titulos_Encustodia"</script>';
	  
	   		}

	 	}
		
		if($condicion == 10){

	 		$_SESSION['elemento'] = "El registro ha sido ingresado correctamente";

	    	$_SESSION['elem_conscontrato'] = true;

	   		if($_SESSION['id']!=""){

	    		/*print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_empleados"</script>';*/
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Listar_Titulos_Materializados"</script>';
			}
		}
		 
	 	if($condicion == "10b"){

	 		$_SESSION['elemento'] = "Error al Realizar el registro";

	    	$_SESSION['elem_error_transaccion'] = true;

	   		if($_SESSION['id']!=""){

				/*print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_empleados"</script>';*/
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Listar_Titulos_Materializados"</script>';
	  
	   		}

	 	}
		
		if($condicion == 11){

	 		$_SESSION['elemento'] = "El registro ha sido ingresado correctamente";

	    	$_SESSION['elem_conscontrato'] = true;

	   		if($_SESSION['id']!=""){

	    		/*print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_empleados"</script>';*/
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Listar_Titulos_OtrosJuzgados"</script>';
			}
		}
		 
	 	if($condicion == "11b"){

	 		$_SESSION['elemento'] = "Error al Realizar el registro";

	    	$_SESSION['elem_error_transaccion'] = true;

	   		if($_SESSION['id']!=""){

				/*print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_empleados"</script>';*/
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Listar_Titulos_OtrosJuzgados"</script>';
	  
	   		}

	 	}
		
		if($condicion == 12){

	 		$_SESSION['elemento'] = "La Asignacion ha sido ingresada correctamente";

	    	$_SESSION['elem_conscontrato'] = true;

	   		if($_SESSION['id']!=""){

	    		/*print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_empleados"</script>';*/
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Listar_Titulos_OtrosJuzgados_2"</script>';
			}
		}
		 
	 	if($condicion == "12b"){

	 		$_SESSION['elemento'] = "Error al Realizar la Asignacion";

	    	$_SESSION['elem_error_transaccion'] = true;

	   		if($_SESSION['id']!=""){

				/*print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_empleados"</script>';*/
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Listar_Titulos_OtrosJuzgados_2"</script>';
	  
	   		}

	 	}
		
		if($condicion == 13){

	 		$_SESSION['elemento'] = "El registro ha sido ingresado correctamente";

	    	$_SESSION['elem_conscontrato'] = true;

	   		if($_SESSION['id']!=""){

	    		/*print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_empleados"</script>';*/
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Incorporar_Memorial"</script>';
			}
		}
		 
	 	if($condicion == "13b"){

	 		$_SESSION['elemento'] = "Error al Realizar el registro";

	    	$_SESSION['elem_error_transaccion'] = true;

	   		if($_SESSION['id']!=""){

				/*print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_empleados"</script>';*/
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Incorporar_Memorial"</script>';
	  
	   		}

	 	}
		
		
		if($condicion == 14){

	 		$_SESSION['elemento'] = "El registro ha sido ingresado correctamente";

	    	$_SESSION['elem_conscontrato'] = true;

	   		if($_SESSION['id']!=""){

	    		/*print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_empleados"</script>';*/
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Expediente_Memorial_Incorporado"</script>';
			}
		}
		 
	 	if($condicion == "14b"){

	 		$_SESSION['elemento'] = "Error al Realizar el registro";

	    	$_SESSION['elem_error_transaccion'] = true;

	   		if($_SESSION['id']!=""){

				/*print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_empleados"</script>';*/
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Expediente_Memorial_Incorporado"</script>';
	  
	   		}

	 	}
		
		if($condicion == 15){

	 		$_SESSION['elemento'] = "El registro ha sido ingresado correctamente";

	    	$_SESSION['elem_conscontrato'] = true;

	   		if($_SESSION['id']!=""){

	    		/*print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_empleados"</script>';*/
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Ejecutoria"</script>';
			}
		}
		 
	 	if($condicion == "15b"){

	 		$_SESSION['elemento'] = "Error al Realizar el registro";

	    	$_SESSION['elem_error_transaccion'] = true;

	   		if($_SESSION['id']!=""){

				/*print'<script languaje="Javascript">location.href="index.php?controller=menu&action=mod_empleados"</script>';*/
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=Ejecutoria"</script>';
	  
	   		}

	 	}
 

  }	

  

  

  /***********************************************************************************/

  /*------------------------------ Listar Log ---------------------------------------*/

  /***********************************************************************************/

  public function listarLogArchivo()

  {

  

	  $listar = $this->db->prepare("SELECT logusuario.fecha,logusuario.accion,logusuario.detalle,usuario.empleado,usuario.foto
FROM LOG AS logusuario
INNER JOIN pa_usuario AS usuario ON (logusuario.idusuario=usuario.id)
WHERE logusuario.idtipolog=1
ORDER BY logusuario.id DESC
LIMIT 15");

	  $listar->execute();
	 return $listar;


   

  }	

  
   /***********************************************************************************/

  /*------------------------------ Registrar Seguimiento --------------------------------*/

  /***********************************************************************************/

  public function registrarSeguimiento()

  {

	 
	  $idusuario = $_POST['responsable'];

	  $fecha = $_POST['fecha'];

	  $idjuzgado = $_POST['juzgado'];

	  $desde = $_POST['desde'];

	  $hasta = $_POST['hasta'];
	  
	  $procesos = $_POST['procesos'];
	  
	  $consecutivo = $_POST['consecutivo'];
	  
	  $r_gancho = $_POST['r_gancho'];
	  
	  $r_coser = $_POST['r_coser'];
	  
	  $r_foliar = $_POST['r_foliar'];
	  
	  $r_siglo = $_POST['r_siglo'];
	  
	  $r_saidoj = $_POST['r_saidoj'];
	  
	  if($r_gancho=='on')
	  {
	   $r_gancho =1;
	  }
	  else
	  {
	   $r_gancho =0;
	  }
	  if($r_coser=='on')
	  {
	   $r_coser =1;
	  }
	  else
	  {
	   $r_coser =0;
	  }
	  if($r_foliar=='on')
	  {
	   $r_foliar =1;
	  }
	  else
	  {
	   $r_foliar =0;
	  }
	  if($r_siglo=='on')
	  {
	   $r_siglo =1;
	  }
	  else
	  {
	   $r_siglo =0;
	  }
	  if($r_saidoj=='on')
	  {
	   $r_saidoj =1;
	  }
	  else
	  {
	   $r_saidoj =0;
	  }
	  
	  $procesos_faltantes = $_POST['procesos_faltantes'];
	  
	  $causales_incumplimiento = $_POST['causales_incumplimiento'];
	  
	  $tiempo_incumplimiento = $_POST['tiempo_incumplimiento'];
	  
	  $observaciones = $_POST['observaciones'];

      $observaciones_revisor = $_POST['observaciones_revisor'];
	  
	  date_default_timezone_set('America/Bogota'); 

      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Resgistr&oacute; Seguimiento';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Registro un nuevo seguimiento ".$fechal." "."a las: ".$hora;
	  
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	  $tipolog=1;

      $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();
	  
	  $registrar = $this->db->prepare("INSERT INTO seguimiento (idusuario,fecha,idjuzgado,desde,hasta,procesos,consecutivo,r_gancho,r_coser,r_foliar,
r_siglo,r_saidoj,procesos_faltantes,causales_incumplimiento,tiempo_incumplimiento,observaciones,observaciones_revisor)
values ('$idusuario','$fecha','$idjuzgado','$desde', '$hasta', '$procesos', '$consecutivo', '$r_gancho', '$r_coser', '$r_foliar', '$r_siglo', '$r_saidoj', '$procesos_faltantes', '$causales_incumplimiento', '$tiempo_incumplimiento', '$observaciones','$observaciones_revisor')");

	  $registrar->execute(); 
	  $resultado = $registrar->rowCount();

	  
      if ($resultado)

      {			

       print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=1"</script>';

      }

	  
	  

  }

   /***********************************************************************************/

  /*----------------------- Listar Datos Radicado Modificar-------------------------------------*/

  /***********************************************************************************/

  public function listarDatosRadicadoModificar()

  {

      $id=$_GET['nombre'];    

	  $listar = $this->db->prepare("select ct.radicado from ubicacion_expediente ct where ct.id='$id'");

	  $listar->execute();
	  
	  while($field = $listar->fetch())
       	 {
		  $radicado=$field['radicado'];
		  }
		
	   $ano= substr($radicado, 12, 4);
	   $consecutivo=substr($radicado, 16, 5);	
	   
	  
	  $vector[0][ano]=$ano;
	  $vector[0][consecutivo]=$consecutivo;
   

	  return $vector; 

   

  }  

 /***********************************************************************************/

  /*------------------------------ Registrar Informe Gestiï¿½n --------------------------------*/

  /***********************************************************************************/

  public function registrarInformeGestion()

  {

	 
	  $ano = $_POST['ano'];
	  
	  //toma los valores de los juzgados de familia
	  $j1f_enero        = $_POST['j1f_enero'];
	  $j1f_febrero      = $_POST['j1f_febrero'];
	  $j1f_marzo        = $_POST['j1f_marzo'];
	  $j1f_abril        = $_POST['j1f_abril'];
	  $j1f_mayo         = $_POST['j1f_mayo'];
	  $j1f_junio        = $_POST['j1f_junio'];
	  $j1f_julio        = $_POST['j1f_julio'];
	  $j1f_agosto       = $_POST['j1f_agosto'];
	  $j1f_septiembre   = $_POST['j1f_septiembre'];
	  $j1f_octubre   	= $_POST['j1f_octubre'];
	  $j1f_noviembre    = $_POST['j1f_noviembre'];
	  $j1f_diciembre	= $_POST['j1f_diciembre'];
	  //juzgado 1 de familia id:1
	  $idjuzgado        = 1;
	  
	  
	  $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j1f_enero','$j1f_febrero','$j1f_marzo', '$j1f_abril', '$j1f_mayo', '$j1f_junio', '$j1f_julio', '$j1f_agosto', '$j1f_septiembre', '$j1f_octubre', '$j1f_noviembre', '$j1f_diciembre')");
	  		$registrar->execute(); 

	  
	  
	  
	  $j2f_enero        = $_POST['j2f_enero'];
	  $j2f_febrero      = $_POST['j2f_febrero'];
	  $j2f_marzo        = $_POST['j2f_marzo'];
	  $j2f_abril        = $_POST['j2f_abril'];
	  $j2f_mayo         = $_POST['j2f_mayo'];
	  $j2f_junio        = $_POST['j2f_junio'];
	  $j2f_julio        = $_POST['j2f_julio'];
	  $j2f_agosto       = $_POST['j2f_agosto'];
	  $j2f_septiembre   = $_POST['j2f_septiembre'];
	  $j2f_octubre   	= $_POST['j2f_octubre'];
	  $j2f_noviembre    = $_POST['j2f_noviembre'];
	  $j2f_diciembre	= $_POST['j2f_diciembre'];
	  //juzgado 2 de familia id:2
	  $idjuzgado        = 2;
	  
	  
	  $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j2f_enero','$j2f_febrero','$j2f_marzo', '$j2f_abril', '$j2f_mayo', '$j2f_junio', '$j2f_julio', '$j2f_agosto', '$j2f_septiembre', '$j2f_octubre', '$j2f_noviembre', '$j2f_diciembre')");
	  		$registrar->execute(); 

	  
	  $j3f_enero        = $_POST['j3f_enero'];
	  $j3f_febrero      = $_POST['j3f_febrero'];
	  $j3f_marzo        = $_POST['j3f_marzo'];
	  $j3f_abril        = $_POST['j3f_abril'];
	  $j3f_mayo         = $_POST['j3f_mayo'];
	  $j3f_junio        = $_POST['j3f_junio'];
	  $j3f_julio        = $_POST['j3f_julio'];
	  $j3f_agosto       = $_POST['j3f_agosto'];
	  $j3f_septiembre   = $_POST['j3f_septiembre'];
	  $j3f_octubre   	= $_POST['j3f_octubre'];
	  $j3f_noviembre    = $_POST['j3f_noviembre'];
	  $j3f_diciembre	= $_POST['j3f_diciembre'];
	  //juzgado 3 de familia id:3
	  $idjuzgado        = 3;
	  
	  
	  $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j3f_enero','$j3f_febrero','$j3f_marzo', '$j3f_abril', '$j3f_mayo', '$j3f_junio', '$j3f_julio', '$j3f_agosto', '$j3f_septiembre', '$j3f_octubre', '$j3f_noviembre', '$j3f_diciembre')");
	  		$registrar->execute(); 
	  
	  $j4f_enero        = $_POST['j4f_enero'];
	  $j4f_febrero      = $_POST['j4f_febrero'];
	  $j4f_marzo        = $_POST['j4f_marzo'];
	  $j4f_abril        = $_POST['j4f_abril'];
	  $j4f_mayo         = $_POST['j4f_mayo'];
	  $j4f_junio        = $_POST['j4f_junio'];
	  $j4f_julio        = $_POST['j4f_julio'];
	  $j4f_agosto       = $_POST['j4f_agosto'];
	  $j4f_septiembre   = $_POST['j4f_septiembre'];
	  $j4f_octubre 		= $_POST['j4f_octubre'];
	  $j4f_noviembre    = $_POST['j4f_noviembre'];
	  $j4f_diciembre	= $_POST['j4f_diciembre'];
	   //juzgado 4 de familia id:4
	  $idjuzgado        = 4;
	  
	  
	  $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j4f_enero','$j4f_febrero','$j4f_marzo', '$j4f_abril', '$j4f_mayo', '$j4f_junio', '$j4f_julio', '$j4f_agosto', '$j4f_septiembre', '$j4f_octubre', '$j4f_noviembre', '$j4f_diciembre')");
	  		$registrar->execute(); 
	  
	  
	  $j5f_enero        = $_POST['j5f_enero'];
	  $j5f_febrero      = $_POST['j5f_febrero'];
	  $j5f_marzo        = $_POST['j5f_marzo'];
	  $j5f_abril        = $_POST['j5f_abril'];
	  $j5f_mayo         = $_POST['j5f_mayo'];
	  $j5f_junio        = $_POST['j5f_junio'];
	  $j5f_julio        = $_POST['j5f_julio'];
	  $j5f_agosto       = $_POST['j5f_agosto'];
	  $j5f_septiembre   = $_POST['j5f_septiembre'];
	  $j5f_octubre   	= $_POST['j5f_octubre'];
	  $j5f_noviembre    = $_POST['j5f_noviembre'];
	  $j5f_diciembre	= $_POST['j5f_diciembre'];
	  //juzgado 5 de familia id:5
	  $idjuzgado        = 5;
	  
	  
	  $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j5f_enero','$j5f_febrero','$j5f_marzo', '$j5f_abril', '$j5f_mayo', '$j5f_junio', '$j5f_julio', '$j5f_agosto', '$j5f_septiembre', '$j5f_octubre', '$j5f_noviembre', '$j5f_diciembre')");
	  		$registrar->execute(); 
	  
	  $j6f_enero        = $_POST['j6f_enero'];
	  $j6f_febrero      = $_POST['j6f_febrero'];
	  $j6f_marzo        = $_POST['j6f_marzo'];
	  $j6f_abril        = $_POST['j6f_abril'];
	  $j6f_mayo         = $_POST['j6f_mayo'];
	  $j6f_junio        = $_POST['j6f_junio'];
	  $j6f_julio        = $_POST['j6f_julio'];
	  $j6f_agosto       = $_POST['j6f_agosto'];
	  $j6f_septiembre   = $_POST['j6f_septiembre'];
	  $j6f_octubre	    = $_POST['j6f_octubre'];
	  $j6f_noviembre    = $_POST['j6f_noviembre'];
	  $j6f_diciembre	= $_POST['j6f_diciembre'];
	  //juzgado 6 de familia id:6
	  $idjuzgado        = 6;
	  
	  
	  $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j6f_enero','$j6f_febrero','$j6f_marzo', '$j6f_abril', '$j6f_mayo', '$j6f_junio', '$j6f_julio', '$j6f_agosto', '$j6f_septiembre', '$j6f_octubre', '$j6f_noviembre', '$j6f_diciembre')");
	  		$registrar->execute(); 
			
	
	  $j7f_enero        = $_POST['j7f_enero'];
	  $j7f_febrero      = $_POST['j7f_febrero'];
	  $j7f_marzo        = $_POST['j7f_marzo'];
	  $j7f_abril        = $_POST['j7f_abril'];
	  $j7f_mayo         = $_POST['j7f_mayo'];
	  $j7f_junio        = $_POST['j7f_junio'];
	  $j7f_julio        = $_POST['j7f_julio'];
	  $j7f_agosto       = $_POST['j7f_agosto'];
	  $j7f_septiembre   = $_POST['j7f_septiembre'];
	  $j7f_octubre	    = $_POST['j7f_octubre'];
	  $j7f_noviembre    = $_POST['j7f_noviembre'];
	  $j7f_diciembre	= $_POST['j7f_diciembre'];
	  //juzgado 7 de familia id:7
	  $idjuzgado        = 7;
	  
	  
	  $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j7f_enero','$j7f_febrero','$j7f_marzo', '$j7f_abril', '$j7f_mayo', '$j7f_junio', '$j7f_julio', '$j7f_agosto', '$j7f_septiembre', '$j7f_octubre', '$j7f_noviembre', '$j7f_diciembre')");
	  		$registrar->execute(); 	
	 
	  
	  //tomar los valores de los juzgados civiles de circuito
	  
	  $j1c_enero        = $_POST['j1c_enero'];
	  $j1c_febrero      = $_POST['j1c_febrero'];
	  $j1c_marzo        = $_POST['j1c_marzo'];
	  $j1c_abril        = $_POST['j1c_abril'];
	  $j1c_mayo         = $_POST['j1c_mayo'];
	  $j1c_junio        = $_POST['j1c_junio'];
	  $j1c_julio        = $_POST['j1c_julio'];
	  $j1c_agosto       = $_POST['j1c_agosto'];
	  $j1c_septiembre   = $_POST['j1c_septiembre'];
	  $j1c_octubre	    = $_POST['j1c_octubre'];
	  $j1c_noviembre    = $_POST['j1c_noviembre'];
	  $j1c_diciembre	= $_POST['j1c_diciembre'];
	   //juzgado 1 de civil circuito id:8
	  $idjuzgado        = 8;
	  
	  
	  $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j1c_enero','$j1c_febrero','$j1c_marzo', '$j1c_abril', '$j1c_mayo', '$j1c_junio', '$j1c_julio', '$j1c_agosto', '$j1c_septiembre', '$j1c_octubre', '$j1c_noviembre', '$j1c_diciembre')");
	  		$registrar->execute(); 	
	  
	  
	  $j2c_enero        = $_POST['j2c_enero'];
	  $j2c_febrero      = $_POST['j2c_febrero'];
	  $j2c_marzo        = $_POST['j2c_marzo'];
	  $j2c_abril        = $_POST['j2c_abril'];
	  $j2c_mayo         = $_POST['j2c_mayo'];
	  $j2c_junio        = $_POST['j2c_junio'];
	  $j2c_julio        = $_POST['j2c_julio'];
	  $j2c_agosto       = $_POST['j2c_agosto'];
	  $j2c_septiembre   = $_POST['j2c_septiembre'];
	  $j2c_octubre	    = $_POST['j2c_octubre'];
	  $j2c_noviembre    = $_POST['j2c_noviembre'];
	  $j2c_diciembre	= $_POST['j2c_diciembre'];
	   //juzgado 2 de civil circuito id:9
	  $idjuzgado        = 9;
	  
	  
	  $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j2c_enero','$j2c_febrero','$j2c_marzo', '$j1c_abril', '$j2c_mayo', '$j2c_junio', '$j2c_julio', '$j2c_agosto', '$j2c_septiembre', '$j2c_octubre', '$j2c_noviembre', '$j2c_diciembre')");
	  		$registrar->execute(); 	
	  
	  $j3c_enero        = $_POST['j3c_enero'];
	  $j3c_febrero      = $_POST['j3c_febrero'];
	  $j3c_marzo        = $_POST['j3c_marzo'];
	  $j3c_abril        = $_POST['j3c_abril'];
	  $j3c_mayo         = $_POST['j3c_mayo'];
	  $j3c_junio        = $_POST['j3c_junio'];
	  $j3c_julio        = $_POST['j3c_julio'];
	  $j3c_agosto       = $_POST['j3c_agosto'];
	  $j3c_septiembre   = $_POST['j3c_septiembre'];
	  $j3c_octubre		= $_POST['j3c_octubre'];
	  $j3c_noviembre    = $_POST['j3c_noviembre'];
	  $j3c_diciembre	= $_POST['j3c_diciembre'];
	  //juzgado 3 de civil circuito id:10
	  $idjuzgado        = 10;
	  
	  
	  $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j3c_enero','$j3c_febrero','$j3c_marzo', '$j3c_abril', '$j3c_mayo', '$j3c_junio', '$j3c_julio', '$j3c_agosto', '$j3c_septiembre', '$j3c_octubre', '$j3c_noviembre', '$j3c_diciembre')");
	  		$registrar->execute(); 	  
	  
	  
	  $j4c_enero        = $_POST['j4c_enero'];
	  $j4c_febrero      = $_POST['j4c_febrero'];
	  $j4c_marzo        = $_POST['j4c_marzo'];
	  $j4c_abril        = $_POST['j4c_abril'];
	  $j4c_mayo         = $_POST['j4c_mayo'];
	  $j4c_junio        = $_POST['j4c_junio'];
	  $j4c_julio        = $_POST['j4c_julio'];
	  $j4c_agosto       = $_POST['j4c_agosto'];
	  $j4c_septiembre   = $_POST['j4c_septiembre'];
	  $j4c_octubre      = $_POST['j4c_octubre'];
	  $j4c_noviembre    = $_POST['j4c_noviembre'];
	  $j4c_diciembre	= $_POST['j4c_diciembre'];
	  //juzgado 4 de civil circuito id:11
	  $idjuzgado        = 11;
	  
	  
	  $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j4c_enero','$j4c_febrero','$j4c_marzo', '$j4c_abril', '$j4c_mayo', '$j4c_junio', '$j4c_julio', '$j4c_agosto', '$j4c_septiembre', '$j4c_octubre', '$j4c_noviembre', '$j4c_diciembre')");
	  		$registrar->execute(); 
	  
	  
	  $j5c_enero        = $_POST['j5c_enero'];
	  $j5c_febrero      = $_POST['j5c_febrero'];
	  $j5c_marzo        = $_POST['j5c_marzo'];
	  $j5c_abril        = $_POST['j5c_abril'];
	  $j5c_mayo         = $_POST['j5c_mayo'];
	  $j5c_junio        = $_POST['j5c_junio'];
	  $j5c_julio        = $_POST['j5c_julio'];
	  $j5c_agosto       = $_POST['j5c_agosto'];
	  $j5c_septiembre   = $_POST['j5c_septiembre'];
	  $j5c_octubre	    = $_POST['j5c_octubre'];
	  $j5c_noviembre    = $_POST['j5c_noviembre'];
	  $j5c_diciembre	= $_POST['j5c_diciembre'];
	  //juzgado 5 de civil circuito id:12
	  $idjuzgado        = 12;
	  
	  
	  $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j5c_enero','$j5c_febrero','$j5c_marzo', '$j4c_abril', '$j5c_mayo', '$j5c_junio', '$j5c_julio', '$j5c_agosto', '$j5c_septiembre', '$j5c_octubre', '$j5c_noviembre', '$j5c_diciembre')");
	  		$registrar->execute();
	  
	  $j6c_enero        = $_POST['j6c_enero'];
	  $j6c_febrero      = $_POST['j6c_febrero'];
	  $j6c_marzo        = $_POST['j6c_marzo'];
	  $j6c_abril        = $_POST['j6c_abril'];
	  $j6c_mayo         = $_POST['j6c_mayo'];
	  $j6c_junio        = $_POST['j6c_junio'];
	  $j6c_julio        = $_POST['j6c_julio'];
	  $j6c_agosto       = $_POST['j6c_agosto'];
	  $j6c_septiembre   = $_POST['j6c_septiembre'];
	  $j6c_octubre	    = $_POST['j6c_octubre'];
	  $j6c_noviembre    = $_POST['j6c_noviembre'];
	  $j6c_diciembre	= $_POST['j6c_diciembre'];
	  //juzgado 6 de civil circuito id:13
	  $idjuzgado        = 13;
	  
	  
	  $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j6c_enero','$j6c_febrero','$j6c_marzo', '$j6c_abril', '$j6c_mayo', '$j6c_junio', '$j6c_julio', '$j6c_agosto', '$j6c_septiembre', '$j6c_octubre', '$j6c_noviembre', '$j6c_diciembre')");
	  		$registrar->execute();
	  
	  
	  //tomar los valores de los juzgados civiles de circuito municipal
	  
	  $j1cm_enero        = $_POST['j1cm_enero'];
	  $j1cm_febrero      = $_POST['j1cm_febrero'];
	  $j1cm_marzo        = $_POST['j1cm_marzo'];
	  $j1cm_abril        = $_POST['j1cm_abril'];
	  $j1cm_mayo         = $_POST['j1cm_mayo'];
	  $j1cm_junio        = $_POST['j1cm_junio'];
	  $j1cm_julio        = $_POST['j1cm_julio'];
	  $j1cm_agosto       = $_POST['j1cm_agosto'];
	  $j1cm_septiembre   = $_POST['j1cm_septiembre'];
	  $j1cm_octubre	     = $_POST['j1cm_octubre'];
	  $j1cm_noviembre    = $_POST['j1cm_noviembre'];
	  $j1cm_diciembre	 = $_POST['j1cm_diciembre'];
	  //juzgado 1 de civil circuito municipal id:14
	  $idjuzgado        = 14;
	  
	  
	  $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j1cm_enero','$j1cm_febrero','$j1cm_marzo', '$j1cm_abril', '$j1cm_mayo', '$j1cm_junio', '$j1cm_julio', '$j1cm_agosto', '$j1cm_septiembre', '$j1cm_octubre', '$j1cm_noviembre', '$j1cm_diciembre')");
	  		$registrar->execute();
	  
	  
	  
	  $j2cm_enero        = $_POST['j2cm_enero'];
	  $j2cm_febrero      = $_POST['j2cm_febrero'];
	  $j2cm_marzo        = $_POST['j2cm_marzo'];
	  $j2cm_abril        = $_POST['j2cm_abril'];
	  $j2cm_mayo         = $_POST['j2cm_mayo'];
	  $j2cm_junio        = $_POST['j2cm_junio'];
	  $j2cm_julio        = $_POST['j2cm_julio'];
	  $j2cm_agosto       = $_POST['j2cm_agosto'];
	  $j2cm_septiembre   = $_POST['j2cm_septiembre'];
	  $j2cm_octubre		 = $_POST['j2cm_octubre'];
	  $j2cm_noviembre    = $_POST['j2cm_noviembre'];
	  $j2cm_diciembre	 = $_POST['j2cm_diciembre'];
	  //juzgado 2 de civil circuito municipal id:15
	  $idjuzgado        = 15;
	  
	  
	 $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j2cm_enero','$j2cm_febrero','$j2cm_marzo', '$j2cm_abril', '$j2cm_mayo', '$j2cm_junio', '$j2cm_julio', '$j2cm_agosto', '$j2cm_septiembre', '$j2cm_octubre', '$j2cm_noviembre', '$j2cm_diciembre')");
	  		$registrar->execute();
	  
	  $j3cm_enero        = $_POST['j3cm_enero'];
	  $j3cm_febrero      = $_POST['j3cm_febrero'];
	  $j3cm_marzo        = $_POST['j3cm_marzo'];
	  $j3cm_abril        = $_POST['j3cm_abril'];
	  $j3cm_mayo         = $_POST['j3cm_mayo'];
	  $j3cm_junio        = $_POST['j3cm_junio'];
	  $j3cm_julio        = $_POST['j3cm_julio'];
	  $j3cm_agosto       = $_POST['j3cm_agosto'];
	  $j3cm_septiembre   = $_POST['j3cm_septiembre'];
	  $j3cm_octubre	     = $_POST['j3cm_octubre'];
	  $j3cm_noviembre    = $_POST['j3cm_noviembre'];
	  $j3cm_diciembre	 = $_POST['j3cm_diciembre'];
	   //juzgado 3 de civil circuito municipal id:16
	  $idjuzgado        = 16;
	  
	  
	 $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j3cm_enero','$j3cm_febrero','$j3cm_marzo', '$j3cm_abril', '$j3cm_mayo', '$j3cm_junio', '$j3cm_julio', '$j3cm_agosto', '$j3cm_septiembre', '$j3cm_octubre', '$j3cm_noviembre', '$j3cm_diciembre')");
	  		$registrar->execute();
	  
	  
	  $j4cm_enero        = $_POST['j4cm_enero'];
	  $j4cm_febrero      = $_POST['j4cm_febrero'];
	  $j4cm_marzo        = $_POST['j4cm_marzo'];
	  $j4cm_abril        = $_POST['j4cm_abril'];
	  $j4cm_mayo         = $_POST['j4cm_mayo'];
	  $j4cm_junio        = $_POST['j4cm_junio'];
	  $j4cm_julio        = $_POST['j4cm_julio'];
	  $j4cm_agosto       = $_POST['j4cm_agosto'];
	  $j4cm_septiembre   = $_POST['j4cm_septiembre'];
	  $j4cm_octubre	     = $_POST['j4cm_octubre'];
	  $j4cm_noviembre    = $_POST['j4cm_noviembre'];
	  $j4cm_diciembre	= $_POST['j4cm_diciembre'];
	  //juzgado 4 de civil circuito municipal id:17
	  $idjuzgado        = 17;
	  
	  
	 $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j4cm_enero','$j4cm_febrero','$j4cm_marzo', '$j4cm_abril', '$j4cm_mayo', '$j4cm_junio', '$j4cm_julio', '$j4cm_agosto', '$j4cm_septiembre', '$j4cm_octubre', '$j4cm_noviembre', '$j4cm_diciembre')");
	  		$registrar->execute();
	  
	  $j5cm_enero        = $_POST['j5cm_enero'];
	  $j5cm_febrero      = $_POST['j5cm_febrero'];
	  $j5cm_marzo        = $_POST['j5cm_marzo'];
	  $j5cm_abril        = $_POST['j5cm_abril'];
	  $j5cm_mayo         = $_POST['j5cm_mayo'];
	  $j5cm_junio        = $_POST['j5cm_junio'];
	  $j5cm_julio        = $_POST['j5cm_julio'];
	  $j5cm_agosto       = $_POST['j5cm_agosto'];
	  $j5cm_septiembre   = $_POST['j5cm_septiembre'];
	  $j5cm_octubre	     = $_POST['j5cm_octubre'];
	  $j5cm_noviembre    = $_POST['j5cm_noviembre'];
	  $j5cm_diciembre	 = $_POST['j5cm_diciembre'];
	  //juzgado 5 de civil circuito municipal id:18
	  $idjuzgado        = 18;
	  
	  
	 $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j5cm_enero','$j5cm_febrero','$j5cm_marzo', '$j5cm_abril', '$j5cm_mayo', '$j5cm_junio', '$j5cm_julio', '$j5cm_agosto', '$j5cm_septiembre', '$j5cm_octubre', '$j5cm_noviembre', '$j5cm_diciembre')");
	  		$registrar->execute();
	  
	  
	  $j6cm_enero        = $_POST['j6cm_enero'];
	  $j6cm_febrero      = $_POST['j6cm_febrero'];
	  $j6cm_marzo        = $_POST['j6cm_marzo'];
	  $j6cm_abril        = $_POST['j6cm_abril'];
	  $j6cm_mayo         = $_POST['j6cm_mayo'];
	  $j6cm_junio        = $_POST['j6cm_junio'];
	  $j6cm_julio        = $_POST['j6cm_julio'];
	  $j6cm_agosto       = $_POST['j6cm_agosto'];
	  $j6cm_septiembre   = $_POST['j6cm_septiembre'];
	  $j6cm_octubre	     = $_POST['j6cm_octubre'];
	  $j6cm_noviembre    = $_POST['j6cm_noviembre'];
	  $j6cm_diciembre	 = $_POST['j6cm_diciembre'];
	  //juzgado 6 de civil circuito municipal id:19
	  $idjuzgado        = 19;
	  
	  
	 $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j6cm_enero','$j6cm_febrero','$j6cm_marzo', '$j6cm_abril', '$j6cm_mayo', '$j6cm_junio', '$j6cm_julio', '$j6cm_agosto', '$j6cm_septiembre', '$j6cm_octubre', '$j6cm_noviembre', '$j6cm_diciembre')");
	  		$registrar->execute();
	  
	  
	  $j7cm_enero        = $_POST['j7cm_enero'];
	  $j7cm_febrero      = $_POST['j7cm_febrero'];
	  $j7cm_marzo        = $_POST['j7cm_marzo'];
	  $j7cm_abril        = $_POST['j7cm_abril'];
	  $j7cm_mayo         = $_POST['j7cm_mayo'];
	  $j7cm_junio        = $_POST['j7cm_junio'];
	  $j7cm_julio        = $_POST['j7cm_julio'];
	  $j7cm_agosto       = $_POST['j7cm_agosto'];
	  $j7cm_septiembre   = $_POST['j7cm_septiembre'];
	  $j7cm_octubre	     = $_POST['j7cm_octubre'];
	  $j7cm_noviembre    = $_POST['j7cm_noviembre'];
	  $j7cm_diciembre	 = $_POST['j7cm_diciembre'];
	   //juzgado 7 de civil circuito municipal id:20
	  $idjuzgado        = 20;
	  
	  
	 $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j7cm_enero','$j7cm_febrero','$j7cm_marzo', '$j7cm_abril', '$j7cm_mayo', '$j7cm_junio', '$j7cm_julio', '$j7cm_agosto', '$j7cm_septiembre', '$j7cm_octubre', '$j7cm_noviembre', '$j7cm_diciembre')");
	  		$registrar->execute();
	  
	  $j8cm_enero        = $_POST['j8cm_enero'];
	  $j8cm_febrero      = $_POST['j8cm_febrero'];
	  $j8cm_marzo        = $_POST['j8cm_marzo'];
	  $j8cm_abril        = $_POST['j8cm_abril'];
	  $j8cm_mayo         = $_POST['j8cm_mayo'];
	  $j8cm_junio        = $_POST['j8cm_junio'];
	  $j8cm_julio        = $_POST['j8cm_julio'];
	  $j8cm_agosto       = $_POST['j8cm_agosto'];
	  $j8cm_septiembre   = $_POST['j8cm_septiembre'];
	  $j8cm_octubre	     = $_POST['j8cm_octubre'];
	  $j8cm_noviembre    = $_POST['j8cm_noviembre'];
	  $j8cm_diciembre	 = $_POST['j8cm_diciembre'];
	  //juzgado 8 de civil circuito municipal id:21
	  $idjuzgado        = 21;
	  
	  
	 $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j8cm_enero','$j8cm_febrero','$j8cm_marzo', '$j8cm_abril', '$j8cm_mayo', '$j8cm_junio', '$j8cm_julio', '$j8cm_agosto', '$j8cm_septiembre', '$j8cm_octubre', '$j8cm_noviembre', '$j8cm_diciembre')");
	  		$registrar->execute();
	  
	  $j9cm_enero        = $_POST['j9cm_enero'];
	  $j9cm_febrero      = $_POST['j9cm_febrero'];
	  $j9cm_marzo        = $_POST['j9cm_marzo'];
	  $j9cm_abril        = $_POST['j9cm_abril'];
	  $j9cm_mayo         = $_POST['j9cm_mayo'];
	  $j9cm_junio        = $_POST['j9cm_junio'];
	  $j9cm_julio        = $_POST['j9cm_julio'];
	  $j9cm_agosto       = $_POST['j9cm_agosto'];
	  $j9cm_septiembre   = $_POST['j9cm_septiembre'];
	  $j9cm_octubre	     = $_POST['j9cm_octubre'];
	  $j9cm_noviembre    = $_POST['j9cm_noviembre'];
	  $j9cm_diciembre	 = $_POST['j9cm_diciembre'];
	  //juzgado 9 de civil circuito municipal id:22
	  $idjuzgado        = 22;
	  
	  
	 $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j9cm_enero','$j9cm_febrero','$j9cm_marzo', '$j9cm_abril', '$j9cm_mayo', '$j9cm_junio', '$j9cm_julio', '$j9cm_agosto', '$j9cm_septiembre', '$j9cm_octubre', '$j9cm_noviembre', '$j9cm_diciembre')");
	  		$registrar->execute();
	  
	  $j10cm_enero        = $_POST['j10cm_enero'];
	  $j10cm_febrero      = $_POST['j10cm_febrero'];
	  $j10cm_marzo        = $_POST['j10cm_marzo'];
	  $j10cm_abril        = $_POST['j10cm_abril'];
	  $j10cm_mayo         = $_POST['j10cm_mayo'];
	  $j10cm_junio        = $_POST['j10cm_junio'];
	  $j10cm_julio        = $_POST['j10cm_julio'];
	  $j10cm_agosto       = $_POST['j10cm_agosto'];
	  $j10cm_septiembre   = $_POST['j10cm_septiembre'];
	  $j10cm_octubre	  = $_POST['j10cm_octubre'];
	  $j10cm_noviembre    = $_POST['j10cm_noviembre'];
	  $j10cm_diciembre    = $_POST['j10cm_diciembre'];
	  //juzgado 10 de civil circuito municipal id:23
	  $idjuzgado        = 23;
	  
	  
	 $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j10cm_enero','$j10cm_febrero','$j10cm_marzo', '$j10cm_abril', '$j10cm_mayo', '$j10cm_junio', '$j10cm_julio', '$j10cm_agosto', '$j10cm_septiembre', '$j10cm_octubre', '$j10cm_noviembre', '$j10cm_diciembre')");
	  		$registrar->execute();
	  
	  $j11cm_enero        = $_POST['j11cm_enero'];
	  $j11cm_febrero      = $_POST['j11cm_febrero'];
	  $j11cm_marzo        = $_POST['j11cm_marzo'];
	  $j11cm_abril        = $_POST['j11cm_abril'];
	  $j11cm_mayo         = $_POST['j11cm_mayo'];
	  $j11cm_junio        = $_POST['j11cm_junio'];
	  $j11cm_julio        = $_POST['j11cm_julio'];
	  $j11cm_agosto       = $_POST['j11cm_agosto'];
	  $j11cm_septiembre   = $_POST['j11cm_septiembre'];
	  $j11cm_octubre	  = $_POST['j11cm_octubre'];	  
	  $j11cm_noviembre    = $_POST['j11cm_noviembre'];
	  $j11cm_diciembre    = $_POST['j11cm_diciembre'];
	  //juzgado 11 de civil circuito municipal id:24
	  $idjuzgado        = 24;
	  
	  
	 $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j11cm_enero','$j11cm_febrero','$j11cm_marzo', '$j11cm_abril', '$j11cm_mayo', '$j11cm_junio', '$j11cm_julio', '$j11cm_agosto', '$j11cm_septiembre', '$j11cm_octubre', '$j11cm_noviembre', '$j11cm_diciembre')");
	  		$registrar->execute();
	  
	  $j12cm_enero        = $_POST['j12cm_enero'];
	  $j12cm_febrero      = $_POST['j12cm_febrero'];
	  $j12cm_marzo        = $_POST['j12cm_marzo'];
	  $j12cm_abril        = $_POST['j12cm_abril'];
	  $j12cm_mayo         = $_POST['j12cm_mayo'];
	  $j12cm_junio        = $_POST['j12cm_junio'];
	  $j12cm_julio        = $_POST['j12cm_julio'];
	  $j12cm_agosto       = $_POST['j12cm_agosto'];
	  $j12cm_septiembre   = $_POST['j12cm_septiembre'];
	  $j12cm_octubre      = $_POST['j12cm_octubre'];
	  $j12cm_noviembre    = $_POST['j12cm_noviembre'];
	  $j12cm_diciembre    = $_POST['j12cm_diciembre'];
	   //juzgado 12 de civil circuito municipal id:25
	  $idjuzgado        = 25;
	  
	  
	 $registrar = $this->db->prepare("INSERT INTO informe_gestion 		(ano,idjuzgado,enero,febrero,marzo,abril,mayo,junio,julio,
agosto,septiembre,octubre,noviembre,diciembre)
values ('$ano','$idjuzgado','$j12cm_enero','$j12cm_febrero','$j12cm_marzo', '$j12cm_abril', '$j12cm_mayo', '$j12cm_junio', '$j12cm_julio', '$j12cm_agosto', '$j12cm_septiembre', '$j12cm_octubre', '$j12cm_noviembre', '$j12cm_diciembre')");
	  		$registrar->execute();
	  
	  
	  
	  date_default_timezone_set('America/Bogota'); 

      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Resgistr&oacute; informe de gesti&oacute;n';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Resgistr&oacute; informe de gesti&oacute;n ".$fechal." "."a las: ".$hora;
	  
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	  $tipolog=1;

      $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();
	  
	  		  		

       print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=6"</script>';

     
  }




 /***********************************************************************************/

  /*------------------------------ Consultar Informe Gestiï¿½n --------------------------------*/

  /***********************************************************************************/

  public function consultarInformeGestion()

  {
  
   $ano=$_GET['nombre'];    

    $listar = $this->db->prepare("select ig.id,ig.ano,juz.nombre as juzgado,are.nombre as area,ig.ano,ig.enero,ig.febrero,ig.marzo,ig.abril,ig.mayo,ig.junio,ig.julio,
ig.agosto,ig.septiembre,ig.octubre,ig.noviembre,ig.diciembre, ig.idjuzgado as idjuz
from informe_gestion ig
inner join pa_juzgado juz on (ig.idjuzgado=juz.id)
inner join pa_area are on (are.id=juz.idarea)
where ig.ano='$ano'
order by ig.id;");

  $listar->execute();

  return $listar;

  

  
  }








 /***********************************************************************************/

  /*------------------------------ Modificar Informe Gestiï¿½n --------------------------------*/

  /***********************************************************************************/

  public function modificarInformeGestion()

  {

	 
	  	   $ano = $_GET['nombre'];
	       $cantidad_juzgados= 25;
		   $i=1;
		   
		   
		   while ($i<=$cantidad_juzgados)
		   {
		    
			$enero 		= $_POST['enero'.$i];
			$febrero 	= $_POST['febrero'.$i];
			$marzo 		= $_POST['marzo'.$i];
			$abril 		= $_POST['abril'.$i];
			$mayo 		= $_POST['mayo'.$i];
			$junio 		= $_POST['junio'.$i];
			$julio 		= $_POST['julio'.$i];
			$agosto 	= $_POST['agosto'.$i];
			$septiembre = $_POST['septiembre'.$i];
			$octubre 	= $_POST['octubre'.$i];
			$noviembre 	= $_POST['noviembre'.$i];
			$diciembre 	= $_POST['diciembre'.$i];
			
			$actualizar = $this->db->prepare("UPDATE informe_gestion SET enero='$enero',febrero='$febrero',marzo='$marzo',abril='$abril',mayo='$mayo',junio='$junio',julio='$julio',agosto='$agosto',septiembre='$septiembre',octubre='$octubre',noviembre='$noviembre',diciembre='$diciembre' WHERE idjuzgado='$i' AND ano='$ano'");
	  		$actualizar->execute(); 
	
			$i=$i+1;
			unset($enero,$febrero,$marzo,$abril,$mayo,$junio,$julio,$agosto,$septiembre,$octubre,$noviembre,$diciembre);
		   
		   }
		   
	  
	  
	  date_default_timezone_set('America/Bogota'); 

      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Actualiz&oacute; informe de gesti&oacute;n';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Actualiz&oacute; informe de gesti&oacute;n ".$fechal." "."a las: ".$hora;
	  
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	  $tipolog=1;

      $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();
	  
	  		  		

       print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=7"</script>';

     

	  
	  

  }













  /***********************************************************************************/

  /*------------------------------  Listar Todos los seguimientos  --------------------*/

  /***********************************************************************************/

  public function listarSeguimientos()

  {

  

  $listar = $this->db->prepare("select segui.id,usuarios.empleado as responsable, segui.fecha,juzgado.nombre,segui.desde,segui.hasta,segui.procesos,segui.consecutivo,
segui.procesos_faltantes,segui.tiempo_incumplimiento
from seguimiento as segui
inner join pa_usuario as usuarios on (usuarios.id=segui.idusuario)
inner join pa_juzgado as juzgado  on (juzgado.id=segui.idjuzgado) ");

  $listar->execute();

  return $listar;

  

  }

  /***********************************************************************************/

  /*---------------------------  Listar usuarios empleados del ï¿½rea archivo --------------------*/

  /***********************************************************************************/

  public function listarEmpleados()

  {

  

  $listar = $this->db->prepare("SELECT * FROM pa_usuario where idperfil=3 and idareaempleado=1 order by empleado ");

  $listar->execute();

  return $listar;

  

  }
  /***********************************************************************************/

  /*---------------------------  Listar usuarios empleados con el jef de ï¿½rea archivo --------------------*/

  /***********************************************************************************/

  public function listarEmpleadosJefe()

  {

  

  $listar = $this->db->prepare("SELECT * FROM pa_usuario where idareaempleado=1 order by empleado ");

  $listar->execute();

  return $listar;

  

  }
  
    /***********************************************************************************/

  /*------------------------------  Listar juzgados  ---------------------------------*/

  /***********************************************************************************/

  public function listarJuzgados()

  {

  

  $listar = $this->db->prepare("SELECT * FROM pa_juzgado");

  $listar->execute();

  return $listar;

  

  }
  
/***********************************************************************************/

  /*------------------------------  Listar Aï¿½os Seguimiento -------------------------*/

  /***********************************************************************************/

  public function listarAno()

  {

  

  $listar = $this->db->prepare("SELECT DISTINCT ano from informe_gestion");

  $listar->execute();

  return $listar;

  

  }
  

 	

	/***********************************************************************************/

	/*----------------------------  Actualizar Datos Seguimiento ------------------------*/

	/***********************************************************************************/

	public function updateSeguimiento()

	{

	   $id = $_POST['id'];
	  
	  $idusuario = $_POST['responsable'];

	   $fecha = $_POST['fecha'];

	  $idjuzgado = $_POST['juzgado'];

	  $desde = $_POST['desde'];

	  $hasta = $_POST['hasta'];
	  
	  $procesos = $_POST['procesos'];
	   	  
	  $consecutivo = $_POST['consecutivo'];
	  
	  $r_gancho = $_POST['r_gancho'];
	  
	  $r_coser = $_POST['r_coser'];
	  
	  $r_foliar = $_POST['r_foliar'];
	  
	  $r_siglo = $_POST['r_siglo'];
	  
	  $r_saidoj = $_POST['r_saidoj'];
	  
	  if($r_gancho=='on')
	  {
	   $r_gancho =1;
	  }
	  else
	  {
	   $r_gancho =0;
	  }
	  if($r_coser=='on')
	  {
	   $r_coser =1;
	  }
	  else
	  {
	   $r_coser =0;
	  }
	  if($r_foliar=='on')
	  {
	   $r_foliar =1;
	  }
	  else
	  {
	   $r_foliar =0;
	  }
	  if($r_siglo=='on')
	  {
	   $r_siglo =1;
	  }
	  else
	  {
	   $r_siglo =0;
	  }
	  if($r_saidoj=='on')
	  {
	   $r_saidoj =1;
	  }
	  else
	  {
	   $r_saidoj =0;
	  }
	  
	  $procesos_faltantes = $_POST['procesos_faltantes'];
	  
	  $causales_incumplimiento = $_POST['causales_incumplimiento'];
	  
	  $tiempo_incumplimiento = $_POST['tiempo_incumplimiento'];
	  
	  $observaciones = $_POST['observaciones'];

      $observaciones_revisor = $_POST['observaciones_revisor'];
	  
	    
	  date_default_timezone_set('America/Bogota'); 

      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Modific&oacute; Seguimiento';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Modifico un nuevo seguimiento ".$fechal." "."a las: ".$hora;
	  
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	 $tipolog=1;

      $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();
	

	 $modificare = $this->db->prepare("UPDATE seguimiento SET  idusuario = '$idusuario', fecha = '$fecha', idjuzgado = '$idjuzgado', desde = '$desde', hasta = '$hasta', procesos = '$procesos', consecutivo = '$consecutivo', r_gancho = '$r_gancho', r_coser = '$r_coser', r_foliar = '$r_foliar', r_siglo = '$r_siglo', r_saidoj = '$r_saidoj' , procesos_faltantes = '$procesos_faltantes', causales_incumplimiento = '$causales_incumplimiento', tiempo_incumplimiento = '$tiempo_incumplimiento', observaciones = '$observaciones', observaciones_revisor = '$observaciones_revisor' WHERE id = '$id'");  

  $modificare->execute();

  	

	$resultado = $modificare->rowCount();

      if ($resultado)

      {			

       print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';

	   

      }

     
   } 

   /***********************************************************************************/

	/*------------------------------ Eliminar  Seguimiento ---------------------------------*/

	/***********************************************************************************/	

	public function eliminarSeguimiento()

	{

		$id=$_GET['nombre'];
	    date_default_timezone_set('America/Bogota'); 
        $fechaa=date('Y-m-d g:ia');
        $horaa=explode(' ',$fechaa);
        $fechal=$horaa[0];
        $hora=$horaa[1]; 
		
	    $accion='Elimin&oacute; Seguimiento';
	    $idres = $_SESSION['idUsuario'];
        $detalle=$_SESSION['nombre']." "."Elimino un seguimiento ".$fechal." "."a las: ".$hora;
	 
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	    $tipolog=1;

        $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

        $insertarlog->execute();
	


		

	if($_SESSION['id']!="")
   {

   		$consulta = $this->db->prepare("DELETE FROM seguimiento WHERE id='$id'");

		$consulta->execute();

		$resultado = $consulta->rowCount();

		

		 if ($resultado)

        {

			  $_SESSION['elemento'] = "Seguimiento eliminado exitosamente";

	          $_SESSION['elem_conscontrato'] = true;  

		}	

		echo '<script languaje="Javascript">location.href="index.php?controller=archivo&action=listarSeguimientos"</script>';

		

	}

	
}

   /***********************************************************************************/

	/*--------------------------- Eliminar  Inventario Entrante ---------------------------------*/

	/***********************************************************************************/	

	public function eliminarInventarioEntrante()

	{

		$id=$_GET['nombre'];
	    date_default_timezone_set('America/Bogota'); 
        $fechaa=date('Y-m-d g:ia');
        $horaa=explode(' ',$fechaa);
        $fechal=$horaa[0];
        $hora=$horaa[1]; 
		
	    $accion='Elimin&oacute; Acta de recibido';
	    $idres = $_SESSION['idUsuario'];
        $detalle=$_SESSION['nombre']." "."Elimino Acta de recibido ".$fechal." "."a las: ".$hora;
	 
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	    $tipolog=1;

        $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

        $insertarlog->execute();
	


		

	if($_SESSION['id']!="")
   {

   		$consulta = $this->db->prepare("DELETE FROM inventario WHERE id='$id'");

		$consulta->execute();

		$resultado = $consulta->rowCount();

		

		 if ($resultado)

        {

			  $_SESSION['elemento'] = "Acta de recibido eliminada exitosamente";

	          $_SESSION['elem_conscontrato'] = true;  

		}	

		echo '<script languaje="Javascript">location.href="index.php?controller=archivo&action=listRecibidoInventario"</script>';

		

	}

	
}



/***********************************************************************************/

	/*--------------------------- Eliminar  Inventario Saliente ---------------------------------*/

	/***********************************************************************************/	

	public function eliminarInventarioSaliente()

	{

		$id=$_GET['nombre'];
	    date_default_timezone_set('America/Bogota'); 
        $fechaa=date('Y-m-d g:ia');
        $horaa=explode(' ',$fechaa);
        $fechal=$horaa[0];
        $hora=$horaa[1]; 
		
	    $accion='Elimin&oacute; Acta de entrega';
	    $idres = $_SESSION['idUsuario'];
        $detalle=$_SESSION['nombre']." "."Elimino Acta de entrega ".$fechal." "."a las: ".$hora;
	 
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	    $tipolog=1;

        $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

        $insertarlog->execute();
	


		

	if($_SESSION['id']!="")
   {

   		$consulta = $this->db->prepare("DELETE FROM inventario WHERE id='$id'");

		$consulta->execute();

		$resultado = $consulta->rowCount();

		

		 if ($resultado)

        {

			  $_SESSION['elemento'] = "Acta de entrega eliminada exitosamente";

	          $_SESSION['elem_conscontrato'] = true;  

		}	

		echo '<script languaje="Javascript">location.href="index.php?controller=archivo&action=listEntregaInventario"</script>';

		

	}

	
}



/***********************************************************************************/

  /*------------------------------ Listar  Seguimiento Especifico ---------------------*/

  /***********************************************************************************/	

 public function listarSeguimiento()

	{

		 $id=$_GET['nombre'];

		$consulta = $this->db->prepare("select segui.id,segui.idjuzgado,usuarios.empleado, segui.fecha,juzgado.nombre as juzgadonom,segui.desde,segui.hasta,segui.procesos,segui.consecutivo,
segui.r_gancho,segui.r_coser,segui.r_foliar,segui.r_siglo,segui.r_saidoj,segui.procesos_faltantes,segui.causales_incumplimiento,segui.tiempo_incumplimiento,
segui.observaciones,segui.observaciones_revisor,segui.causales_incumplimiento as causales
from seguimiento as segui
inner join pa_usuario as usuarios on (usuarios.id=segui.idusuario)
inner join pa_juzgado as juzgado  on (juzgado.id=segui.idjuzgado)  WHERE segui.id='$id'");

		$consulta->execute();

		return $consulta;

	}  




 /***********************************************************************************/

  /*------------------------- Registrar Inventario Entrante ----------------------------*/

  /***********************************************************************************/

  public function registrarInventarioEntrante()

  {

	 
	  $idtipoinventario = $_POST['tipo_inventario'];
	  
	  $consecutivo_acta = $_POST['consecutivo_acta'];

	  $fecha_acta = $_POST['fecha_acta'];
	  
	  $idjuzgado = $_POST['idjuzgado'];
	  
	  $responsable = $_POST['responsable'];
	  
	  $observaciones = $_POST['observaciones'];	
	  
	  $cantidad_prestamo = $_POST['cantidad_prestamo'];	
	  
	  $nombre_prestamo = $_POST['nombre_prestamo'];	
	  
	  $observaciones_prestamo = $_POST['observaciones_prestamo'];	  
	  
	   //$mes = $_POST['mes'];
	  $j=$i=0;
	  $enero=$febrero=$marzo=$abril=$mayo=$junio=$julio=$agosto=$septiembre=$octubre=$noviembre=$diciembre=0;
	   
      foreach ($_POST['mes'] as $indice => $valor){ 
       	if($valor==1){
		   $enero=1;
		   }
	  	else if($valor==2){
		   $febrero=1;
		   }
		else if($valor==3){
		   $marzo=1;
		   }
		 else if($valor==4){
		   $abril=1;
		   }
		 else if($valor==5){
		   $mayo=1;
		   }
		 else if($valor==6){
		   $junio=1;
		   }
		  else if($valor==7){
		   $julio=1;
		   }
		  else if($valor==8){
		   $agosto=1;
		   }
		  else if($valor==9){
		   $septiembre=1;
		   }
		  else if($valor==10){
		   $octubre=1;
		   }
		  else if($valor==11){
		   $noviembre=1;
		   }
		  else if($valor==12){
		   $diciembre=1;
		   }    
	   }
	  
	  foreach ($_POST['ano'] as $indice1 => $valor1){ 
      $vano[$j] = $valor1;
      $j = $j+1;
      } 
	  $i=0;
	  $cont_ano= count($vano);
	  $ano= "";
	  
	  while($i<$cont_ano)
	  {
	   if($i!=0)
	   {
	    $ano = $ano.",";
	   }
	   $ano = $ano.$vano[$i];
	   $i= $i+1;
	  
	  }
	  
	 
	  $desde_caja = $_POST['desde_caja'];

	  $hasta_caja = $_POST['hasta_caja'];
	  
	  $cantidad_cajas = $_POST['cantidad_cajas'];
	  
	  $desde_expediente = $_POST['desde_expediente'];
	  
	  $hasta_expediente = $_POST['hasta_expediente'];
	  
	  $cantidad_expedientes = $_POST['cantidad_expedientes'];
	  
	  $nombre_entrega = $_POST['nombre_entrega'];
	  
	  $nombre_recibe = $_POST['nombre_recibe'];
	  
	  
	 
	  date_default_timezone_set('America/Bogota'); 

      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Resgistr&oacute; Acta Recibido';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Registro acta de recibido ".$fechal." "."a las: ".$hora;
	  
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	  $tipolog=1;

      $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();
	  
	  $registrar = $this->db->prepare("INSERT INTO inventario (idtipoinventario,consecutivo_acta,fecha_acta,idjuzgado,responsable,enero,febrero,marzo,abril,
mayo,junio,julio,agosto,septiembre,octubre,noviembre,diciembre,ano_archivar,desde_caja,hasta_caja,desde_expediente,
hasta_expediente,cantidad_expedientes,cantidad_cajas,nombre_entrega,nombre_recibe,observaciones,cantidad_expedientes_prestados,persona_presto,observaciones_prestamo,idestado_acta)
values('$idtipoinventario','$consecutivo_acta','$fecha_acta','$idjuzgado','$responsable','$enero','$febrero','$marzo',
'$abril','$mayo','$junio','$julio','$agosto','$septiembre','$octubre','$noviembre','$diciembre','$ano','$desde_caja',
'$hasta_caja','$desde_expediente','$hasta_expediente','$cantidad_expedientes','$cantidad_cajas','$nombre_entrega','$nombre_recibe','$observaciones','$cantidad_prestamo','$nombre_prestamo','$observaciones_prestamo',1)");
	  $registrar->execute(); 
	  $resultado = $registrar->rowCount();

	  $tipo_consecutivo = $_POST['tipo_consecutivo'];
	  
	  if($tipo_consecutivo==1)
	  {
	    $actualizar = $this->db->prepare("UPDATE consecutivo set consecutivo_civil=consecutivo_civil+1 where tipo='Recibido'");
        $actualizar->execute(); 
		
	  }
	  
	  if($tipo_consecutivo==2)
	  {
	    $actualizar = $this->db->prepare("UPDATE consecutivo set consecutivo_familia=consecutivo_familia+1 where tipo='Recibido'");
        $actualizar->execute(); 
		
	  }
	  
	  if($tipo_consecutivo==3)
	  {
	    $actualizar = $this->db->prepare("UPDATE consecutivo set consecutivo_municipal=consecutivo_municipal+1 where tipo='Recibido'");
        $actualizar->execute(); 
		
	  }	
	  
      if ($resultado)

      {			

       print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=3 "</script>';

      }

	  
	  

  }
  
  /***********************************************************************************/

  /*------------------------- Modificar Inventario Entrante ----------------------------*/

  /***********************************************************************************/

  public function updateInventarioEntrante()

  {

	 
	  $id = $_POST['id'];
	  
	  $consecutivo_acta = $_POST['consecutivo_acta'];

	  $fecha_acta = $_POST['fecha_acta'];
	  
	  $idjuzgado = $_POST['idjuzgado'];
	  
	  $responsable = $_POST['responsable'];
	  
	  $observaciones = $_POST['observaciones'];	  
	  
	   //$mes = $_POST['mes'];
	  $j=$i=0;
	  $enero=$febrero=$marzo=$abril=$mayo=$junio=$julio=$agosto=$septiembre=$octubre=$noviembre=$diciembre=0;
	   
      foreach ($_POST['mes'] as $indice => $valor){ 
       	if($valor==1){
		   $enero=1;
		   }
	  	else if($valor==2){
		   $febrero=1;
		   }
		else if($valor==3){
		   $marzo=1;
		   }
		 else if($valor==4){
		   $abril=1;
		   }
		 else if($valor==5){
		   $mayo=1;
		   }
		 else if($valor==6){
		   $junio=1;
		   }
		  else if($valor==7){
		   $julio=1;
		   }
		  else if($valor==8){
		   $agosto=1;
		   }
		  else if($valor==9){
		   $septiembre=1;
		   }
		  else if($valor==10){
		   $octubre=1;
		   }
		  else if($valor==11){
		   $noviembre=1;
		   }
		  else if($valor==12){
		   $diciembre=1;
		   }    
	   }
	  
	  foreach ($_POST['ano'] as $indice1 => $valor1){ 
      $vano[$j] = $valor1;
      $j = $j+1;
      } 
	  $i=0;
	  $cont_ano= count($vano);
	  $ano= "";
	  
	  while($i<$cont_ano)
	  {
	   if($i!=0)
	   {
	    $ano = $ano.",";
	   }
	   $ano = $ano.$vano[$i];
	   $i= $i+1;
	  
	  }
	  
	 
	  $desde_caja 			= $_POST['desde_caja'];

	  $hasta_caja 			= $_POST['hasta_caja'];
	  
	  $cantidad_cajas 		= $_POST['cantidad_cajas'];
	  
	  $desde_expediente 	= $_POST['desde_expediente'];
	  
	  $hasta_expediente 	= $_POST['hasta_expediente'];
	  
	  $cantidad_expedientes = $_POST['cantidad_expedientes'];
	  
	  $nombre_entrega 		= $_POST['nombre_entrega'];
	  
	  $nombre_recibe 		= $_POST['nombre_recibe'];
	  
	  $prestados			= $_POST['prestados'];
	  
	  if($prestados==1)
	  {
	   
	   $cantidad_prestamo = $_POST['cantidad_prestamo'];
	   $nombre_prestamo   = $_POST['nombre_prestamo'];
	   $observaciones_prestamo = $_POST['observaciones_prestamo'];
	  }
	  
	  
	  
	  
	 
	  date_default_timezone_set('America/Bogota'); 

      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Modific&oacute; Acta Recibido';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Modifico acta de recibido ".$fechal." "."a las: ".$hora;
	  
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	  $tipolog=1;

      $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();
	  
	  
	  if($prestados==1)
	  {
	  
	  $registrar = $this->db->prepare("UPDATE inventario SET consecutivo_acta='$consecutivo_acta',fecha_acta='$fecha_acta',idjuzgado='$idjuzgado',responsable='$responsable',enero='$enero',febrero='$febrero',marzo='$marzo',abril='$abril',mayo='$mayo',junio='$junio',julio='$julio',agosto='$agosto',septiembre='$septiembre',octubre='$octubre',noviembre='$noviembre',diciembre='$diciembre',ano_archivar='$ano',desde_caja='$desde_caja',hasta_caja='$hasta_caja',desde_expediente='$desde_expediente',hasta_expediente='$hasta_expediente',cantidad_expedientes='$cantidad_expedientes',cantidad_cajas='$cantidad_cajas',nombre_entrega='$nombre_entrega',nombre_recibe='$nombre_recibe', observaciones='$observaciones', cantidad_expedientes_prestados='$cantidad_prestamo', persona_presto='$nombre_prestamo', observaciones_prestamo='$observaciones_prestamo'  WHERE id='$id'");

	 }
	 else
	 {
	  $registrar = $this->db->prepare("UPDATE inventario SET consecutivo_acta='$consecutivo_acta',fecha_acta='$fecha_acta',idjuzgado='$idjuzgado',responsable='$responsable',enero='$enero',febrero='$febrero',marzo='$marzo',abril='$abril',mayo='$mayo',junio='$junio',julio='$julio',agosto='$agosto',septiembre='$septiembre',octubre='$octubre',noviembre='$noviembre',diciembre='$diciembre',ano_archivar='$ano',desde_caja='$desde_caja',hasta_caja='$hasta_caja',desde_expediente='$desde_expediente',hasta_expediente='$hasta_expediente',cantidad_expedientes='$cantidad_expedientes',cantidad_cajas='$cantidad_cajas',nombre_entrega='$nombre_entrega',nombre_recibe='$nombre_recibe', observaciones='$observaciones' WHERE id='$id'");
	 
	 } 
	  
	  
	  $registrar->execute(); 
	  $resultado = $registrar->rowCount();

		

       print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=5"</script>';

  

	  
	  

  }

  
  
  
  
  /***********************************************************************************/

  /*------------------------- Registrar Inventario Saliente ----------------------------*/

  /***********************************************************************************/

  public function registrarInventarioSaliente()

  {

	 
	  $idtipoinventario = $_POST['tipo_inventario'];
	  
	  $consecutivo_acta = $_POST['consecutivo_acta'];

	  $fecha_acta = $_POST['fecha_acta'];
	  
	  $idjuzgado = $_POST['idjuzgado'];
	  
	  $iddestinojuzgado = $_POST['iddestinojuzgado'];
	  
	  $responsable = $_POST['responsable'];	  
	  
	   //$mes = $_POST['mes'];
	  $j=$i=0;
	  $enero=$febrero=$marzo=$abril=$mayo=$junio=$julio=$agosto=$septiembre=$octubre=$noviembre=$diciembre=0;
	   
      foreach ($_POST['mes'] as $indice => $valor){ 
       	if($valor==1){
		   $enero=1;
		   }
	  	else if($valor==2){
		   $febrero=1;
		   }
		else if($valor==3){
		   $marzo=1;
		   }
		 else if($valor==4){
		   $abril=1;
		   }
		 else if($valor==5){
		   $mayo=1;
		   }
		 else if($valor==6){
		   $junio=1;
		   }
		  else if($valor==7){
		   $julio=1;
		   }
		  else if($valor==8){
		   $agosto=1;
		   }
		  else if($valor==9){
		   $septiembre=1;
		   }
		  else if($valor==10){
		   $octubre=1;
		   }
		  else if($valor==11){
		   $noviembre=1;
		   }
		  else if($valor==12){
		   $diciembre=1;
		   }    
	   }
	  
	  foreach ($_POST['ano'] as $indice1 => $valor1){ 
      $vano[$j] = $valor1;
      $j = $j+1;
      } 
	  $i=0;
	  $cont_ano= count($vano);
	  $ano= "";
	  
	  while($i<$cont_ano)
	  {
	   if($i!=0)
	   {
	    $ano = $ano.",";
	   }
	   $ano = $ano.$vano[$i];
	   $i= $i+1;
	  
	  }
	  
	 
	  $desde_caja = $_POST['desde_caja'];

	  $hasta_caja = $_POST['hasta_caja'];
	  
	  $cantidad_cajas = $_POST['cantidad_cajas'];
	  
	  $desde_expediente = $_POST['desde_expediente'];
	  
	  $hasta_expediente = $_POST['hasta_expediente'];
	  
	  $cantidad_expedientes = $_POST['cantidad_expedientes'];
	  
	  $nombre_entrega = $_POST['nombre_entrega'];
	  
	  $nombre_recibe = $_POST['nombre_recibe'];
	  
	  
	 
	  date_default_timezone_set('America/Bogota'); 

      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Resgistr&oacute; Acta Entrega';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Registro acta de entrega ".$fechal." "."a las: ".$hora;
	  
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	  $tipolog=1;

      $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();
	  
	  $registrar = $this->db->prepare("INSERT INTO inventario (idtipoinventario,consecutivo_acta,fecha_acta,idjuzgado,responsable,enero,febrero,marzo,abril,
mayo,junio,julio,agosto,septiembre,octubre,noviembre,diciembre,ano_archivar,desde_caja,hasta_caja,desde_expediente,
hasta_expediente,cantidad_expedientes,cantidad_cajas,nombre_entrega,nombre_recibe,iddestinojuzgado)
values('$idtipoinventario','$consecutivo_acta','$fecha_acta','$idjuzgado','$responsable','$enero','$febrero','$marzo',
'$abril','$mayo','$junio','$julio','$agosto','$septiembre','$octubre','$noviembre','$diciembre','$ano','$desde_caja',
'$hasta_caja','$desde_expediente','$hasta_expediente','$cantidad_expedientes','$cantidad_cajas','$nombre_entrega','$nombre_recibe','$iddestinojuzgado')");

	  $registrar->execute(); 
	  $resultado = $registrar->rowCount();

	  
      if ($resultado)

      {			

       print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=4"</script>';

      }

	  
	  

  }
  
  
  /***********************************************************************************/

  /*------------------------- Modificar Inventario Saliente ----------------------------*/

  /***********************************************************************************/

  public function updateInventarioSaliente()

  {

	 
	  	  
	  $id = $_POST['id'];
	  
	  $fecha_entrega = $_POST['fecha_entrega'];

	  $nombre_entrega_acta = $_POST['nombre_entrega_acta'];
	  
	  $nombre_recibe_acta = $_POST['nombre_recibe_acta'];
	  
	  $observaciones = $_POST['observaciones'];
	  
	  
	  
	 
	  date_default_timezone_set('America/Bogota'); 

      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Modific&oacute; Acta Entrega';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Modifico acta de entrega ".$fechal." "."a las: ".$hora;
	  
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	  $tipolog=1;

      $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();
	  
	  $registrar = $this->db->prepare("UPDATE inventario SET fecha_entrega='$fecha_entrega',nombre_entrega_acta='$nombre_entrega_acta',nombre_recibe_acta='$nombre_recibe_acta',observaciones='$observaciones' WHERE id='$id'");

	  $registrar->execute(); 
	  $resultado = $registrar->rowCount();

	  
      if ($resultado)

      {			

       print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=5"</script>';

      }

	  
	  

  }

  
  
  
  
  
  
  
  /***********************************************************************************/

  /*------------------------------  Listar Actas Recibidas  --------------------*/

  /***********************************************************************************/

  public function listarRecibidos()

  {

  

  $listar = $this->db->prepare("select inventario.id,inventario.consecutivo_acta,inventario.fecha_acta,pa_juzgado.nombre,inventario.responsable,inventario.enero,
inventario.febrero,inventario.marzo,inventario.abril,inventario.mayo,inventario.junio,inventario.julio,inventario.agosto,
inventario.septiembre,inventario.octubre,inventario.noviembre,inventario.diciembre, inventario.ano_archivar, inventario.cantidad_expedientes, inventario.cantidad_cajas,inventario.nombre_entrega,inventario.nombre_recibe, inventario.idestado_acta
from inventario 
inner join pa_juzgado ON (inventario.idjuzgado=pa_juzgado.id)
Where inventario.idtipoinventario=1");

  $listar->execute();

  return $listar;

  

  }
/***********************************************************************************/

  /*------------------------------  Listar Actas Entregadas  --------------------*/

  /***********************************************************************************/

  public function listarEntregados()

  {

  
  $listar = $this->db->prepare("select inventario.id,inventario.consecutivo_acta_entrega,inventario.fecha_entrega,juz.nombre,inventario.responsable,inventario.enero,
inventario.febrero,inventario.marzo,inventario.abril,inventario.mayo,inventario.junio,inventario.julio,inventario.agosto,
inventario.septiembre,inventario.octubre,inventario.noviembre,inventario.diciembre, inventario.ano_archivar, inventario.cantidad_expedientes, inventario.cantidad_cajas,inventario.nombre_entrega,inventario.nombre_recibe, inventario.nombre_recibe_acta, inventario.nombre_entrega_acta
from inventario 
inner join pa_juzgado juz ON (inventario.idjuzgado=juz.id)
Where inventario.idestado_acta=2");

  $listar->execute();

  return $listar;

  

  }


/***********************************************************************************/

  /*------------------------- Listar  Acta Entrante Especifica ---------------------*/

  /***********************************************************************************/	

 public function listarInventarioEspecifico()

	{

		 $id=$_GET['nombre'];

		$consulta = $this->db->prepare("select  inventario.consecutivo_acta,inventario.fecha_acta,inventario.idjuzgado,inventario.id,pa_juzgado.nombre,inventario.responsable,inventario.enero,
inventario.febrero,inventario.marzo,inventario.abril,inventario.mayo,inventario.junio,inventario.julio,inventario.agosto,
inventario.septiembre,inventario.octubre,inventario.noviembre,inventario.diciembre, inventario.ano_archivar, 
inventario.desde_caja,inventario.hasta_caja,inventario.desde_expediente,inventario.hasta_expediente,
inventario.cantidad_expedientes, inventario.cantidad_cajas,inventario.nombre_entrega,inventario.nombre_recibe, inventario.observaciones,inventario.cantidad_expedientes_prestados,inventario.persona_presto,inventario.observaciones_prestamo,pa_juzgado.idarea,
inventario.fecha_entrega,inventario.nombre_entrega_acta, inventario.nombre_recibe_acta,inventario.consecutivo_acta_entrega
from inventario 
inner join pa_juzgado ON (inventario.idjuzgado=pa_juzgado.id)
Where inventario.id='$id'");

		$consulta->execute();

		return $consulta;

	}  







/***********************************************************************************/

  /*------------------------- Listar  Acta Saliente Especifica ---------------------*/

  /***********************************************************************************/	

 public function listarInventarioEspecificoSaliente()

	{

		 $id=$_GET['nombre'];

		$consulta = $this->db->prepare("select inventario.consecutivo_acta,inventario.fecha_acta,inventario.idjuzgado,inventario.id,juzd.nombre as destino,inventario.iddestinojuzgado,juz.nombre,inventario.idjuzgado,inventario.responsable,inventario.enero,
inventario.febrero,inventario.marzo,inventario.abril,inventario.mayo,inventario.junio,inventario.julio,inventario.agosto,
inventario.septiembre,inventario.octubre,inventario.noviembre,inventario.diciembre, inventario.ano_archivar, 
inventario.desde_caja,inventario.hasta_caja,inventario.desde_expediente,inventario.hasta_expediente,
inventario.cantidad_expedientes, inventario.cantidad_cajas,inventario.nombre_entrega,inventario.nombre_recibe, inventario.consecutivo_acta_entrega,inventario.fecha_entrega,inventario.nombre_entrega_acta,inventario.nombre_recibe_acta
from inventario
inner join pa_juzgado juz ON (inventario.idjuzgado=juz.id)
inner join pa_juzgado juzd ON (inventario.idjuzgado=juzd.id)
Where inventario.id='$id'");

		$consulta->execute();

		return $consulta;

	}  


/***********************************************************************************/

  /*------------------------------  Listar Actas Entrantes Reporte --------------------*/

  /***********************************************************************************/

  public function listarEntrantesReporte()

  {

  $fechai=$_GET['nombre1'];
  $fechaf=$_GET['nombre2'];
  $idjuzgado=$_GET['nombre'];

  $listar = $this->db->prepare("select sum(cantidad_expedientes) as expentrantes, sum(cantidad_cajas) as cajasentrantes from inventario where idjuzgado='$idjuzgado' and idtipoinventario=1 and fecha_acta BETWEEN '$fechai' and '$fechaf'");

  $listar->execute();

  return $listar;

  

  }
 /***********************************************************************************/

  /*------------------------------  Listar Actas Entrantes Reporte --------------------*/

  /***********************************************************************************/

  public function listarEntrantesReporte1()

  {

  $fechai=$_GET['nombre1'];
  $fechaf=$_GET['nombre2'];
  $idjuzgado=$_GET['nombre'];

  $listar = $this->db->prepare("select juz.nombre as juzgado, sum(iv.cantidad_cajas) as cajasentrantes,sum(iv.cantidad_expedientes) as expedientesentrantes,sum(iv.cantidad_expedientes_prestados) as prestados  
from inventario iv inner join pa_juzgado juz ON (juz.id=iv.idjuzgado) where iv.fecha_acta BETWEEN '$fechai' and '$fechaf'
and iv.idjuzgado='$idjuzgado'    
group by iv.idjuzgado
order by juzgado");

  $listar->execute();

  return $listar;

  

  } 
  
   /***********************************************************************************/

  /*------------------------------  Listar Actas Salientes Reporte --------------------*/

  /***********************************************************************************/

  public function listarSalientesReporte1()

  {

  $fechai=$_GET['nombre1'];
  $fechaf=$_GET['nombre2'];
  $idjuzgado=$_GET['nombre'];

  $listar = $this->db->prepare("select juz.id,juz.nombre as juzgado, sum(iv.cantidad_cajas) as cajassalientes,sum(iv.cantidad_expedientes) as expedientessalientes,sum(iv.cantidad_expedientes_prestados) as prestados1  
from inventario  iv inner join pa_juzgado juz ON(juz.id=iv.idjuzgado) where iv.idestado_acta=2 and iv.fecha_acta BETWEEN '$fechai' and '$fechaf'    
and iv.idjuzgado='$idjuzgado'
group by iv.idjuzgado
order by juzgado");

  $listar->execute();

  return $listar;

  

  } 
  
   /***********************************************************************************/

  /*------------------------------  Listar Actas Entrantes Reporte TODOS--------------------*/

  /***********************************************************************************/

  public function listarEntrantesReporteTODOS1()

  {

  $fechai=$_GET['nombre1'];
  $fechaf=$_GET['nombre2'];

  $listar = $this->db->prepare("select juz.id as idjuz,juz.nombre as juzgado, sum(iv.cantidad_cajas) as cajase,sum(iv.cantidad_expedientes) as expee,sum(iv.cantidad_expedientes_prestados) as prestados  
from inventario iv inner join pa_juzgado juz ON (juz.id=iv.idjuzgado) 
inner join pa_area ar ON (ar.id=juz.idarea)
where iv.fecha_acta BETWEEN '$fechai' and '$fechaf'
group by iv.idjuzgado
order by ar.nombre,juz.nombre");

  $listar->execute();

  return $listar;

  

  } 
  
   /***********************************************************************************/

  /*------------------------------  Listar Actas Salientes Reporte TODOS --------------------*/

  /***********************************************************************************/

  public function listarSalientesReporteTODOS1()

  {

  $fechai=$_GET['nombre1'];
  $fechaf=$_GET['nombre2'];

  $listar = $this->db->prepare("select juz.id as idjuz,juz.nombre as juzgado, sum(iv.cantidad_cajas) as cajassalientes,sum(iv.cantidad_expedientes) as expedientessalientes,sum(iv.cantidad_expedientes_prestados) as prestados1  
from inventario  iv inner join pa_juzgado juz ON(juz.id=iv.idjuzgado) 
inner join pa_area ar ON (ar.id=juz.idarea)
where iv.idestado_acta=2 and iv.fecha_acta BETWEEN '$fechai' and '$fechaf'    
group by iv.idjuzgado
order by ar.nombre,juz.nombre");

  $listar->execute();

  return $listar;

  

  } 
  
  
  
  /***********************************************************************************/

  /*------------------------------  Listar Dias no habiles --------------------*/

  /***********************************************************************************/

  public function listardias_nohabiles()

  {

 
  $listar = $this->db->prepare("select * from dias_no_habiles");

  $listar->execute();
  
  $cont = $listar->rowcount();
  $cont = $cont-1;
  $i=0;
  $cadena ='';
  
  while ($field = $listar->fetch())
  {
   
   if($cont == $i)
   {
    $cadena = $cadena.$field[fecha];
   }
   else
   {
    $cadena = $cadena.$field[fecha].",";
   }
   
   $i++;
  }


  return $cadena;

  

  }
  
  /***********************************************************************************/

  /*------------------------------  Listar Actas Entrantes Reporte Todos --------------------*/

  /***********************************************************************************/

  public function listarEntrantesReporteTodos()

  {

  $fechai=$_GET['nombre1'];
  $fechaf=$_GET['nombre2'];
  $idjuzgado=$_GET['nombre'];

  $listar = $this->db->prepare("select sum(cantidad_expedientes) as expentrantes, sum(cantidad_cajas) as cajasentrantes from inventario where idjuzgado='$idjuzgado' and idtipoinventario=1 and fecha_acta BETWEEN '$fechai' and '$fechaf'");

  $listar->execute();

  return $listar;

  

  }
  
  
  

/***********************************************************************************/

  /*------------------------------  Listar Actas Salientes Reporte --------------------*/

  /***********************************************************************************/

  public function listarSalientesReporte()

  {

  $fechai=$_GET['nombre1'];
  $fechaf=$_GET['nombre2'];
  $idjuzgado=$_GET['nombre'];

  $listar = $this->db->prepare("select sum(cantidad_expedientes) as expsalientes, sum(cantidad_cajas) as cajassalientes from inventario where idjuzgado='$idjuzgado' and idtipoinventario=2 and fecha_acta BETWEEN '$fechai' and '$fechaf'");

  $listar->execute();

  return $listar;

  

  }
  
  /***********************************************************************************/

  /*------------------------------  Nombre Juzgado --------------------*/

  /***********************************************************************************/

  public function nombreJuzgado()

  {

 
  $idjuzgado=$_GET['nombre'];

  $listar = $this->db->prepare("select nombre from pa_juzgado where id='$idjuzgado'");

  $listar->execute();

  return $listar;

  

  }
  
 
   /***********************************************************************************/

  /*------------------------------  Consultar Consecutivo Recibido --------------------*/

  /***********************************************************************************/

  public function listarConsecutivo()

  {

 
   $listar = $this->db->prepare("select * from consecutivo where tipo='Recibido'");

  $listar->execute();
   
  return $listar;
  
  

  

  } 

   /***********************************************************************************/

  /*------------------------------  Consultar Consecutivo Entrega --------------------*/

  /***********************************************************************************/

  public function listarConsecutivo_entrega()

  {

 
  $id=$_GET['nombre'];
  $consec = ""; 
   
  $listar_acta = $this->db->prepare("SELECT inv.idjuzgado,ar.id AS idarea,ar.nombre AS areanombre
FROM inventario inv
INNER JOIN pa_juzgado juz ON(inv.idjuzgado=juz.id)
INNER JOIN pa_area ar ON (ar.id=juz.idarea)
WHERE inv.id='$id'");

  $listar_acta->execute();
  
  while ($row = $listar_acta->fetch())
  {
  	 $idjuzgado = $row[idjuzgado];
	 $idarea = $row[idarea];
	 $areanombre = $row[areanombre];
	
  }
   date_default_timezone_set('America/Bogota'); 
    $ano=date('y');
 
  $listar_consecutivo = $this->db->prepare("select * from consecutivo where tipo='Entrega'");
  $listar_consecutivo->execute();
  
 while ($row1 = $listar_consecutivo->fetch())
  {
  	$familia = $row1[consecutivo_familia];
	$civil = $row1[consecutivo_civil];
	$municipal = $row1[consecutivo_municipal];
	
  }
  
  if($familia < 10)
  {
   $f = "00".$familia;
  }
  else if ($familia < 100)
  {
   $f = "0".$familia;
  }
  else if ($familia >= 100)
  {
   $f = $familia;
  }
  
  if($civil < 10)
  {
    $c = "00".$civil;
  }
  else if ($civil < 100)
  {
   $c = "0".$civil;
  }
  else if ($civil >= 100)
  {
   $c = $civil;
  }  
  if($municipal < 10)
  {
    $m = "00".$municipal;
  }
  else if ($municipal < 100)
  {
   $m = "0".$municipal;
  }
  else if ($municipal >= 100)
  {
   $m = $municipal;
  } 
    
   
  if($idarea==1)
  {
   $consec = "AEC".$ano."-".$c;
  }
  if($idarea==2)
  {
   $consec = "AEF".$ano."-".$f;
  } 
  if($idarea==3)
  {
   $consec = "AEM".$ano."-".$m;
  } 
   
 // echo $consec;
   
   
  return $consec;
  
  

  

  }
  
  /***********************************************************************************/

  /*------------------------- Entregar Inventario Entrante ----------------------------*/

  /***********************************************************************************/

  public function entregarInventarioEntrante()

  {

	 
	  $fecha_entrega = $_POST['fecha_entrega'];
	  
	  $consecutivo_entrega = $_POST['consecutivo_entrega'];

	  $nombre_entrega_acta = $_POST['nombre_entrega_acta'];
	  
	  $nombre_recibe_acta = $_POST['nombre_recibe_acta'];
	  
	  $observaciones = $_POST['observaciones'];
	  
	  $id= $_GET['nombre'];
	 
	  date_default_timezone_set('America/Bogota'); 

      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Entreg&oacute; Acta Recibida';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Entreg&oacute; Acta Recibida ".$fechal." "."a las: ".$hora;
	  
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	  $tipolog=1;

      $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();
	  
	  $registrar = $this->db->prepare("UPDATE inventario SET fecha_entrega='$fecha_entrega',consecutivo_acta_entrega='$consecutivo_entrega',nombre_entrega_acta='$nombre_entrega_acta',nombre_recibe_acta='$nombre_recibe_acta',observaciones='$observaciones', idestado_acta='2' where id='$id' ");
	  $registrar->execute(); 
	  $resultado = $registrar->rowCount();

	  $tipo_consecutivo = $_POST['tipo_consecutivo'];
	  
	  if($tipo_consecutivo=='C')
	  {
	    $actualizar = $this->db->prepare("UPDATE consecutivo set consecutivo_civil=consecutivo_civil+1 where tipo='Entrega'");
        $actualizar->execute(); 
		
	  }
	  
	  if($tipo_consecutivo=='F')
	  {
	    $actualizar = $this->db->prepare("UPDATE consecutivo set consecutivo_familia=consecutivo_familia+1 where tipo='Entrega'");
        $actualizar->execute(); 
		
	  }
	  
	  if($tipo_consecutivo=='M')
	  {
	    $actualizar = $this->db->prepare("UPDATE consecutivo set consecutivo_municipal=consecutivo_municipal+1 where tipo='Entrega'");
        $actualizar->execute(); 
		
	  }	
	  
      if ($resultado)

      {			

       print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=8 "</script>';

      }

	  
	  

  } 
  
 /***********************************************************************************/

  /*------------------------- Entregar Inventario Entrante ----------------------------*/

  /***********************************************************************************/

  public function generarActarecibido()

  {
  	
	//echo $_GET['nombre'];
	//echo $_GET['nombre1'];
	
	require 'models/wordModel.php';	
  
  }
 



/***********************************************************************************/

  /*---------------------------  Listar Ubicaciï¿½n Expedientes --------------------*/

  /***********************************************************************************/

public function listarUbicacion()

  {  

  $listar = $this->db->prepare("SELECT ubi.id, ubi.idusuario, ubi.fecha, ubi.radicado, ubi.piso,  est.nombre as estado, 
                                juz.nombre as juzgado, ubi.fechasalida, juzdes.nombre as juzgadodestino, ubi.fechadevolucion, 
								ubi.posicion, ubi.cedula_demandante, ubi.demandante, ubi.cedula_demandado, ubi.demandado, ubi.en_titulos 
								FROM ubicacion_expediente ubi
  								INNER JOIN detalle_estado est ON (ubi.idestado = est.id)
								INNER JOIN pa_juzgado juz ON (ubi.idjuzgado = juz.id)
								LEFT JOIN  juzgado_destino juzdes ON (ubi.idjuzgadodestino = juzdes.id)
								WHERE ubi.radicado NOT LIKE '%BLOQUEADO%'
								ORDER BY ubi.fecha DESC LIMIT 2");
								
 
  $listar->execute();

  return $listar;
  }
  
  public function listarUbicacion_juzgados($pertenece_juzgado)

  {  

  						
	 $listar = $this->db->prepare(" SELECT ubi.id, ubi.idusuario, ubi.fecha, ubi.radicado, ubi.piso,  est.nombre as estado, 
	                                juz.nombre as juzgado, ubi.fechasalida, juzdes.nombre as juzgadodestino, ubi.fechadevolucion, 
									ubi.posicion, ubi.cedula_demandante, ubi.demandante, ubi.cedula_demandado, ubi.demandado, ubi.en_titulos
									FROM ubicacion_expediente ubi
									INNER JOIN detalle_estado est ON (ubi.idestado = est.id)
									INNER JOIN pa_juzgado juz ON (ubi.idjuzgado = juz.id)
									LEFT JOIN  juzgado_destino juzdes ON (ubi.idjuzgadodestino = juzdes.id)
									WHERE ubi.idjuzgado_reparto = '$pertenece_juzgado'
									ORDER BY ubi.fecha DESC LIMIT 30");									
									
	 
	  $listar->execute();
	
	  return $listar;
  }
  
  /***********************************************************************************/

  /*---------------------------  Listar titulos--------------------*/

  /***********************************************************************************/

public function listarTitulos()

  {  

	$id= $_GET['nombre'];
	$beneficiario = $_GET['nombre50'];
	
	
	
  $listar = $this->db->prepare("select ubi.radicado,titulos.fecha,titulos.beneficiario,titulos.valor,titulos.fechapago from titulos LEFT JOIN ubicacion_expediente ubi ON (idubicacion_expediente=ubi.id)
where beneficiario like '%$beneficiario%' and idubicacion_expediente in (select id from ubicacion_expediente where radicado like '%$id%' )");

  $listar->execute();

  return $listar;
  }
 
 
 public function listarTitulosMod()

  {  

	$id= $_GET['nombre'];	
	//echo("select * from titulos where idubicacion_expediente in (select id from ubicacion_expediente where id = '$id' )");
  $listar = $this->db->prepare("select * from titulos where idubicacion_expediente = '$id' ");

  $listar->execute();

  return $listar;
  }
  /***********************************************************************************/

  /*------------------------------  Filtro Ubicacion Expedientes  ---------------------------------*/

  /***********************************************************************************/

  public function FiltroUbicacionExpedientes()

  {

$fechai					= $_GET['nombre1']; 
$fechaf					= $_GET['nombre2']; 
$fechair				= $_GET['nombre16']; 
$fechafr				= $_GET['nombre17'];
$posicion				= $_GET['nombre3']; 
$radicado				= $_GET['nombre4']; 
$piso				    = $_GET['nombre5']; 
$estado   				= $_GET['nombre6']; 
$juzgado				= $_GET['nombre7']; 
$ubicacion				= $_GET['nombre8']; 
$juzgadodestino			= $_GET['nombre9']; 
$cedula_demandante		= $_GET['nombre10'];
$demandante				= $_GET['nombre11'];
$cedula_demandado		= $_GET['nombre12'];
$demandado				= $_GET['nombre13'];
$usuario				= $_GET['nombre20'];
$juzgadoreparto		    = $_GET['nombre21'];

//ASIGNADO POR JORGE ANDRES VALENCIA 14 ENERO 2015
$fechati				= $_GET['nombre1b']; 
$fechatf				= $_GET['nombre2b'];
$asignadoat				= $_GET['nombre3b']; 

//ASIGNADO POR JORGE ANDRES VALENCIA 26 DE FEBRERO 2015
//ME PERMITE REALIZAR UN FILTRO CON LAS OBSERVACIONES QUE SE HAN HECHO EN LA TABLA
//detalle_correspondencia DE LOS PROCESOS
$fechaoi				= $_GET['nombre16b']; 
$fechaof				= $_GET['nombre17b'];

$f1=$f2=$f3=$f4=$f5=$f6=$f7=$f8=$f9=$f10=$f11=$f12=$f13=$f14=$f15=$f16="";

//$f1=$f2=$f3=$f4=$f5=$f6=$f7=$f8=$f9=$f10=$f11=$f12=$f13=$f14=$f15="";

//ASI ESTABA
//$f1=$f2=$f3=$f4=$f5=$f6=$f7=$f8=$f9=$f10=$f11=$f12=$f13=$f14="";


if($fechai!='')
{

$f1=" and(ubi.fecha_reparto >= '$fechai' and ubi.fecha_reparto<='$fechaf')";
}
if($fechair!='')
{

$f13=" and(ubi.fecha >= '$fechair' and ubi.fecha<='$fechafr')";
}

/*if($juzgadodestino!=''){
 $f3="AND juzgadodestino.nombre LIKE '%$juzgadodestino%'";
}*/
if($juzgadodestino!=''){
 $f3="AND (ubi.idjuzgado_reparto = '$juzgadodestino' OR ubi.idjuzgadodestino = '$juzgadodestino')";
}
if($ubicacion=='prestado')
{
	
	//$f2 = "and ubi.fechasalida IS NOT NULL and ubi.fechasalida != '0000-00-00'";
	
	$f2 = "AND (ubi.fechasalida IS NOT NULL OR ubi.fechasalida != '0000-00-00')
		   AND (ubi.posicion IS NOT NULL OR ubi.posicion IS NULL OR ubi.posicion = '')
		   AND (ubi.fechadevolucion IS NULL OR ubi.fechadevolucion = '0000-00-00')";
}
if($ubicacion=='archivo')
{
	
	$f2 = "and ubi.posicion IS NOT NULL and ubi.posicion != '' ";
}
if($ubicacion == 'con fecha de salida')
{
	
	//$f2 = "and ubi.fechasalida IS NOT NULL and ubi.fechasalida != '0000-00-00'";
	
	$f2 = "AND (ubi.fechasalida IS NOT NULL OR ubi.fechasalida != '0000-00-00')
		   AND (ubi.posicion IS NOT NULL OR ubi.posicion IS NULL OR ubi.posicion = '')
		   AND (ubi.fechadevolucion IS NULL OR ubi.fechadevolucion = '0000-00-00')";
}

if($piso!=''){
 $f4=" AND ubi.piso LIKE '%$piso%'";
}

if($posicion!=''){
 $f5=" AND ubi.posicion LIKE '%$posicion%'";
}
if($estado!=''){
 $f6=" AND est.id = '$estado'";
}
if($juzgado!=''){
 $f7=" AND juz.nombre LIKE '%$juzgado%'";
}
if($demandante!=''){
 $f8="  AND ubi.demandante LIKE '%$demandante%'";
}
if($cedula_demandante!=''){
 $f9=" AND ubi.cedula_demandante LIKE '%$cedula_demandante%'";
}
if($demandado!=''){
 $f10="   AND ubi.demandado LIKE '%$demandado%'";
}
if($cedula_demandado!=''){
 $f11=" AND ubi.cedula_demandado LIKE '%$cedula_demandado%'";
}
if($usuario!=''){
 
 //SE CIERRA ESTA LINEA YA QUE DE ESTA FORMA
 //LA CONSULTA TRAERIA INFORMACION DE ESTA FORMA
 //SI SOLO SE ESTA CONSULTANDO POR EL USURIO CON idusuario = 8
 //TAMBIEN TRAERIA USUARIOS COMO EL 18,28,38..... YA QUE AL USAR
 //EN LA CONSULTA '%$usuario%' TRAE REGISTROS QUE EMPIEZEN CON 8 Y
 //TERMINEN CON 8
 
 //$f12=" AND ubi.idusuario LIKE '%$usuario%'";
 
 
 $f12=" AND ubi.idusuario = '$usuario'";
}

/*if($juzgadoreparto!=''){
 $f14="AND juzgadoreparto.nombre LIKE '%$juzgadoreparto%'";
}*/

//ASIGNADO POR JORGE ANDRES VALENCIA 14 ENERO 2015
if($fechati != '')
{

	$f15=" and(ubi.fecha_tramite >= '$fechati' and ubi.fecha_tramite <= '$fechatf')";
}

if($asignadoat != ''){

	if($fechati == '' || $fechatf == ''){
	
		$f16=" AND ubi.asignadoa = '$asignadoat' AND ubi.fecha_tramite != '' ";
	}
	else{
		$f16=" AND ubi.asignadoa = '$asignadoat' AND(ubi.fecha_tramite >= '$fechati' and ubi.fecha_tramite <= '$fechatf')";
	}
}


/*echo "SELECT ubi.id AS idubi,ubi.idusuario,  ubi.fecha,ubi.radicado, ubi.piso, est.nombre as estados, juz.nombre as juzgado, ubi.posicion, ubi.fechasalida, juzgadodestino.nombre, ubi.fechadevolucion, juzgadodestino.nombre as juzgadodestino, ubi.cedula_demandante, ubi.demandante, ubi.cedula_demandado, ubi.demandado, juzgadoreparto.nombre as juzgadoreparto
FROM ubicacion_expediente ubi
LEFT JOIN detalle_estado est ON (ubi.idestado = est.id)
LEFT JOIN pa_juzgado juz ON (ubi.idjuzgado = juz.id)
LEFT JOIN juzgado_destino juzgadodestino ON (ubi.idjuzgadodestino = juzgadodestino.id)
LEFT JOIN juzgado_destino juzgadoreparto ON (ubi.idjuzgado_reparto = juzgadoreparto.id)

WHERE ubi.radicado LIKE '%$radicado%' ".$f1.$f2.$f3.$f4.$f5.$f6.$f7.$f8.$f9.$f10.$f11.$f12.$f13.$f14."      ORDER BY ubi.fecha";*/

//ASI ESTABA
 /*$listar = $this->db->prepare("SELECT ubi.id AS idubi,ubi.idusuario,  ubi.fecha,ubi.radicado, ubi.piso, est.nombre as estados, juz.nombre as juzgado, ubi.posicion, ubi.fechasalida, juzgadodestino.nombre, ubi.fechadevolucion, juzgadodestino.nombre as juzgadodestino, ubi.cedula_demandante, ubi.demandante, ubi.cedula_demandado, ubi.demandado, juzgadoreparto.nombre as juzgadoreparto
FROM ubicacion_expediente ubi
LEFT JOIN detalle_estado est ON (ubi.idestado = est.id)
LEFT JOIN pa_juzgado juz ON (ubi.idjuzgado = juz.id)
LEFT JOIN juzgado_destino juzgadodestino ON (ubi.idjuzgadodestino = juzgadodestino.id)
LEFT JOIN juzgado_destino juzgadoreparto ON (ubi.idjuzgado_reparto = juzgadoreparto.id)

WHERE ubi.radicado LIKE '%$radicado%' ".$f1.$f2.$f3.$f4.$f5.$f6.$f7.$f8.$f9.$f10.$f11.$f12.$f13.$f14."      ORDER BY ubi.fecha");*/


//ASIGNADO POR JORGE ANDRES VALENCIA 26 DE FEBRERO 2015
//ESTE IF MANEJA EL FILTRO DE LAS OBSERVACIONES QUE SE HAN HECHO EN LA TABLA
//detalle_correspondencia DE LOS PROCESOS, CRAGANDOME TODOS 
//LOS PROCESOS QUE TIENEN UNA OBSERVACION EN EL RANGO DE FECHA ESPECIFICADO
//CON LAS VARIABLES $fechaoi Y $fechaof
//SE CONCATENAN LAS FECHAS CON HORA YA QUE LE CAMPO FECHA EN LA TABLA detalle_correspondencia
//ES DATATIME
//EL ELSE MANEJA L ACONSULTA QUE FUNCIONA CON LOS FILTROS DEFINIDOS AL PRINCIPIO
//DE LA FUNCION FiltroUbicacionExpedientes
if($fechaoi != '' && $fechaof != ''){
		
		$fechainicio = $fechaoi." "."00:00:00";
		$fechafinal  = $fechaof." "."12:59:59";
		
		$listar = $this->db->prepare("SELECT ubi.id AS idubi,ubi.idusuario,  ubi.fecha,ubi.radicado, ubi.piso, est.nombre as estados, 
		juz.nombre as juzgado, ubi.posicion, ubi.fechasalida, juzgadodestino.nombre, ubi.fechadevolucion, juzgadodestino.nombre as juzgadodestino, 
		ubi.cedula_demandante, ubi.demandante, ubi.cedula_demandado, ubi.demandado, 
		juzgadoreparto.nombre as juzgadoreparto,ubi.idjuzgado_reparto,ubi.en_titulos
		FROM ubicacion_expediente ubi
		LEFT JOIN detalle_estado est ON (ubi.idestado = est.id)
		LEFT JOIN pa_juzgado juz ON (ubi.idjuzgado = juz.id)
		LEFT JOIN juzgado_destino juzgadodestino ON (ubi.idjuzgadodestino = juzgadodestino.id)
		LEFT JOIN juzgado_destino juzgadoreparto ON (ubi.idjuzgado_reparto = juzgadoreparto.id)
		LEFT JOIN detalle_correspondencia dc ON (ubi.id = dc.idcorrespondencia)
		
		WHERE ubi.radicado LIKE '%$radicado%' ".$f1.$f2.$f3.$f4.$f5.$f6.$f7.$f8.$f9.$f10.$f11.$f12.$f13.$f14.$f15.$f16." AND (dc.fecha >= '$fechainicio' AND  dc.fecha <= '$fechafinal') 
		AND ubi.radicado NOT LIKE '%BLOQUEADO%'
		ORDER BY ubi.fecha");
		
	
		$listar->execute();
}
else{
		//PARA PRUEBAS Y SABER QUE SE ESTA EJECUTANDO.
		/*$sql = "SELECT ubi.id AS idubi,ubi.idusuario,  ubi.fecha,ubi.radicado, ubi.piso, est.nombre as estados, juz.nombre as juzgado, ubi.posicion, ubi.fechasalida, juzgadodestino.nombre, ubi.fechadevolucion, juzgadodestino.nombre as juzgadodestino, ubi.cedula_demandante, ubi.demandante, ubi.cedula_demandado, ubi.demandado, juzgadoreparto.nombre as juzgadoreparto
		FROM ubicacion_expediente ubi
		LEFT JOIN detalle_estado est ON (ubi.idestado = est.id)
		LEFT JOIN pa_juzgado juz ON (ubi.idjuzgado = juz.id)
		LEFT JOIN juzgado_destino juzgadodestino ON (ubi.idjuzgadodestino = juzgadodestino.id)
		LEFT JOIN juzgado_destino juzgadoreparto ON (ubi.idjuzgado_reparto = juzgadoreparto.id)
		
		WHERE ubi.radicado LIKE '%$radicado%' ".$f1.$f2.$f3.$f4.$f5.$f6.$f7.$f8.$f9.$f10.$f11.$f12.$f13.$f14.$f15.$f16."     ORDER BY ubi.fecha";*/
		
		$listar = $this->db->prepare("SELECT ubi.id AS idubi,ubi.idusuario,  ubi.fecha,ubi.radicado, ubi.piso, est.nombre as estados, 
		juz.nombre as juzgado, ubi.posicion, ubi.fechasalida, juzgadodestino.nombre, ubi.fechadevolucion, 
		juzgadodestino.nombre as juzgadodestino, ubi.cedula_demandante, ubi.demandante, ubi.cedula_demandado, 
		ubi.demandado, juzgadoreparto.nombre as juzgadoreparto,ubi.idjuzgado_reparto,ubi.en_titulos
		FROM ubicacion_expediente ubi
		LEFT JOIN detalle_estado est ON (ubi.idestado = est.id)
		LEFT JOIN pa_juzgado juz ON (ubi.idjuzgado = juz.id)
		LEFT JOIN juzgado_destino juzgadodestino ON (ubi.idjuzgadodestino = juzgadodestino.id)
		LEFT JOIN juzgado_destino juzgadoreparto ON (ubi.idjuzgado_reparto = juzgadoreparto.id)
		
		WHERE ubi.radicado LIKE '%$radicado%' ".$f1.$f2.$f3.$f4.$f5.$f6.$f7.$f8.$f9.$f10.$f11.$f12.$f13.$f14.$f15.$f16."     
		AND ubi.radicado NOT LIKE '%BLOQUEADO%'
		ORDER BY ubi.fecha");
		
	
		//echo $sql;
		$listar->execute();

}

		/*$sql1 ="SELECT ubi.id AS idubi,ubi.idusuario,  ubi.fecha,ubi.radicado, ubi.piso, est.nombre as estados, juz.nombre as juzgado, ubi.posicion, ubi.fechasalida, juzgadodestino.nombre, ubi.fechadevolucion, juzgadodestino.nombre as juzgadodestino, ubi.cedula_demandante, ubi.demandante, ubi.cedula_demandado, ubi.demandado, juzgadoreparto.nombre as juzgadoreparto
		FROM ubicacion_expediente ubi
		LEFT JOIN detalle_estado est ON (ubi.idestado = est.id)
		LEFT JOIN pa_juzgado juz ON (ubi.idjuzgado = juz.id)
		LEFT JOIN juzgado_destino juzgadodestino ON (ubi.idjuzgadodestino = juzgadodestino.id)
		LEFT JOIN juzgado_destino juzgadoreparto ON (ubi.idjuzgado_reparto = juzgadoreparto.id)
		LEFT JOIN detalle_correspondencia dc ON (ubi.id = dc.idcorrespondencia)
		
		WHERE ubi.radicado LIKE '%$radicado%' ".$f1.$f2.$f3.$f4.$f5.$f6.$f7.$f8.$f9.$f10.$f11.$f12.$f13.$f14.$f15.$f16." AND (dc.fecha >= '$fechainicio' AND  dc.fecha <= '$fechafinal') ORDER BY ubi.fecha";
		
		$sql2 ="SELECT ubi.id AS idubi,ubi.idusuario,  ubi.fecha,ubi.radicado, ubi.piso, est.nombre as estados, juz.nombre as juzgado, ubi.posicion, ubi.fechasalida, juzgadodestino.nombre, ubi.fechadevolucion, juzgadodestino.nombre as juzgadodestino, ubi.cedula_demandante, ubi.demandante, ubi.cedula_demandado, ubi.demandado, juzgadoreparto.nombre as juzgadoreparto
		FROM ubicacion_expediente ubi
		LEFT JOIN detalle_estado est ON (ubi.idestado = est.id)
		LEFT JOIN pa_juzgado juz ON (ubi.idjuzgado = juz.id)
		LEFT JOIN juzgado_destino juzgadodestino ON (ubi.idjuzgadodestino = juzgadodestino.id)
		LEFT JOIN juzgado_destino juzgadoreparto ON (ubi.idjuzgado_reparto = juzgadoreparto.id)
		
		WHERE ubi.radicado LIKE '%$radicado%' ".$f1.$f2.$f3.$f4.$f5.$f6.$f7.$f8.$f9.$f10.$f11.$f12.$f13.$f14.$f15.$f16."     ORDER BY ubi.fecha";
		
		echo $sql1."*****".$sql2;*/

		return $listar; 
	  

  } 
  
      /***********************************************************************************/

  /*------------------------------  Listar juzgados Destino ---------------------------------*/

  /***********************************************************************************/

  public function listarJuzgadosDestino()

  {

  

  $listar = $this->db->prepare("SELECT * FROM juzgado_destino");

  $listar->execute();

  return $listar;

  

  }
  
  public function listarJuzgadosDestino_juzgado($pertenece_juzgado)

  {

  

  $listar = $this->db->prepare("SELECT * FROM juzgado_destino WHERE id = '$pertenece_juzgado'");

  $listar->execute();

  return $listar;

  

  }
  
          /***********************************************************************************/

  /*------------------------------  Listar estados Detalles ---------------------------------*/

  /***********************************************************************************/

  public function listarEstadosDetalles()

  {

  
  $listar = $this->db->prepare("SELECT * FROM detalle_estado order by nombre");

  $listar->execute();

  return $listar;

  

  }


   /***********************************************************************************/

  /*------------------------------ Registrar Posiciï¿½n Expediente --------------------------------*/

  /***********************************************************************************/

  public function registrarPosicionExpediente()

  {	 
  $f0=$f1=$f2=$f3=$f4=$f5=$f6=$f7=$f8=$f9=$f10=$f11="";
	 // $idusuario = $_POST['responsable'];

	  $fecha = $_POST['fecha'];
	  
	  $radicado = $_POST['radicado'];
	  
	  $cedula_demandante = $_POST['cedula_demandante'];
	  
	  $cedula_demandado = $_POST['cedula_demandado'];
	  
	  $nombre_demandante = $_POST['nombre_demandante'];
	  
	  $nombre_demandado = $_POST['nombre_demandado'];
	  
	  $piso = 				$_POST['piso'];
	  
	  $idestado 		= $_POST['estadosdetalles'];
	  
	  $idclase_proceso  = $_POST['idclase_proceso'];

	  $idjuzgado = $_POST['juzgado'];	
	  
	  $fecha_reparto   =$_POST['fecha_reparto'];
	  
	  $idjuzgado_reparto   =$_POST['juzgado_reparto']; 
	  
	  $posicion = $_POST['posicion'];
	  
	  $radicado = $_POST['radicado'];
	  
	  $despacho  = $_POST['despacho'];
	  
	  $observaciones = $_POST['observaciones'];
	  
	  $idusuario = $_SESSION['idUsuario'];
	  
	  
	  date_default_timezone_set('America/Bogota'); 

      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Resgistr&oacute; una nueva ubicaciï¿½n';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Registro una nueva ubicaciï¿½n ".$fechal." "."a las: ".$hora;
	  
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	  $tipolog=1;
	        $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();
	  
if($juzgadodestino!=''){
	
 $f0=",idjuzgadodestino";
 $f1=",'$idjuzdes'";
}

if($despacho!=''){
	
 $f2=", iddespacho";
 $f3=", '$despacho'";
}

if($idjuzgado_reparto!=''){
	
 $f4=", idjuzgado_reparto";
 $f5=", '$idjuzgado_reparto'";
}
if($idestado!=''){
	
 $f6=",idestado";
 $f7=",'$idestado'";
}
if($fecha_reparto!=''){
	
 $f8=",fecha_reparto";
 $f9=",'$fecha_reparto'";
}
if($idclase_proceso!=''){
	
 $f10=",idclase_proceso";
 $f11=",'$idclase_proceso'";
}


	  //FECHA DE CARGA AL SISTEMA DEL PROCESO
      $fechacarga = date("Y-m-d"); 

	  $registrar = $this->db->prepare("INSERT INTO ubicacion_expediente (idusuario,fecha,fecharegistrosistema,piso,idjuzgado,".$f0." posicion,radicado,observaciones,cedula_demandante, demandante, cedula_demandado, demandado".$f2.$f4.$f6.$f8.$f10." )
		values ('$idusuario','$fecha','$fechacarga','$piso','$idjuzgado',".$f1."'$posicion','$radicado','$observaciones', '$cedula_demandante', '$nombre_demandante', '$cedula_demandado', '$nombre_demandado'".$f3.$f5.$f7.$f9.$f11.")");

	  $registrar->execute(); 
	  $resultado = $registrar->rowCount();
	
	  
      if ($resultado)

      {			

       print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';

      } 
	  else
	  {
		 print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=3"</script>';  
	  }
	  

  }


   /***********************************************************************************/

  /*------------------------------ Registrar Salida Expediente --------------------------------*/

  /***********************************************************************************/

  public function registrarSalidaExpediente()

  {	 
	 // $idusuario = $_POST['responsable'];
	   $id=$_GET['nombre'];

	  $fecha = $_POST['fecha'];
	  
	  $radicado = $_POST['radicado'];
	  
	  $piso = $_POST['piso'];
	  
	  $idestado = $_POST['estado'];

	  $idjuzgado = $_POST['juzgado'];	 
	  
	  $fechasalida = $_POST['fechasalida'];
	  
	  $idjuzdes = $_POST['idjuzdes'];
	  
	  $posicion = $_POST['posicion'];
	  
	 // $radicado = $_POST['radicado'];
	  
	  $idusuario = $_SESSION['idUsuario'];
	  
	  //agregado por Jorge Andres Valencia el 30 de enero 2015
	  $observacion_salida = $_POST['observacion_salida'];
	  
	  
	  date_default_timezone_set('America/Bogota'); 

      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Resgistr&oacute; una nueva ubicaciï¿½n';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Registro una nueva ubicaciï¿½n ".$fechal." "."a las: ".$hora;
	  
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	  $tipolog=1;

      $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();	
	  
	  
	  $fechasalidaDC = $_POST['fechasalida']." 00:00:00";
	  $fecha_amd     = $modelo->get_fecha_actual_amd();	
	  $hora_militar  = $modelo->get_hora_actual_24horas();
	  $insertarDC    = $this->db->prepare("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,estadoobs,a_despacho,idusuario,revisasecretaria,fecharevisecre,horarevisecre) 
					                       VALUES('$id','$fechasalidaDC','A DESPACHO',0,1,'$idusuario',1,'$fecha_amd','$hora_militar')");
										 
	  $insertarDC->execute();
	  
	  
		
	  $registrar = $this->db->prepare("UPDATE ubicacion_expediente SET idjuzgadodestino='$idjuzdes',fechasalida='$fechasalida',
	  posicion='$posicion',radicado='$radicado',observacion_salida = '$observacion_salida' where id='$id'");
	
	  $registrar->execute(); 
	  $resultado = $registrar->rowCount();
if($idjuzdes==1 || $idjuzdes==2){
$sininstancia = $radicado;
$sin = substr($sininstancia, 0, 21);
		/////////////////////////////////////////////
$serverName = "192.168.89.20"; //serverName\instanceName
$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
$conn = sqlsrv_connect( $serverName, $connectionInfo);
$conn = sqlsrv_connect( $serverName, $connectionInfo);

if( $conn ) { 
    echo "Conectado a la Base de Datoss.<br />"; 
}else{ 
     echo "NO se puede conectar a la Base de Datoss.<br />"; 
     die( print_r( sqlsrv_errors(), true)); 
}

$sql = "
declare @cad integer 

UPDATE t103dainfoproc SET a103descacts='A Despacho', a103codiacts='30000031', a103codipads='30000031', a103fechdess = GETDATE(), a103anotacts = 'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal'
WHERE a103llavproc='$radicado';

SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$radicado' 

INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
A110RENUTERM) values('$radicado',@cad,'$sin','00','30000031','30000031','A Despacho','N','NO','N',0,NULL,NULL,GETDATE(),NULL,NULL,NULL,NULL,NULL,
'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal',NULL,NULL,'S','D',GETDATE(),'NO','NO')
";

$params = array();
$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
$stmt = sqlsrv_query( $conn, $sql , $params, $options );

$row_count = sqlsrv_num_rows( $stmt );
   
if ($row_count === false)
   echo "Error in retrieveing row count.";
	
	}
	  
      if ($resultado)

      {			

       print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';

      }
	  

  }

    /***********************************************************************************/

  /*------------------------------ Registrar Devolucion Expediente --------------------------------*/

  /***********************************************************************************/

  public function registrarDevolucionExpediente()

  {	 
	 // $idusuario = $_POST['responsable'];
	   $id=$_GET['nombre'];

	  $fecha = $_POST['fecha'];
	  
	  $radicado = $_POST['radicado'];
	  
	  $piso = $_POST['piso'];
	  
	  $idestado = $_POST['estado'];

	  $idjuzgado = $_POST['juzgado'];	 
	  
	  $fechasalida = $_POST['fechasalida'];
	  
	  $idjuzdes = $_POST['idjuzdes'];
	  
	  $posicion = $_POST['posicion'];
	  
	  $fechadevolucion = $_POST['fechadevolucion'];

	 // $radicado = $_POST['radicado'];
	  
	  $idusuario = $_SESSION['idUsuario'];
	  
	  
	  date_default_timezone_set('America/Bogota'); 

      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Resgistr&oacute; una nueva ubicaciï¿½n';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Registro una nueva ubicaciï¿½n ".$fechal." "."a las: ".$hora;
	  
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	  $tipolog=1;

      $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();	
	  $registrar = $this->db->prepare("UPDATE ubicacion_expediente SET fechadevolucion='$fechadevolucion', fechasalida=NULL, idjuzgadodestino=NULL where id='$id'");
	
	  $registrar->execute(); 
	  $resultado = $registrar->rowCount();

	  
      if ($resultado)

      {			

       print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';

      } 
	  

  }
  
   /***********************************************************************************/

  /*------------------------------ Registrar Tï¿½tulos --------------------------------*/

  /***********************************************************************************/

  public function registrarTitulos()

  {	 
  
  $f1=$f0="";
	 // $idusuario = $_POST['responsable'];
	   $id=$_GET['nombre'];

	  $fecha = $_POST['fecha'];
	  
	  $radicado = $_POST['radicado'];
	  
	  $fechapago	= $_POST['fechapago'];
	  
	  $beneficiario	= $_POST['beneficiario'];
	  
	  $valor	= $_POST['valor'];
	  
	  $cantidad = $_POST['cantidad'];
	  
	  $fechatitulo	= $_POST['fechatitulo'];

	 // $radicado = $_POST['radicado'];
	  
	  $idusuario = $_SESSION['idUsuario'];
	  
	  
	  date_default_timezone_set('America/Bogota'); 

      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Resgistr&oacute; una nueva ubicaciï¿½n';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Registro una nueva ubicaciï¿½n ".$fechal." "."a las: ".$hora;
	  
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	  $tipolog=1;
	  
$i=1;
$j=1;
 if ($cantidad>0)
 {
  while($i<=$cantidad){  
  
  $fechaTitulo = $_POST['fechaTitulo'.$i];
  $beneficiarioTitulo = $_POST['beneficiarioTitulo'.$i];
  $valorTitulo = $_POST['valorTitulo'.$i];
  $fechaPago='';
  
  $opn = $_POST['opn'.$i];
  
  $f0='';
  $fechaPago = $_POST['fechaPago'.$i];
  if($_POST['fechaTitulo'.$i])
   {
  $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();	
	   
	    if($_POST['fechaPago'.$i])
		{
		 $registrar = $this->db->prepare("INSERT INTO titulos (idubicacion_expediente, fecha,beneficiario,valor,fechapago,orderpago) VALUES ('$id','$fechaTitulo', '$beneficiarioTitulo', '$valorTitulo','$fechaPago','$opn')");
	 $registrar->execute();  	
		}
		else
		{
	    	 $registrar = $this->db->prepare("INSERT INTO titulos (idubicacion_expediente, fecha,beneficiario,valor,orderpago) VALUES ('$id','$fechaTitulo', '$beneficiarioTitulo', '$valorTitulo','$opn')");
	 $registrar->execute();
		}
	 
	   	
   
   }
   $i++;
  
  } 
  
 }
  
  $cont = $_POST['cantidadOld'];
  if($cont>0){
	   while($j<=$cont){
		   
		   $fechaold=$_POST['fechaold'.$j];
		    $beneficiarioold=$_POST['beneficiarioold'.$j];
			 $valorold=$_POST['valorold'.$j];
			   $fechapagoold='';
			    $fechapagoold=$_POST['fechapagoold'.$j];
			   $idold=$_POST['idold'.$j];
			   
			   $opnold =$_POST['opnold'.$j];
			   
			   if($_POST['fechapagoold'.$j]==''){
			 
	    $registrar = $this->db->prepare("UPDATE titulos SET fecha='$fechaold', beneficiario='$beneficiarioold', valor='$valorold', fechapago=NULL, orderpago = '$opnold' where id='$idold'");
	 $registrar->execute();  
			   }
			   
			   if($_POST['fechapagoold'.$j]){
			 
	    $registrar = $this->db->prepare("UPDATE titulos SET fecha='$fechaold', beneficiario='$beneficiarioold', valor='$valorold', fechapago='$fechapagoold', orderpago = '$opnold' where id='$idold'");
	 $registrar->execute();  
			   }
			   else{
				 
			   $registrar = $this->db->prepare("UPDATE titulos SET fecha='$fechaold', beneficiario='$beneficiarioold', valor='$valorold', orderpago = '$opnold' where id='$idold'");
	 $registrar->execute();
			   }
			   
	 $j++;
	   }
  }
  
	  

	  
    
    print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';

      
	  

  }
  
   /***********************************************************************************/

  /*------------------------------  Listar Estados --------------------*/

  /***********************************************************************************/

  public function listarEstados() {
	$idestado=$_GET['nombre'];

	$listar = $this->db->prepare("select * from estado order by nombre ");
	$listar->execute();

	return $listar;
  }
  
  /***********************************************************************************/

  /*------------------------------  Listar Clase Proceso --------------------*/

  /***********************************************************************************/

  public function listarClaseProceso() {
	$idestado=$_GET['nombre'];

	$listar = $this->db->prepare("select * from pa_clase_proceso order by nombre ");
	$listar->execute();

	return $listar;
  }

  /*------------------------------  Clase Proceso Siglo XXI de un Proceso especifico--------------------*/
  public function ClaseProcesoSigloXXI() {
  
  		$j=0;
	   	unset($vector);
	  	$id=$_GET['nombre'];
	  
	  	$listar = $this->db->prepare("select ct.radicado from ubicacion_expediente ct where ct.id='$id'");

	  	$listar->execute();
	  
	  	while($field = $listar->fetch()){
			$radicado=$field['radicado'];
	  	}
  
  
		$serverName = "192.168.89.20"; //serverName\instanceName
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn = sqlsrv_connect( $serverName, $connectionInfo);
		 
		 if( $conn ) { 
			// echo "Conectado a la Base de Datoss.<br />"; 
		 }
		 else{ 
			echo "NO se puede conectar a la Base de Datoss.<br />"; 
			die( print_r( sqlsrv_errors(), true)); 
		 }
	
		 /*$sql = ("SELECT  dbo.T103DAINFOPROC.A103CODICLAS FROM dbo.T103DAINFOPROC
				  WHERE dbo.T103DAINFOPROC.A103LLAVPROC = '$radicado'");*/
				  
		 $sql = ("SELECT t103.A103CODICLAS,t053.A053DESCCLAS 
		          FROM (dbo.T103DAINFOPROC t103 INNER JOIN dbo.T053BACLASGENE t053 ON t103.A103CODICLAS = t053.A053CODICLAS)
				  WHERE t103.A103LLAVPROC = '$radicado'");
					
		 $params = array();
		 $options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		 $stmt = sqlsrv_query( $conn, $sql , $params, $options );
	
		 $row_count = sqlsrv_num_rows( $stmt );
	
		 if ($row_count === false){
			 echo "Error in retrieveing row count. en listarActuacion";
		 }
		 else{
	 
			 while( $row = sqlsrv_fetch_array( $stmt)){
		 
				$vector[$j][cp]   = $row['A103CODICLAS'];	
				$vector[$j][dcp]  = $row['A053DESCCLAS'];
		
				$j++;
	 
			}
	 
		}
  
  		return $vector;
  }
  /***********************************************************************************/

  /*-----------------------  Consultar Archivo Otro especifica  --------------------*/

  /***********************************************************************************/

  public function listarArchivoOtro()

  {

   $id=$_GET['nombre'];

  $listar = $this->db->prepare("SELECT ubi.id AS idubi, ubi.fecha,ubi.radicado, ubi.piso, est.nombre as estados, est.id as idest, juz.nombre as juzgado, juz.id as idjuz, juzdes.id as idjuzdes, juzdes.nombre as juzgadodestino,  est.id as idestado, ubi.posicion, ubi.cedula_demandante, ubi.demandante, ubi.cedula_demandado, ubi.demandado, ubi.observacion_salida, clapro.id as idclapro, clapro.nombre as clapro 
FROM ubicacion_expediente ubi
LEFT JOIN estado est ON (ubi.idestado = est.id)
LEFT JOIN pa_juzgado juz ON (ubi.idjuzgado = juz.id)
LEFT JOIN juzgado_destino juzdes ON ( ubi.idjuzgadodestino=juzdes.id)
LEFT JOIN pa_clase_proceso clapro ON (ubi.idclase_proceso=clapro.id)
WHERE ubi.id=$id");

  $listar->execute();

  return $listar;

  

  }  
  /***********************************************************************************/

  /*-----------------------  Consultar Archivo Devolucion  --------------------*/

  /***********************************************************************************/

 public function listarArchivoDevolucion()

  {

   $id=$_GET['nombre'];

  $listar = $this->db->prepare("SELECT ubi.id AS idubi, ubi.fecha,ubi.radicado, ubi.piso, est.nombre as estados, juz.nombre as juzgado, juz.id as idjuz, juzdes.id as idjuzdes, juzdes.nombre as juzgadodestino,  est.id as idestado, ubi.posicion, ubi.cedula_demandante, ubi.demandante, ubi.cedula_demandado, ubi.demandado, ubi.fechasalida
FROM ubicacion_expediente ubi
LEFT JOIN detalle_estado est ON (ubi.idestado = est.id)
INNER JOIN pa_juzgado juz ON (ubi.idjuzgado = juz.id)
LEFT JOIN juzgado_destino juzdes ON ( ubi.idjuzgadodestino=juzdes.id)
WHERE ubi.id=$id");

  $listar->execute();

  return $listar;

  

  }
  /***********************************************************************************/

  /*-----------------------  Listar Expedientes a Modificar  --------------------*/

  /***********************************************************************************/

  public function listarArchivoModificar()

  {

   $id=$_GET['nombre'];

  /*$listar = $this->db->prepare("SELECT ubi.id , ubi.fecha,ubi.radicado, ubi.piso, est.nombre as estados, juz.nombre as juzgado, juz.id as idjuz, ubi.iddespacho, est.id as idestado,
 ubi.posicion, juzdes.id as idjuzdes, juzdes.nombre as juzgadodestino, 
est1.id as idestadoprin, est1.nombre as nombreestadoprin, ubi.cedula_demandante, ubi.cedula_demandado, ubi.demandante, ubi.demandado, ubi.observaciones,
juzdespacho.nombre as juzgadodespacho, ubi.fecha_reparto, juzgado_reparto.id as idjuzrep, 
juzgado_reparto.nombre as juzgadoreparto, 
clapro.id as idclapro, clapro.nombre as clapro

FROM ubicacion_expediente ubi

LEFT JOIN detalle_estado est ON (ubi.idestado = est.id)
LEFT JOIN estado est1 ON (est1.id = est.idestado)
LEFT JOIN pa_juzgado juz ON (ubi.idjuzgado = juz.id)
LEFT JOIN pa_juzgado juzdespacho ON (ubi.iddespacho = juzdespacho.id)
LEFT JOIN juzgado_destino juzdes ON (ubi.idjuzgadodestino = juzdes.id)
LEFT JOIN juzgado_destino juzgado_reparto ON (ubi.idjuzgado_reparto = juzgado_reparto.id )
LEFT JOIN pa_clase_proceso clapro ON (ubi.idclase_proceso=clapro.id)
WHERE ubi.id=$id");*/

//SE AGRAGA EL CAMPO user.empleado PARA SABER QUE FUNCIONARIO ENVIO EL PROCESO ARCHIVO, LA SQL COMENTADA ERA COMO ESTABA
$listar = $this->db->prepare("SELECT ubi.id, user.empleado , ubi.fecha,ubi.fecharegistrosistema,ubi.radicado, ubi.piso, est.nombre as estados, juz.nombre as juzgado, juz.id as idjuz, 
							 ubi.iddespacho, est.id as idestado,
							 ubi.posicion, ubi.fechaquearchiva ,juzdes.id as idjuzdes, juzdes.nombre as juzgadodestino, 
							 est1.id as idestadoprin, est1.nombre as nombreestadoprin, ubi.cedula_demandante, ubi.cedula_demandado, ubi.demandante, ubi.demandado, ubi.observaciones,
							 juzdespacho.nombre as juzgadodespacho, ubi.fecha_reparto, juzgado_reparto.id as idjuzrep, 
							 juzgado_reparto.nombre as juzgadoreparto, 
							 clapro.id as idclapro, clapro.nombre as clapro, ubi.observacion_archivo, ubi.fecha_terminos,
							 ubi.consultausuario,user_2.empleado AS usuarioconsulta,user_2.id AS idusuarioconsulta,ubi.fecha_consulta,ubi.contadoronsulta
								
							 FROM ubicacion_expediente ubi
								
							 LEFT JOIN detalle_estado est ON (ubi.idestado = est.id)
							 LEFT JOIN estado est1 ON (est1.id = est.idestado)
							 LEFT JOIN pa_juzgado juz ON (ubi.idjuzgado = juz.id)
							 LEFT JOIN pa_juzgado juzdespacho ON (ubi.iddespacho = juzdespacho.id)
							 LEFT JOIN juzgado_destino juzdes ON (ubi.idjuzgadodestino = juzdes.id)
							 LEFT JOIN juzgado_destino juzgado_reparto ON (ubi.idjuzgado_reparto = juzgado_reparto.id )
							 LEFT JOIN pa_clase_proceso clapro ON (ubi.idclase_proceso=clapro.id)
							 LEFT JOIN pa_usuario user ON (ubi.userquearchiva=user.id)
							 LEFT JOIN pa_usuario user_2 ON (ubi.idusuarioonsulta=user_2.id)
							 WHERE ubi.id=$id");

  $listar->execute();

  return $listar;

  

  }
 
  /***********************************************************************************/

  /*---------------------------  Listar usuarios --------------------*/

  /***********************************************************************************/

  public function listarUsuarios()

  {
  
  $listar = $this->db->prepare("SELECT id,empleado FROM pa_usuario WHERE nombre_usuario NOT LIKE '%D%' ORDER BY empleado ASC");

  $listar->execute();

  return $listar;

  

  }
    /**********************************************************************************************************/
  /*----------------------- Modificar Archivo Otros -------------------------------*/
  /*******************************************************************************************************/
  public function modificarArchivo_Otro()
  {
	
	$modelo = new archivoModel();
	  
	$id 					= $_GET['nombre'];
	$radicado   			= $_POST['radicado'];
	$juzgado				= $_POST['juzgado'];
	$fecha					= $_POST['fecha'];
	$piso 					= $_POST['piso'];
	$estado					= $_POST['estadosdetalles'];
	$posicion				= $_POST['posicion'];
	$idres					= $_POST['nombre'];
	$cedula_demandante		= $_POST['cedula_demandante'];
	$demandante				= $_POST['demandante'];
	$cedula_demandado		= $_POST['cedula_demandado'];
	$demandado				= $_POST['demandado'];
	
	$claseproceso			= $_POST['clase_proceso'];
	$claseproceso2			= $_POST['codclaseprocesosigloxxi'];//DATO CARGADO DE SIGLO 21
	
	$fecha_antigua			= $_POST['fecha_antigua'];
	$cantidad               = $_POST['cantidad'];
	
	//CAMPOS REPARTO
	$ckreparto				= $_POST['ckreparto'];
	$fecha_reparto			= $_POST['fecha_reparto'];
	$juzgadoreparto 		= $_POST['idjuzdes'];
	$despacho				= $_POST['despacho'];
	$observaciones			= $_POST['observaciones'];
	
	//DATOS PARA GUARDAR EN LA TABLA actuacion_expediente
	//DATOS ASIGNADOS POR JORGE ANDRES VALENCIA
	$codradicado   	= $_POST['codradicado'];
	$actu_accion   	= $_POST['actuacion'];
	$actu_fechai	= $_POST['fecha_actusti'];
	$actu_dias 		= $_POST['diasti'];
	$actu_fechaf	= $_POST['fecha_actusfti'];
	$actu_asignadoa = $_POST['asignadoa'];
	//-----------------------------------------------------
	$posicion_antigua = $_POST['posicion_antigua'];
	//-----------------------------------------------------
	$observacionesarchivo = $_POST['observacionesarchivo'];
	
 	$f1=$f2=$f3=$f4=$f5=$f6=$f7=$f8=$f9="";
	 
	$i=1;
	$idUsuario = $_SESSION['idUsuario'];
	
 	//ID USUARIO JUEZ JEFE J2 DE EJECUCION Y SUS SERVIDORES JUDICIALES
	//id= 19 --->  53////53******IN(62,64)
	$campos             = 'usuario';
	$nombrelista        = 'pa_usuario_acciones';
	$idaccion	        = '19';
	$campoordenar       = 'id';
	$datosusuarioJUZ_X  = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
	$usuarios_JUZ_1_X   = $datosusuarioJUZ_X->fetch();
	$usuariosa_JUZ_2_X  = explode("******",$usuarios_JUZ_1_X[usuario]);	
	
	$usuariosa_JUZ_2b_X = explode("////",$usuariosa_JUZ_2_X[0]);
	
	
 	if ($cantidad>0)
 	{
  		while($i<=$cantidad){  
  
  			$fecha_modif = $_POST['fecha_modif'.$i];
  			//$desc_modif  = $_POST['descripcion_modif'.$i];
			
			
			if( in_array($_SESSION['idUsuario'],$usuariosa_JUZ_2b_X,true) ){
			
				 $desc_modif  = $_POST['descripcion_modif'.$i];	
				 $asignadoj   = $_POST['asignadoj'.$i];
				 
				 $desc_modif  = $desc_modif.' ASIGNADO A: '.$asignadoj;
			}
			else{
			
				$desc_modif  = $_POST['descripcion_modif'.$i];
			}
			
			$cadena = $fecha_modif."***".$desc_modif." ".$cadena;
  			
			if($_POST['fecha_modif'.$i])
   			{
				$bandera = $bandera + 1;
				
 				$registrar = $this->db->prepare("INSERT INTO detalle_correspondencia(idcorrespondencia,fecha,observacion,idusuario)
				values ($id,'$fecha_modif','$desc_modif','$idUsuario')");

				$registrar->execute(); 	
   
   			}
   			$i++;
  
  		} 
  
 	}
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//SI EN SIEPRO TABLA ubicacion_expediente 
	//EL CAMPO idclase_proceso ES VACIO, EL SISTEMA CON LA VARIABLE $claseproceso2
	//QUE GUARDA EL CODIGO DEL PROCESO DE SIGLO 21, TRAIDO DE LA BASE DE DATOS DE SIGLO 21 
	//Y ESTE UBICADO EN SIEPRO EN LA TABLA pa_clase_proceso COLUMNA idsigloxxi
	//SABEMOS CON QUE CODIGO DEL PROCESO PERO DE SIEPRO DEBEMOS ACTUALIZAR EL idclase_proceso
	//DEL PROCESO EN CUESTION
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	 $datoprocesosxxi = $this->db->prepare("select id from pa_clase_proceso where idsigloxxi = '$claseproceso2'");

	 $datoprocesosxxi->execute();
	  
	 while($fila = $datoprocesosxxi->fetch()){
		  $idcodproceso = $fila['id'];
	 }
	
	 $datoproceso = $this->db->prepare("select ct.idclase_proceso from ubicacion_expediente ct where ct.id = '$id'");

	 $datoproceso->execute();
	  
	 while($fila = $datoproceso->fetch()){
		  $idproceso = $fila['idclase_proceso'];
	 }
	 
	 if ( $idproceso == '' ) {
		  
		$modificarproceso = $this->db->prepare("UPDATE ubicacion_expediente SET idclase_proceso = '$idcodproceso' WHERE id  = '$id'");
	  	$modificarproceso->execute();
		  
		  
	 }	
	 else{
	 	$modificarproceso = $this->db->prepare("UPDATE ubicacion_expediente SET idclase_proceso = '$idcodproceso' WHERE id  = '$id'");
	  	$modificarproceso->execute();
	 }
	
	 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	 //////////////////////////////////////////////Justicia XXI Actuaciï¿½n de Reparto/////////////////////////////////////////////////
      $sininstancia = $radicado;
	  $sin = substr($sininstancia, 0, 21);
	  $listareparto = $this->db->prepare("select ct.idjuzgado_reparto, ct.fecha_reparto, ct.userquearchiva, ct.fechaquearchiva from ubicacion_expediente ct where ct.id='$id'");

	  $listareparto->execute();
	  
	  while($field = $listareparto->fetch())
      {
		  $juzre=$field['idjuzgado_reparto'];
		  $fere=$field['fecha_reparto'];
		  
		  //DATOS PARA DETERMINAR QUIEN ARCHIVA Y QUE FECHA
		  //ESTE ES ASIGNADO POR JORGE ANDRES VALENCIA
		  //$usuarioactual   = $field['idusuario'];
		  $userquearchiva  = $field['userquearchiva'];
		  $fechaquearchiva = $field['fechaquearchiva'];
		  
		  //SE PREGUNTA SI LA FECHA ES VACIA
		  //PARA ASIGNAR AL CAMPO fechaquearchiva
		  //U VALOR PRIMARIO '0000-00-00 00:00:00'
		  //EL CUAL INDICA QUE EL PROCESO NO CUENTA
		  //CON UNA FECHA DE ARCHIVADO
		  if($fechaquearchiva == ''){
			   
			//GUARDAMOS ESTE VALOR EN LA FECHA PARA NO TENER INCOSISTENCIAS AL ACTUALIZAR
			//LOS DATOS DE LA TABLA ubicacion_expediente
			$fechaquearchiva = '0000-00-00 00:00:00';
		  }
		  
		  
	  }	
	  
	  //OPERACIONES APLICADAS A BASE DE DATOS SIGLO XX1
	  //PARA ESTO DEBE ESTAR ACTIVO EL CKECK DE LA PARTE
	  //REPARTO DE LA VISTA archivo_modificarOtro CAMPO
	  //REPARTIR
	  if($ckreparto == true)
      {	 		  
			
			if (empty($fecha_reparto) || empty($juzgadoreparto) || empty($despacho)) {
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=23"</script>'; 
			}
			else{
			  
				$serverName = "192.168.89.20"; //serverName\instanceName
				$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
				$conn = sqlsrv_connect( $serverName, $connectionInfo);
				
				if( $conn ) { 
				
				}else{ 
					 echo "NO se puede conectar a la Base de Datoss.<br />"; 
					 die( print_r( sqlsrv_errors(), true)); 
				}  
				$sql = ("declare @cad integer 
				
				UPDATE t103dainfoproc SET a103descacts='Redistribuciï¿½n a Juzgados de Ejecuciï¿½n de Sentencias', a103codiacts='30023582', a103codipads='30011102', a103fechdess = GETDATE(), a103anotacts = 'Actuaciï¿½n Registrada por la Oficina de Ejecuciï¿½n de Sentencias'
				WHERE a103llavproc='$radicado';
				
				SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$radicado' 
				
				INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
				A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
				A110RENUTERM) values('$radicado',@cad,'$sin','00','30023582','30011102','Redistribuciï¿½n a Juzgados de Ejecuciï¿½n de Sentencias','N','NO','N',0,NULL,NULL,GETDATE(),NULL,NULL,NULL,NULL,NULL,
				'Actuaciï¿½n Registrada por la Oficina de Ejecuciï¿½n de Sentencias',NULL,NULL,'S','D',GETDATE(),'NO','NO')");
								
				$params = array();
				$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
				$stmt = sqlsrv_query( $conn, $sql , $params, $options );
				
				$row_count = sqlsrv_num_rows( $stmt );
				
				if ($row_count === false){
				   echo "Error in retrieveing row count. en listarActuacion";
				}
				
				$lu       = new archivoModel();
				$despacho = $_POST['despacho'];
				
				if($despacho!=""){
				   $lu->actualizarPonente();
				}
				
			
			}//fin else
		 
	  }
  

	  date_default_timezone_set('America/Bogota'); 
      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Modific&oacute; Archivo';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Modifico Archivo ".$fechal." "."a las: ".$hora.", ID RADICADO: ".$id." RADICADO: ".$radicado;
	  
	   //es de tipo 2 porque va asociado al mï¿½dulo de correspondencia 
	  $tipolog=1;
	  $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");
      $insertarlog->execute();	

     if($juzgadoreparto!=''){

 		$f1=", idjuzgado_reparto = '$juzgadoreparto'";
     }
	 if($juzgadodestino!=''){

        $vect_des= explode("-",$despacho);
        $iddes = $vect[0];
        $f2=", iddespacho='$iddes'";
     }
     if($estado!=''){
        $f3=",idestado='$estado'";
    }
    if($juzgado!=''){

        $vect_juz= explode("-",$juzgado);
		$idjuz = $vect_juz[0];
		$f4=", idjuzgado='$idjuz'";
	}
	if($claseproceso!=''){
		$f5=", idclase_proceso='$claseproceso'";
	}
	if($fecha_reparto!=''){
		$f6=", fecha_reparto='$fecha_reparto'";
	}
	if($juzgadoreparto!=''){
		$f8=", idjuzgadodestino='$juzgadoreparto'";
	}
	
	//ESTA COMPARACION LA REALIZAMOS PARA QUE CUANDO UN PROCESO QUE ESTA 
	//EN LA OFICINA DE EJECUCION DE SENTENCIAS Y EN LA VISTA archivo_modificarOtro.php
	//EN LA PARTE DE REPARTO CUANDO NO CARGA INFORMACION EN LOS CAMPOS Y SE DIGITAN
	//DATOS Y SE DA ACTUALIZAR ESTE PROCESO EN LA VISTA archivo_filtrar_ubicacion.php
	//SE VE REFLEJADO COMO SI SALIERA DE LA OFICINA CON UN BOTON VERDE QUE INDICA REGISTRAR
	//DEVOLUCION Y EL USUARIO DEL SISTEMA DEBE REALIZAR LA DEVOLUCION PARA QUE EL PROCESO QUEDE
	//EN LA OFICINA Y SE REFLEJE EN LA VISTA archivo_filtrar_ubicacion.php CON UN BOTON ROJO
	//QUE INDICA REGISTRAR SALIDA, YA QUE SOLO SE REALIZABA LA COMPARACION f($fecha_antigua != $fecha_reparto)
	//ENTONCES COMO LA FECHA DE REPARTO ERA VACIA NO ERAN IGUALES POR QUE EL USUARIO AL LLENAR LOS DATOS DE REPARTO
	//DIGITA UNA FECHA Y AL DARSE ESTO SE ASIGNA UNA FECHA DE SALIDA, GENERANDO ESTO LO COMENTADO ANTERIORMENTE
	
	//NOTA: SE DESLIGA LA OPRRACION DE REPARTO PARA QUE EL PROCESO NO GENERE UNA SALIDA A DESPACHO
	//SOLO CERRANDO LA LIENEA //$f9=", fechasalida='$fecha_reparto'"; 22 DE JULIO 2016
	if($fecha_antigua == ''){
		$fecha_antigua = '';
	}
	else{
	
		if($fecha_antigua != $fecha_reparto){
			//$f9=", fechasalida='$fecha_reparto'";
		}
	}

	if($despacho!=''){

		$vect_des= explode("-",$despacho);
		$iddes = $vect_des[0];

		$f7=", iddespacho='$iddes'";
	}
	
	//EN ESTA PARTE INDICAMOS QUE USUARIO ARCHIVA EL PROCESO
	//PARA ESTO CREAMOS EN LA TABLA ubicacion_expediente EL CAMPO userquearchiva
	if($posicion == ''){
		
		//NADIE A ARCHIVADO EL PROCESO
		$idresb = 0;
		//GUARDAMOS ESTE VALOR EN LA FECHA PARA NO TENER INCOSISTENCIAS AL ACTUALIZAR
		//LOS DATOS DE LA TABLA ubicacion_expediente
		$fechaquearchiva = '0000-00-00 00:00:00';
		
	}
	else{
		
		//LA POSICION ACTUAL DEL PROCESO EN EL ARCHIVADOR CAMBIA
		//Y QUEDA EL USUARIO DE LA SESION ACTUAL COMO EL QUE ARCHVIVA EL PROCESO
		if($posicion_antigua != $posicion){
			
			$idresb = $_SESSION['idUsuario'];
			
			//DETERMINAR EN QUE FECHA SE ESTA ARCHIVANDO EL PROCESO
			date_default_timezone_set('America/Bogota'); 
			$fechaarchivar   = date('Y-m-d H:i:s');
			$fechaquearchiva = $fechaarchivar;
		}
		//LA POSICION ACTUAL DEL PROCESO EN EL ARCHIVADOR ES IGUAL
		//ENTONCES SIGUE SIENDO EL MISMO USUARIO QUE ARCHIVO EL PROCESO 
		//LA PRIMERA VEZ
		if($posicion_antigua == $posicion){
			//$idresb = $usuarioactual;
			$idresb = $userquearchiva;
		}
		
	
	}
	
  		
	  $modificar = $this->db->prepare("UPDATE ubicacion_expediente SET radicado='$radicado', piso='$piso',posicion='$posicion', fecha='$fecha', idusuario='$idres', userquearchiva = '$idresb' , fechaquearchiva = '$fechaquearchiva' , cedula_demandante='$cedula_demandante',demandante='$demandante', cedula_demandado='$cedula_demandado', observacion_archivo = '$observacionesarchivo', demandado='$demandado'".$f1.$f2.$f3.$f4.$f5.$f6.$f7.$f8.$f9." where id='$id'");
	  $modificar->execute();
	  
	  
	  //ACTUALIZADO EL 4 DE NOVIEMBRE 2015
	  //$modelo = new archivoModel();
	  
	  $campos               = 'usuario';
	  $nombrelista          = 'pa_usuario_acciones';
	  $idaccion			    = '3';
	  $campoordenar         = 'id';
	  $datosusuarioacciones = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
	  $usuarios             = $datosusuarioacciones->fetch();
	  $usuariosa			= explode("////",$usuarios[usuario]);
	  
	  
	    //ESTA COMPRACION INDICA QUE SE ESTA ASIGNADO UN NUEVO TRAMITE INTERNO
	   //ESTO CON EL OBJETO DE EVITAR INCOSISTENCIAS ENTRE FECHA INICIAL, DIAS Y FECHA FINAL
	   //ACTUALIZADO EL 4 DE NOVIEMBRE 2015, TAMBIEN INDICA QUE USUARIO SE LE ACTIVA ESTA ACCION
	   if ( in_array($_SESSION['idUsuario'],$usuariosa) ) {
	  
		  //AGREGADO POR JORGE ANDRES VALENCIA OROZCO 04 DE DICIEMBRE 2014
		  //PARA VERIFICAR QUE LOS DATOS SON LOS CORRECTOS, EN ESPECIAL LAS FECHAS
		  //ES IMPORTANTE QUE SI EN EL FORMULARIO LOS CAMPOS ESTAN disabled="disabled"
		  //LOS VALORES
		  /*$actu_accion  = $_POST['actuacion'];
		  $actu_fechai	  = $_POST['fecha_actusti'];
		  $actu_dias 	  = $_POST['diasti'];
		  $actu_fechaf	  = $_POST['fecha_actusfti'];
		  $actu_asignadoa = $_POST['asignadoa']; */
		  //NO SE ASIGNARAN EN LAS VARIABLES Y POR ENDE GENERARA UN ERROR EN SU INSERCION
		  //O SI SE INSERTAN NO SE REFLEJARA EL CAMBIO EN LA BASEDE DATOS
		  
		  
		  //echo $actu_accion."***".$actu_fechai."***".$actu_dias."***".$actu_fechaf."***".$actu_asignadoa;
		  
	
		  //VALIDO QUE LAS VARIABLES TENGAN ALGUN DATO PARA SU REGISTRO, POR ENDE EN EL FORMULARIO
		  //O VISTA archivo_modificarOtro.php no se usa class="required" o class="required number" 
		  //PARA CAMPOS QUE DEBEN SER NUMEROS
		  if (empty($codradicado) || empty($actu_accion) || empty($actu_fechai)  || empty($actu_dias) || empty($actu_fechaf) || empty($actu_asignadoa)) {
		  
			  $bandera = 0;
		  }
		  else{
		  
			 //PREGUNTO SI EXISTE UN REGISTRO DE ESE CODIGO DE RADICADO EN LA TABLA
			 //actuacion_expediente SI NO ESXISTE SE REGISTRA EN LA TABLA Y TAMBIEN EN LA TABLA
			 //actuacion_expediente_historial PARA LLEVAR UN MOVIMIENTO DE LOS TRAMITES QUE SE
			 //LE HAN APLICADO A DICHO RADICO, SI YA EXISTE UN REGISTRO
			 //PREGUNTO SI EXISTE UN REGISTRO YA CON LA MISMA INFORMACION
			 //DE $codradicado,$actu_accion,$actu_fechai,$actu_dias,$actu_fechaf,$actu_asignadoa
			 //EN LA TABLA actuacion_expediente PARA NO LLENAR LA TABLA DEL MISMO REGISTRO CADA VEZ QUE 
			 //SE DE CLIC EN EL BOTON ACTUALIZAR DE LA VISTA archivo_modificarOtro.php, PERO SI EXISTE UN REGISTRO Y LA INFORMACION
			 //QUE SE ESTA ENVIANDO EN LA PARTE TRAMITE INTERNO DE PROCESO ES DIFERENTE
			 //SE PASA ACTUALIZAR EL REGISTRO EXISTENTE DE ESE RADICADO Y SE REGISTRA EN LA TABLA
			 //actuacion_expediente_historial PARA LLEVAR UN MOVIMIENTO DE LOS TRAMITES QUE SE LE HAN APLICADO A DICHO RADICO
			 $existeregistro = new archivoModel();
			 $rse            = $existeregistro->Existe_Registro($codradicado);
			 
	
			 //echo $rse."------".$codradicado;
			
			 if($rse == 0){
				  
				  $insertartramite = $this->db->prepare("INSERT INTO actuacion_expediente (idusuario,actu_radicado,actu_accion,actu_fechai,actu_dias,actu_fechaf,actu_asignadoa) 
				  VALUES ('$idres','$codradicado','$actu_accion','$actu_fechai','$actu_dias','$actu_fechaf','$actu_asignadoa');");
				  $insertartramite->execute();	
				  
				  $insertartramite = $this->db->prepare("INSERT INTO actuacion_expediente_historial (idusuario,actu_radicado,actu_accion,actu_fechai,actu_dias,actu_fechaf,actu_asignadoa) 
				  VALUES ('$idres','$codradicado','$actu_accion','$actu_fechai','$actu_dias','$actu_fechaf','$actu_asignadoa');");
				  $insertartramite->execute();	
				  
				  //ASIGNADO POR JORGE ANDRES VALENCIA 14 ENERO 2015
				  //SE REALIZA ESTE CAMBIO Y ACTUALIZACION PARA QUE CUANDO0 SE FILTRE POR LAS FECHAS
				  //TRAMITE INTERNO DE LA VISTA archivo_filtrar_ubicacion.php CARGUE LOS PROCESOS QUE TIENEN ALGUN TRAMITE ASIGNADO 
				  $modificar_ubicacion_expediente = $this->db->prepare("UPDATE ubicacion_expediente SET fecha_tramite='$actu_fechai',asignadoa = '$actu_asignadoa' WHERE id='$codradicado'");
				  $modificar_ubicacion_expediente->execute();
				  
				 
			 }
			 else{
			 
				$existeregistrounico = new archivoModel();
				$rseunico            = $existeregistrounico->Existe_Registro_Unico($codradicado,$actu_accion,$actu_fechai,$actu_dias,$actu_fechaf,$actu_asignadoa);
				
				if($rseunico == 0){
					
					  //ESTA COMPRACION INDICA QUE SE ESTA ASIGNADO UN NUEVO TRAMITE INTERNO
					  //ESTO CON EL OBJETO DE EVITAR INCOSISTENCIAS ENTRE FECHA INICIAL, DIAS Y FECHA FINAL
					  //ACTUALIZADO EL 4 DE NOVIEMBRE 2015
					  if( strtotime($actu_fechai) < strtotime($actu_fechaf) ){
								
						  $actualizartramite = $this->db->prepare("UPDATE actuacion_expediente SET 
						  idusuario = '$idres',actu_accion='$actu_accion',
						  actu_fechai='$actu_fechai',actu_dias='$actu_dias',actu_fechaf='$actu_fechaf',actu_asignadoa='$actu_asignadoa'
						  WHERE actu_radicado = '$codradicado'"); 
						  $actualizartramite->execute();
						  
						  $insertartramite = $this->db->prepare("INSERT INTO actuacion_expediente_historial (idusuario,actu_radicado,actu_accion,actu_fechai,actu_dias,actu_fechaf,actu_asignadoa) 
						  VALUES ('$idres','$codradicado','$actu_accion','$actu_fechai','$actu_dias','$actu_fechaf','$actu_asignadoa');");
						  $insertartramite->execute();
						  
						  //ASIGNADO POR JORGE ANDRES VALENCIA 14 ENERO 2015
						 //SE REALIZA ESTE CAMBIO Y ACTUALIZACION PARA QUE CUANDO0 SE FILTRE POR LAS FECHAS
						 //TRAMITE INTERNO DE LA VISTA archivo_filtrar_ubicacion.php CARGUE LOS PROCESOS QUE TIENEN ALGUN TRAMITE ASIGNADO 
						 $modificar_ubicacion_expediente = $this->db->prepare("UPDATE ubicacion_expediente SET fecha_tramite='$actu_fechai',asignadoa = '$actu_asignadoa' WHERE id='$codradicado'");
						 $modificar_ubicacion_expediente->execute();
						 
						 
						
					  
					  }
				}
				
				
			 }
			 
			 /*$existeregistro_tramite_interno = new archivoModel();
			 $rse_tramite_interno            = $existeregistro_tramite_interno->Existe_Registro_Tramite_Interno($codradicado,$fechal,$desaccion_B);
			 
			 if($rse_tramite_interno == 0){
			 
			 	 $insertartramiteaccion = $this->db->prepare("INSERT INTO detalle_correspondencia(idcorrespondencia,fecha,observacion,idusuario)
				                                              VALUES ('$codradicado,'$fechaa','$desaccion_B','$idUsuario')");

				 $insertartramiteaccion->execute(); 
			 
			 }*/
			 
		  
		  }
	  
	  }
	  
	  
	  print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=22"</script>'; 
	  
	  //echo $rse_tramite_interno;
	  
	  
} 

public function asignar_tramite_interno_2(){
	
		$modelo     = new archivoModel();
		
		//SE OBTIENEN LOS DATOS
		$idUsuario        = $_SESSION['idUsuario'];
		$idres            = $_SESSION['idUsuario'];
		
		$idradicado       = trim($_GET['id_radi']);
		
		$actu_fechaf      = trim($_GET['actu_fechaf']);
		$actu_accion      = trim($_GET['actu_accion']);
		$actu_asignadoa   = trim($_GET['actu_asignadoa']);
		
		
		 $idaccion        = $modelo->get_accion_expediente($actu_accion);
		 $fieldaccion     = $idaccion->fetch();
		 $desaccion       = $fieldaccion['acc_descripcion'];
			 
		 $idaccionA       = $modelo->get_accion_expediente_asignadaA($actu_asignadoa);
		 $fieldaccionA    = $idaccionA->fetch();
		 $asignadoaccionA = $fieldaccionA['empleado'];

			 
		//$desaccion_B = "TRAMITE INTERNO DE PROCESO, FECHA FINAL: ".$actu_fechaf.", TRAMITE: ".$desaccion.", ASIGNADO A: ".$asignadoaccionA."-".$actu_asignadoa;
		
		$desaccion_B = "TRAMITE INTERNO DE PROCESO, FECHA FINAL: ".$actu_fechaf.", TRAMITE: ".$desaccion.", ASIGNADO A: ".$asignadoaccionA;
		
		
		//DATOS PARA GUARDAR EN LA TABLA actuacion_expediente
		//DATOS ASIGNADOS POR JORGE ANDRES VALENCIA
		$codradicado   	= trim($_GET['id_radi']);
		$actu_fechai	= trim($_GET['actu_fechai']);
		$actu_dias 		= trim($_GET['actu_dias']);
		
		//DATOS PARA EL REGISTRO DEL LOG
		
		//$modelo     = new novedadModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		
		$tiporegistro = "TRAMITE INTERNO DE PROCESO";
		$accion       = "ASIGNA ".$tiporegistro;
      	$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		date_default_timezone_set('America/Bogota'); 
      	$fecha_detalle = date('Y-m-d g:i');
	  

		try {  
		
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
			
			//EMPIEZA LA TRANSACCION
		   	$this->db->beginTransaction();
			
		   		 
				$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
				                 VALUES ('$fechalog', '$accion','$detalle','$idUsuario','$tipolog')");
				
				
				$this->db->exec("INSERT INTO detalle_correspondencia(idcorrespondencia,fecha,observacion,idusuario)
				                 VALUES ('$idradicado','$fecha_detalle','$desaccion_B','$idUsuario')");
								 
								 
								 
								 
			
				  $campos               = 'usuario';
				  $nombrelista          = 'pa_usuario_acciones';
				  $idaccion			    = '3';
				  $campoordenar         = 'id';
				  $datosusuarioacciones = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
				  $usuarios             = $datosusuarioacciones->fetch();
				  $usuariosa			= explode("////",$usuarios[usuario]);
				  
				  
					//ESTA COMPRACION INDICA QUE SE ESTA ASIGNADO UN NUEVO TRAMITE INTERNO
				   //ESTO CON EL OBJETO DE EVITAR INCOSISTENCIAS ENTRE FECHA INICIAL, DIAS Y FECHA FINAL
				   //ACTUALIZADO EL 4 DE NOVIEMBRE 2015, TAMBIEN INDICA QUE USUARIO SE LE ACTIVA ESTA ACCION
				   if ( in_array($_SESSION['idUsuario'],$usuariosa) ) {
				  
					  //AGREGADO POR JORGE ANDRES VALENCIA OROZCO 04 DE DICIEMBRE 2014
					  //PARA VERIFICAR QUE LOS DATOS SON LOS CORRECTOS, EN ESPECIAL LAS FECHAS
					  //ES IMPORTANTE QUE SI EN EL FORMULARIO LOS CAMPOS ESTAN disabled="disabled"
					  //LOS VALORES
					  /*$actu_accion  = $_POST['actuacion'];
					  $actu_fechai	  = $_POST['fecha_actusti'];
					  $actu_dias 	  = $_POST['diasti'];
					  $actu_fechaf	  = $_POST['fecha_actusfti'];
					  $actu_asignadoa = $_POST['asignadoa']; */
					  //NO SE ASIGNARAN EN LAS VARIABLES Y POR ENDE GENERARA UN ERROR EN SU INSERCION
					  //O SI SE INSERTAN NO SE REFLEJARA EL CAMBIO EN LA BASEDE DATOS
					  
					  
					  //echo $actu_accion."***".$actu_fechai."***".$actu_dias."***".$actu_fechaf."***".$actu_asignadoa;
					  
				
					  //VALIDO QUE LAS VARIABLES TENGAN ALGUN DATO PARA SU REGISTRO, POR ENDE EN EL FORMULARIO
					  //O VISTA archivo_modificarOtro.php no se usa class="required" o class="required number" 
					  //PARA CAMPOS QUE DEBEN SER NUMEROS
					  if (empty($codradicado) || empty($actu_accion) || empty($actu_fechai)  || empty($actu_dias) || empty($actu_fechaf) || empty($actu_asignadoa)) {
					  
						  $bandera = 0;
					  }
					  else{
					  
						 //PREGUNTO SI EXISTE UN REGISTRO DE ESE CODIGO DE RADICADO EN LA TABLA
						 //actuacion_expediente SI NO ESXISTE SE REGISTRA EN LA TABLA Y TAMBIEN EN LA TABLA
						 //actuacion_expediente_historial PARA LLEVAR UN MOVIMIENTO DE LOS TRAMITES QUE SE
						 //LE HAN APLICADO A DICHO RADICO, SI YA EXISTE UN REGISTRO
						 //PREGUNTO SI EXISTE UN REGISTRO YA CON LA MISMA INFORMACION
						 //DE $codradicado,$actu_accion,$actu_fechai,$actu_dias,$actu_fechaf,$actu_asignadoa
						 //EN LA TABLA actuacion_expediente PARA NO LLENAR LA TABLA DEL MISMO REGISTRO CADA VEZ QUE 
						 //SE DE CLIC EN EL BOTON ACTUALIZAR DE LA VISTA archivo_modificarOtro.php, PERO SI EXISTE UN REGISTRO Y LA INFORMACION
						 //QUE SE ESTA ENVIANDO EN LA PARTE TRAMITE INTERNO DE PROCESO ES DIFERENTE
						 //SE PASA ACTUALIZAR EL REGISTRO EXISTENTE DE ESE RADICADO Y SE REGISTRA EN LA TABLA
						 //actuacion_expediente_historial PARA LLEVAR UN MOVIMIENTO DE LOS TRAMITES QUE SE LE HAN APLICADO A DICHO RADICO
						 $existeregistro = new archivoModel();
						 $rse            = $existeregistro->Existe_Registro($codradicado);
						 
				
						 //echo $rse."------".$codradicado;
						
						 if($rse == 0){
							  
							  $insertartramite = $this->db->prepare("INSERT INTO actuacion_expediente (idusuario,actu_radicado,actu_accion,actu_fechai,actu_dias,actu_fechaf,actu_asignadoa) 
							  VALUES ('$idres','$codradicado','$actu_accion','$actu_fechai','$actu_dias','$actu_fechaf','$actu_asignadoa');");
							  $insertartramite->execute();	
							  
							  $insertartramite = $this->db->prepare("INSERT INTO actuacion_expediente_historial (idusuario,actu_radicado,actu_accion,actu_fechai,actu_dias,
							  actu_fechaf,actu_asignadoa) 
							  VALUES ('$idres','$codradicado','$actu_accion','$actu_fechai','$actu_dias','$actu_fechaf','$actu_asignadoa');");
							  $insertartramite->execute();	
							  
							  //ASIGNADO POR JORGE ANDRES VALENCIA 14 ENERO 2015
							  //SE REALIZA ESTE CAMBIO Y ACTUALIZACION PARA QUE CUANDO0 SE FILTRE POR LAS FECHAS
							  //TRAMITE INTERNO DE LA VISTA archivo_filtrar_ubicacion.php CARGUE LOS PROCESOS QUE TIENEN ALGUN TRAMITE ASIGNADO 
							  $modificar_ubicacion_expediente = $this->db->prepare("UPDATE ubicacion_expediente SET fecha_tramite='$actu_fechai',asignadoa = '$actu_asignadoa' 
							                                                        WHERE id='$codradicado'");
							  $modificar_ubicacion_expediente->execute();
							  
							 
						 }
						 else{
						 
							$existeregistrounico = new archivoModel();
							$rseunico            = $existeregistrounico->Existe_Registro_Unico($codradicado,$actu_accion,$actu_fechai,$actu_dias,$actu_fechaf,$actu_asignadoa);
							
							if($rseunico == 0){
								
								  //ESTA COMPRACION INDICA QUE SE ESTA ASIGNADO UN NUEVO TRAMITE INTERNO
								  //ESTO CON EL OBJETO DE EVITAR INCOSISTENCIAS ENTRE FECHA INICIAL, DIAS Y FECHA FINAL
								  //ACTUALIZADO EL 4 DE NOVIEMBRE 2015
								  if( strtotime($actu_fechai) < strtotime($actu_fechaf) ){
											
									  $actualizartramite = $this->db->prepare("UPDATE actuacion_expediente SET 
									  idusuario = '$idres',actu_accion='$actu_accion',
									  actu_fechai='$actu_fechai',actu_dias='$actu_dias',actu_fechaf='$actu_fechaf',actu_asignadoa='$actu_asignadoa'
									  WHERE actu_radicado = '$codradicado'"); 
									  $actualizartramite->execute();
									  
									  $insertartramite = $this->db->prepare("INSERT INTO actuacion_expediente_historial (idusuario,actu_radicado,actu_accion,actu_fechai,
									  actu_dias,actu_fechaf,actu_asignadoa) 
									  VALUES ('$idres','$codradicado','$actu_accion','$actu_fechai','$actu_dias','$actu_fechaf','$actu_asignadoa');");
									  $insertartramite->execute();
									  
									  //ASIGNADO POR JORGE ANDRES VALENCIA 14 ENERO 2015
									 //SE REALIZA ESTE CAMBIO Y ACTUALIZACION PARA QUE CUANDO0 SE FILTRE POR LAS FECHAS
									 //TRAMITE INTERNO DE LA VISTA archivo_filtrar_ubicacion.php CARGUE LOS PROCESOS QUE TIENEN ALGUN TRAMITE ASIGNADO 
									 $modificar_ubicacion_expediente = $this->db->prepare("UPDATE ubicacion_expediente SET fecha_tramite='$actu_fechai',asignadoa = '$actu_asignadoa' 
									 WHERE id='$codradicado'");
									 $modificar_ubicacion_expediente->execute();
									 
									 
									
								  
								  }
								  
							}
							
							
						 }
						 
					  }
					  
					 
					}
		
				
			//SE TERMINA LA TRANSACCION  
		  	$this->db->commit();
			

			echo '<script languaje="JavaScript"> 
								
					alert("PROCESO SE REALIZA CORRECTAMENTE");
					
					location.href="index.php?controller=archivo&action=listarUbicacionExpediente";
								
				</script>';
		  
		} 
		catch (Exception $e) {
		
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();

		  	//echo "Fallo: " . $e->getMessage();
			
			echo '<script languaje="JavaScript"> 
			
					var ERROR = "'.$e->getMessage().'";
								
					alert("ERROR AL REALIZAR EL PROCESO: "+ERROR);
					
					location.href="index.php?controller=archivo&action=listarUbicacionExpediente";
								
				</script>';
		}
		
		
 }

public function get_accion_expediente($actu_accion){
  
  $listar = $this->db->prepare("SELECT * FROM accion_expediente WHERE id = '$actu_accion'");

  $listar->execute();

  return $listar;

}

public function get_accion_expediente_asignadaA($actu_asignadoa){
  
  $listar = $this->db->prepare("SELECT * FROM pa_usuario WHERE id = '$actu_asignadoa'");

  $listar->execute();

  return $listar;

}

function Existe_Registro_Tramite_Interno($codradicado,$fechal,$desaccion_B){
  
		
		$listar = $this->db->prepare("SELECT * FROM detalle_correspondencia
									  WHERE idcorrespondencia = '$codradicado'
									  AND DATE(fecha) = '$fechal'
									  AND observacion = '$desaccion_B'");
	
	  	$listar->execute();
		
	    $resultado = $listar->rowCount();

		if(!$resultado){
	
			return 0;
		}
		else{
			return 1;
		}
		
  }  

public function modificarArchivo_Otro_SIN_JXXI(){
	  
	$id 					= $_GET['nombre'];
	$radicado   			= $_POST['radicado'];
	$juzgado				= $_POST['juzgado'];
	$fecha					= $_POST['fecha'];
	$piso 					= $_POST['piso'];
	$estado					= $_POST['estadosdetalles'];
	$posicion				= $_POST['posicion'];
	$idres					= $_POST['nombre'];
	$cedula_demandante		= $_POST['cedula_demandante'];
	$demandante				= $_POST['demandante'];
	$cedula_demandado		= $_POST['cedula_demandado'];
	$demandado				= $_POST['demandado'];
	
	$claseproceso			= $_POST['clase_proceso'];
	$claseproceso2			= $_POST['codclaseprocesosigloxxi'];//DATO CARGADO DE SIGLO 21
	
	$fecha_antigua			= $_POST['fecha_antigua'];
	$cantidad               = $_POST['cantidad'];
	
	//CAMPOS REPARTO
	$ckreparto				= $_POST['ckreparto'];
	$fecha_reparto			= $_POST['fecha_reparto'];
	$juzgadoreparto 		= $_POST['idjuzdes'];
	$despacho				= $_POST['despacho'];
	$observaciones			= $_POST['observaciones'];
	
	//DATOS PARA GUARDAR EN LA TABLA actuacion_expediente
	//DATOS ASIGNADOS POR JORGE ANDRES VALENCIA
	$codradicado   	= $_POST['codradicado'];
	$actu_accion   	= $_POST['actuacion'];
	$actu_fechai	= $_POST['fecha_actusti'];
	$actu_dias 		= $_POST['diasti'];
	$actu_fechaf	= $_POST['fecha_actusfti'];
	$actu_asignadoa = $_POST['asignadoa'];
	//-----------------------------------------------------
	$posicion_antigua = $_POST['posicion_antigua'];
	//-----------------------------------------------------
	$observacionesarchivo = $_POST['observacionesarchivo'];
	
 	$f1=$f2=$f3=$f4=$f5=$f6=$f7=$f8=$f9="";
	 
	$i=1;
	$idUsuario = $_SESSION['idUsuario'];
 	if ($cantidad>0)
 	{
  		while($i<=$cantidad){  
  
  			$fecha_modif = $_POST['fecha_modif'.$i];
  			$desc_modif  = $_POST['descripcion_modif'.$i];
			
			$cadena = $fecha_modif."***".$desc_modif." ".$cadena;
  			
			if($_POST['fecha_modif'.$i])
   			{
				$bandera = $bandera + 1;
				
 				$registrar = $this->db->prepare("INSERT INTO detalle_correspondencia(idcorrespondencia,fecha,observacion,idusuario)
				values ($id,'$fecha_modif','$desc_modif','$idUsuario')");

				$registrar->execute(); 	
   
   			}
   			$i++;
  
  		} 
  
 	}
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//SI EN SIEPRO TABLA ubicacion_expediente 
	//EL CAMPO idclase_proceso ES VACIO, EL SISTEMA CON LA VARIABLE $claseproceso2
	//QUE GUARDA EL CODIGO DEL PROCESO DE SIGLO 21, TRAIDO DE LA BASE DE DATOS DE SIGLO 21 
	//Y ESTE UBICADO EN SIEPRO EN LA TABLA pa_clase_proceso COLUMNA idsigloxxi
	//SABOMES CON QUE CODIGO DEL PROCESO PERO DE SIEPRO DEBEMOS ACTUALIZAR EL idclase_proceso
	//DEL PROCESO EN CUESTION
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	 /*$datoprocesosxxi = $this->db->prepare("select id from pa_clase_proceso where idsigloxxi = '$claseproceso2'");

	 $datoprocesosxxi->execute();
	  
	 while($fila = $datoprocesosxxi->fetch()){
		  $idcodproceso = $fila['id'];
	 }
	
	 $datoproceso = $this->db->prepare("select ct.idclase_proceso from ubicacion_expediente ct where ct.id = '$id'");

	 $datoproceso->execute();
	  
	 while($fila = $datoproceso->fetch()){
		  $idproceso = $fila['idclase_proceso'];
	 }
	 
	 if ( $idproceso == '' ) {
		  
		$modificarproceso = $this->db->prepare("UPDATE ubicacion_expediente SET idclase_proceso = '$idcodproceso' WHERE id  = '$id'");
	  	$modificarproceso->execute();
		  
		  
	 }	
	 else{
	 	$modificarproceso = $this->db->prepare("UPDATE ubicacion_expediente SET idclase_proceso = '$idcodproceso' WHERE id  = '$id'");
	  	$modificarproceso->execute();
	 }*/
	
	 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	 //////////////////////////////////////////////Justicia XXI Actuaciï¿½n de Reparto/////////////////////////////////////////////////
      $sininstancia = $radicado;
	  $sin = substr($sininstancia, 0, 21);
	  $listareparto = $this->db->prepare("select ct.idjuzgado_reparto, ct.fecha_reparto, ct.userquearchiva, ct.fechaquearchiva from ubicacion_expediente ct where ct.id='$id'");

	  $listareparto->execute();
	  
	  while($field = $listareparto->fetch())
      {
		  $juzre=$field['idjuzgado_reparto'];
		  $fere=$field['fecha_reparto'];
		  
		  //DATOS PARA DETERMINAR QUIEN ARCHIVA Y QUE FECHA
		  //ESTE ES ASIGNADO POR JORGE ANDRES VALENCIA
		  //$usuarioactual   = $field['idusuario'];
		  $userquearchiva  = $field['userquearchiva'];
		  $fechaquearchiva = $field['fechaquearchiva'];
		  
		  //SE PREGUNTA SI LA FECHA ES VACIA
		  //PARA ASIGNAR AL CAMPO fechaquearchiva
		  //U VALOR PRIMARIO '0000-00-00 00:00:00'
		  //EL CUAL INDICA QUE EL PROCESO NO CUENTA
		  //CON UNA FECHA DE ARCHIVADO
		  if($fechaquearchiva == ''){
			   
			//GUARDAMOS ESTE VALOR EN LA FECHA PARA NO TENER INCOSISTENCIAS AL ACTUALIZAR
			//LOS DATOS DE LA TABLA ubicacion_expediente
			$fechaquearchiva = '0000-00-00 00:00:00';
		  }
		  
		  
	  }	
	  
	  //OPERACIONES APLICADAS A BASE DE DATOS SIGLO XX1
	  //PARA ESTO DEBE ESTAR ACTIVO EL CKECK DE LA PARTE
	  //REPARTO DE LA VISTA archivo_modificarOtro CAMPO
	  //REPARTIR
	  if($ckreparto == true)
      {	 		  
			
			if (empty($fecha_reparto) || empty($juzgadoreparto) || empty($despacho)) {
			
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=23"</script>'; 
			}
			else{
			  
				$serverName = "192.168.89.20"; //serverName\instanceName
				$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
				$conn = sqlsrv_connect( $serverName, $connectionInfo);
				
				if( $conn ) { 
				
				}else{ 
					 echo "NO se puede conectar a la Base de Datoss.<br />"; 
					 die( print_r( sqlsrv_errors(), true)); 
				}  
				$sql = ("declare @cad integer 
				
				UPDATE t103dainfoproc SET a103descacts='Redistribuciï¿½n a Juzgados de Ejecuciï¿½n de Sentencias', a103codiacts='30023582', a103codipads='30011102', a103fechdess = GETDATE(), a103anotacts = 'Actuaciï¿½n Registrada por la Oficina de Ejecuciï¿½n de Sentencias'
				WHERE a103llavproc='$radicado';
				
				SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$radicado' 
				
				INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
				A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
				A110RENUTERM) values('$radicado',@cad,'$sin','00','30023582','30011102','Redistribuciï¿½n a Juzgados de Ejecuciï¿½n de Sentencias','N','NO','N',0,NULL,NULL,GETDATE(),NULL,NULL,NULL,NULL,NULL,
				'Actuaciï¿½n Registrada por la Oficina de Ejecuciï¿½n de Sentencias',NULL,NULL,'S','D',GETDATE(),'NO','NO')");
								
				$params = array();
				$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
				$stmt = sqlsrv_query( $conn, $sql , $params, $options );
				
				$row_count = sqlsrv_num_rows( $stmt );
				
				if ($row_count === false){
				   echo "Error in retrieveing row count. en listarActuacion";
				}
				
				$lu       = new archivoModel();
				$despacho = $_POST['despacho'];
				
				if($despacho!=""){
				   $lu->actualizarPonente();
				}
				
			
			}//fin else
		 
	  }
  

	  date_default_timezone_set('America/Bogota'); 
      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Modific&oacute; Archivo';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Modifico Archivo ".$fechal." "."a las: ".$hora.", ID RADICADO: ".$id." RADICADO: ".$radicado;
	  
	   //es de tipo 2 porque va asociado al mï¿½dulo de correspondencia 
	  $tipolog=1;
	  $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");
      $insertarlog->execute();	

     if($juzgadoreparto!=''){

 		$f1=", idjuzgado_reparto = '$juzgadoreparto'";
     }
	 if($juzgadodestino!=''){

        $vect_des= explode("-",$despacho);
        $iddes = $vect[0];
        $f2=", iddespacho='$iddes'";
     }
     if($estado!=''){
        $f3=",idestado='$estado'";
    }
    if($juzgado!=''){

        $vect_juz= explode("-",$juzgado);
		$idjuz = $vect_juz[0];
		$f4=", idjuzgado='$idjuz'";
	}
	if($claseproceso!=''){
		$f5=", idclase_proceso='$claseproceso'";
	}
	if($fecha_reparto!=''){
		$f6=", fecha_reparto='$fecha_reparto'";
	}
	if($juzgadoreparto!=''){
		$f8=", idjuzgadodestino='$juzgadoreparto'";
	}
	
	//ESTA COMPARACION LA REALIZAMOS PARA QUE CUANDO UN PROCESO QUE ESTA 
	//EN LA OFICINA DE EJECUCION DE SENTENCIAS Y EN LA VISTA archivo_modificarOtro.php
	//EN LA PARTE DE REPARTO CUANDO NO CARGA INFORMACION EN LOS CAMPOS Y SE DIGITAN
	//DATOS Y SE DA ACTUALIZAR ESTE PROCESO EN LA VISTA archivo_filtrar_ubicacion.php
	//SE VE REFLEJADO COMO SI SALIERA DE LA OFICINA CON UN BOTON VERDE QUE INDICA REGISTRAR
	//DEVOLUCION Y EL USUARIO DEL SISTEMA DEBE REALIZAR LA DEVOLUCION PARA QUE EL PROCESO QUEDE
	//EN LA OFICINA Y SE REFLEJE EN LA VISTA archivo_filtrar_ubicacion.php CON UN BOTON ROJO
	//QUE INDICA REGISTRAR SALIDA, YA QUE SOLO SE REALIZABA LA COMPARACION f($fecha_antigua != $fecha_reparto)
	//ENTONCES COMO LA FECHA DE REPARTO ERA VACIA NO ERAN IGUALES POR QUE EL USUARIO AL LLENAR LOS DATOS DE REPARTO
	//DIGITA UNA FECHA Y AL DARSE ESTO SE ASIGNA UNA FECHA DE SALIDA, GENERANDO ESTO LO COMENTADO ANTERIORMENTE
	
	//NOTA: SE DESLIGA LA OPRRACION DE REPARTO PARA QUE EL PROCESO NO GENERE UNA SALIDA A DESPACHO
	//SOLO CERRANDO LA LIENEA //$f9=", fechasalida='$fecha_reparto'"; 22 DE JULIO 2016
	if($fecha_antigua == ''){
		$fecha_antigua = '';
	}
	else{
	
		if($fecha_antigua != $fecha_reparto){
			//$f9=", fechasalida='$fecha_reparto'";
		}
	}

	if($despacho!=''){

		$vect_des= explode("-",$despacho);
		$iddes = $vect_des[0];

		$f7=", iddespacho='$iddes'";
	}
	
	//EN ESTA PARTE INDICAMOS QUE USUARIO ARCHIVA EL PROCESO
	//PARA ESTO CREAMOS EN LA TABLA ubicacion_expediente EL CAMPO userquearchiva
	if($posicion == ''){
		
		//NADIE A ARCHIVADO EL PROCESO
		$idresb = 0;
		//GUARDAMOS ESTE VALOR EN LA FECHA PARA NO TENER INCOSISTENCIAS AL ACTUALIZAR
		//LOS DATOS DE LA TABLA ubicacion_expediente
		$fechaquearchiva = '0000-00-00 00:00:00';
		
	}
	else{
		
		//LA POSICION ACTUAL DEL PROCESO EN EL ARCHIVADOR CAMBIA
		//Y QUEDA EL USUARIO DE LA SESION ACTUAL COMO EL QUE ARCHVIVA EL PROCESO
		if($posicion_antigua != $posicion){
			
			$idresb = $_SESSION['idUsuario'];
			
			//DETERMINAR EN QUE FECHA SE ESTA ARCHIVANDO EL PROCESO
			date_default_timezone_set('America/Bogota'); 
			$fechaarchivar   = date('Y-m-d H:i:s');
			$fechaquearchiva = $fechaarchivar;
		}
		//LA POSICION ACTUAL DEL PROCESO EN EL ARCHIVADOR ES IGUAL
		//ENTONCES SIGUE SIENDO EL MISMO USUARIO QUE ARCHIVO EL PROCESO 
		//LA PRIMERA VEZ
		if($posicion_antigua == $posicion){
			//$idresb = $usuarioactual;
			$idresb = $userquearchiva;
		}
		
	
	}
	
  		
	  $modificar = $this->db->prepare("UPDATE ubicacion_expediente SET radicado='$radicado', piso='$piso',posicion='$posicion', fecha='$fecha', idusuario='$idres', userquearchiva = '$idresb' , fechaquearchiva = '$fechaquearchiva' , cedula_demandante='$cedula_demandante',demandante='$demandante', cedula_demandado='$cedula_demandado', observacion_archivo = '$observacionesarchivo', demandado='$demandado'".$f1.$f2.$f3.$f4.$f5.$f6.$f7.$f8.$f9." where id='$id'");
	  $modificar->execute();
	  
	  
	  //ACTUALIZADO EL 4 DE NOVIEMBRE 2015
	  $modelo = new archivoModel();
	  
	  $campos               = 'usuario';
	  $nombrelista          = 'pa_usuario_acciones';
	  $idaccion			    = '3';
	  $campoordenar         = 'id';
	  $datosusuarioacciones = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
	  $usuarios             = $datosusuarioacciones->fetch();
	  $usuariosa			= explode("////",$usuarios[usuario]);
	  
	  
	    //ESTA COMPRACION INDICA QUE SE ESTA ASIGNADO UN NUEVO TRAMITE INTERNO
	   //ESTO CON EL OBJETO DE EVITAR INCOSISTENCIAS ENTRE FECHA INICIAL, DIAS Y FECHA FINAL
	   //ACTUALIZADO EL 4 DE NOVIEMBRE 2015, TAMBIEN INDICA QUE USUARIO SE LE ACTIVA ESTA ACCION
	   if ( in_array($_SESSION['idUsuario'],$usuariosa) ) {
	  
		  //AGREGADO POR JORGE ANDRES VALENCIA OROZCO 04 DE DICIEMBRE 2014
		  //PARA VERIFICAR QUE LOS DATOS SON LOS CORRECTOS, EN ESPECIAL LAS FECHAS
		  //ES IMPORTANTE QUE SI EN EL FORMULARIO LOS CAMPOS ESTAN disabled="disabled"
		  //LOS VALORES
		  /*$actu_accion  = $_POST['actuacion'];
		  $actu_fechai	  = $_POST['fecha_actusti'];
		  $actu_dias 	  = $_POST['diasti'];
		  $actu_fechaf	  = $_POST['fecha_actusfti'];
		  $actu_asignadoa = $_POST['asignadoa']; */
		  //NO SE ASIGNARAN EN LAS VARIABLES Y POR ENDE GENERARA UN ERROR EN SU INSERCION
		  //O SI SE INSERTAN NO SE REFLEJARA EL CAMBIO EN LA BASEDE DATOS
		  
		  
		  //echo $actu_accion."***".$actu_fechai."***".$actu_dias."***".$actu_fechaf."***".$actu_asignadoa;
		  
	
		  //VALIDO QUE LAS VARIABLES TENGAN ALGUN DATO PARA SU REGISTRO, POR ENDE EN EL FORMULARIO
		  //O VISTA archivo_modificarOtro.php no se usa class="required" o class="required number" 
		  //PARA CAMPOS QUE DEBEN SER NUMEROS
		  if (empty($codradicado) || empty($actu_accion) || empty($actu_fechai)  || empty($actu_dias) || empty($actu_fechaf) || empty($actu_asignadoa)) {
		  
			  $bandera = 0;
		  }
		  else{
		  
			 //PREGUNTO SI EXISTE UN REGISTRO DE ESE CODIGO DE RADICADO EN LA TABLA
			 //actuacion_expediente SI NO ESXISTE SE REGISTRA EN LA TABLA Y TAMBIEN EN LA TABLA
			 //actuacion_expediente_historial PARA LLEVAR UN MOVIMIENTO DE LOS TRAMITES QUE SE
			 //LE HAN APLICADO A DICHO RADICO, SI YA EXISTE UN REGISTRO
			 //PREGUNTO SI EXISTE UN REGISTRO YA CON LA MISMA INFORMACION
			 //DE $codradicado,$actu_accion,$actu_fechai,$actu_dias,$actu_fechaf,$actu_asignadoa
			 //EN LA TABLA actuacion_expediente PARA NO LLENAR LA TABLA DEL MISMO REGISTRO CADA VEZ QUE 
			 //SE DE CLIC EN EL BOTON ACTUALIZAR DE LA VISTA archivo_modificarOtro.php, PERO SI EXISTE UN REGISTRO Y LA INFORMACION
			 //QUE SE ESTA ENVIANDO EN LA PARTE TRAMITE INTERNO DE PROCESO ES DIFERENTE
			 //SE PASA ACTUALIZAR EL REGISTRO EXISTENTE DE ESE RADICADO Y SE REGISTRA EN LA TABLA
			 //actuacion_expediente_historial PARA LLEVAR UN MOVIMIENTO DE LOS TRAMITES QUE SE LE HAN APLICADO A DICHO RADICO
			 $existeregistro = new archivoModel();
			 $rse            = $existeregistro->Existe_Registro($codradicado);
			
			 //echo $rse."------".$codradicado;
			
			 if($rse == 0){
				  
				  $insertartramite = $this->db->prepare("INSERT INTO actuacion_expediente (idusuario,actu_radicado,actu_accion,actu_fechai,actu_dias,actu_fechaf,actu_asignadoa) 
				  VALUES ('$idres','$codradicado','$actu_accion','$actu_fechai','$actu_dias','$actu_fechaf','$actu_asignadoa');");
				  $insertartramite->execute();	
				  
				  $insertartramite = $this->db->prepare("INSERT INTO actuacion_expediente_historial (idusuario,actu_radicado,actu_accion,actu_fechai,actu_dias,actu_fechaf,actu_asignadoa) 
				  VALUES ('$idres','$codradicado','$actu_accion','$actu_fechai','$actu_dias','$actu_fechaf','$actu_asignadoa');");
				  $insertartramite->execute();	
				  
				  //ASIGNADO POR JORGE ANDRES VALENCIA 14 ENERO 2015
				  //SE REALIZA ESTE CAMBIO Y ACTUALIZACION PARA QUE CUANDO0 SE FILTRE POR LAS FECHAS
				  //TRAMITE INTERNO DE LA VISTA archivo_filtrar_ubicacion.php CARGUE LOS PROCESOS QUE TIENEN ALGUN TRAMITE ASIGNADO 
				  $modificar_ubicacion_expediente = $this->db->prepare("UPDATE ubicacion_expediente SET fecha_tramite='$actu_fechai',asignadoa = '$actu_asignadoa' WHERE id='$codradicado'");
				  $modificar_ubicacion_expediente->execute();
			 }
			 else{
			 
				$existeregistrounico = new archivoModel();
				$rseunico            = $existeregistrounico->Existe_Registro_Unico($codradicado,$actu_accion,$actu_fechai,$actu_dias,$actu_fechaf,$actu_asignadoa);
				
				if($rseunico == 0){
					
					  //ESTA COMPRACION INDICA QUE SE ESTA ASIGNADO UN NUEVO TRAMITE INTERNO
					  //ESTO CON EL OBJETO DE EVITAR INCOSISTENCIAS ENTRE FECHA INICIAL, DIAS Y FECHA FINAL
					  //ACTUALIZADO EL 4 DE NOVIEMBRE 2015
					  if( strtotime($actu_fechai) < strtotime($actu_fechaf) ){
								
						  $actualizartramite = $this->db->prepare("UPDATE actuacion_expediente SET 
						  idusuario = '$idres',actu_accion='$actu_accion',
						  actu_fechai='$actu_fechai',actu_dias='$actu_dias',actu_fechaf='$actu_fechaf',actu_asignadoa='$actu_asignadoa'
						  WHERE actu_radicado = '$codradicado'"); 
						  $actualizartramite->execute();
						  
						  $insertartramite = $this->db->prepare("INSERT INTO actuacion_expediente_historial (idusuario,actu_radicado,actu_accion,actu_fechai,actu_dias,actu_fechaf,actu_asignadoa) 
						  VALUES ('$idres','$codradicado','$actu_accion','$actu_fechai','$actu_dias','$actu_fechaf','$actu_asignadoa');");
						  $insertartramite->execute();
						  
						  //ASIGNADO POR JORGE ANDRES VALENCIA 14 ENERO 2015
						 //SE REALIZA ESTE CAMBIO Y ACTUALIZACION PARA QUE CUANDO0 SE FILTRE POR LAS FECHAS
						 //TRAMITE INTERNO DE LA VISTA archivo_filtrar_ubicacion.php CARGUE LOS PROCESOS QUE TIENEN ALGUN TRAMITE ASIGNADO 
						 $modificar_ubicacion_expediente = $this->db->prepare("UPDATE ubicacion_expediente SET fecha_tramite='$actu_fechai',asignadoa = '$actu_asignadoa' WHERE id='$codradicado'");
						 $modificar_ubicacion_expediente->execute();
					  
					  }
				}
				
				
			 }
		  
		  }
	  
	  }
	  
	  
	  print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=22"</script>'; 
	  
	  
} 

public function get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar){
	
		$listar     = $this->db->prepare("SELECT ".$campos." FROM ".$nombrelista." WHERE id = ".$idaccion." ORDER BY ".$campoordenar);
	
  		$listar->execute();

  		return $listar;
	
}
      /***********************************************************************************/

  /*------------------------------  Listar juzgados despacho  ---------------------------------*/

  /***********************************************************************************/

  public function listarJuzgadoss()

  {

  

  $listar = $this->db->prepare("SELECT * FROM pa_juzgado");

  $listar->execute();

  return $listar;

  

  }
     /***********************************************************************************/

  /*------------------------------ Listar Observaciones ---------------------------------------*/

  /***********************************************************************************/

  public function listarObservaciones(){

	    $id = $_GET['nombre']; 
 

	  /*$listar = $this->db->prepare("select ds.fecha as fechad, ds.observacion as descr, ds.idusuario as funcionario from detalle_correspondencia ds
									where ds.idcorrespondencia='$id'");*/
						
	  /*$listar = $this->db->prepare("select ds.id as id_obs,ds.fecha as fechad, ds.observacion as descr, fu.empleado as funcionario,ds.idusuario 
	  							    from (detalle_correspondencia ds left join pa_usuario as fu on ds.idusuario = fu.id)
								    where ds.idcorrespondencia='$id'");	*/
									
	
	
	  //SQL NUWEVA, PARA AGREGAR EN LA OBSERVACION, EL MEMORIAL POR EL CUAL SE FUE A DESPACHO	 	
	  $listar = $this->db->prepare("

										SELECT
										ds.id AS id_obs,
										ds.fecha AS fechad,
										ds.observacion AS descr,
										fu.empleado AS funcionario,
										ds.idusuario,
										t2.nombre AS memorial,
										t1.fecha_incorpora,
										t1.ruta_local,
										t1.id_memo_externo
										
										FROM (((detalle_correspondencia ds
										
										LEFT JOIN pa_usuario fu      ON ds.idusuario = fu.id)
										LEFT JOIN correspondencia t1 ON t1.id        = ds.id_memorial)
										LEFT JOIN pa_solicitud t2    ON t2.id        = t1.idsolicitud)
										
										WHERE ds.idcorrespondencia ='$id'
										
									");																	

	  $listar->execute();

	  return $listar; 

   

  }	
  
   /***********************************************************************************/

  /*----------------------- Listar Ultima Actuaciï¿½n-------------------------------------*/

  /***********************************************************************************/

  public function listarUltimaActuacion()

  {
	  $j=0;
	   unset($vector);
	  $id=$_GET['nombre'];
	  
	  $listar = $this->db->prepare("select ct.radicado from ubicacion_expediente ct where ct.id='$id'");

	  $listar->execute();
	  
	  while($field = $listar->fetch())
       	 {
		  $radicado=$field['radicado'];
		  }
	  
	  $serverName = "192.168.89.20"; //serverName\instanceName
$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
$conn = sqlsrv_connect( $serverName, $connectionInfo);
if( $conn ) { 
   // echo "Conectado a la Base de Datoss.<br />"; 
}else{ 
     echo "NO se puede conectar a la Base de Datoss.<br />"; 
     die( print_r( sqlsrv_errors(), true)); 
}

	$sql = ("SELECT  dbo.T110DRACTUPROC.A110DESCACTU, dbo.T110DRACTUPROC.A110FECHINIC,dbo.T110DRACTUPROC.A110LLAVPROC,dbo.T110DRACTUPROC.A110CONSACTU,dbo.T110DRACTUPROC.A110FECHREGI
			FROM dbo.T110DRACTUPROC
			WHERE dbo.T110DRACTUPROC.A110LLAVPROC = '$radicado' 
			AND dbo.T110DRACTUPROC.A110CONSACTU IN(SELECT MAX(dbo.T110DRACTUPROC.A110CONSACTU) from dbo.T110DRACTUPROC 
			WHERE dbo.T110DRACTUPROC.A110LLAVPROC = '$radicado' AND A110FLAGUBIC = 'S')");
			
	
	/*$sql = ("SELECT  dbo.T103DAINFOPROC.A103DESCACTD,dbo.T103DAINFOPROC.A103FECHINID,dbo.T103DAINFOPROC.A103FECHDESD
			 FROM dbo.T103DAINFOPROC
			 WHERE dbo.T103DAINFOPROC.A103LLAVPROC = '$radicado'");*/
				
$params = array();
$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
$stmt = sqlsrv_query( $conn, $sql , $params, $options );

$row_count = sqlsrv_num_rows( $stmt );

if ($row_count === false){
   echo "Error in retrieveing row count. en listarActuacion";}
 else{
 
while( $row = sqlsrv_fetch_array( $stmt)){
 
 	$vector[$j][actu]   = $row['A110DESCACTU'];	
	$vector[$j][fechad] = $row['A110FECHINIC'];
	$vector[$j][fechar] = $row['A110FECHREGI'];

 $j++;
 
 }
 
  }
  
  return $vector;
  
  }
  /***********************************************************************************/

  /*----------------------- Listar Despachos Justicia XXI-------------------------------------*/

  /***********************************************************************************/

  public function listarDespachosJusticiaXXI()

  {
	  
	  $j=0;
	   unset($vector);
	  
	  $serverName = "192.168.89.20"; //serverName\instanceName
$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
$conn = sqlsrv_connect( $serverName, $connectionInfo);
if( $conn ) { 
}else{ 
     echo "NO se puede conectar a la Base de Datoss.<br />"; 
     die( print_r( sqlsrv_errors(), true)); 
}
  
	$sql = ("SELECT A101CODIPONE,  A101NOMBPONE,  A101CODIENTI , A101CODIESPE,  A101CODINUME
									FROM  dbo.T101DAINFOPONE
									WHERE (A101SECRDESP = 'd') AND (A101FLAGHABI = 'SI') AND (A101CODIENTI='43' AND A101CODIESPE='03')  ORDER BY 														A101CODIENTI, A101CODIESPE, A101CODINUME, A101NOMBPONE");
				
$params = array();
$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
$stmt = sqlsrv_query( $conn, $sql , $params, $options );

$row_count = sqlsrv_num_rows( $stmt );

if ($row_count === false){
   echo "Error in retrieveing row count. en listarActuacion";}
 else{
 
while( $row = sqlsrv_fetch_array( $stmt)){
 
 	$vector[$j][codi_pone] = $row['A101CODIPONE'];	
	$vector[$j][nom_pone]  = $row['A101NOMBPONE'];
	$vector[$j][codi_enti] = $row['A101CODIENTI'];
	$vector[$j][codi_espe] = $row['A101CODIESPE'];
    $vector[$j][codi_nume] = $row['A101CODINUME'];

 $j++;
 
 }
 
  }
  
  return $vector;
  
  }
  
  /***********************************************************************************/

  /*----------------------- Actualizar Ponente-------------------------------------*/

  /***********************************************************************************/
  public function actualizarPonente()

  {
	  
	  $id=$_GET['nombre'];
	  
	  $listar = $this->db->prepare("select ct.radicado from ubicacion_expediente ct where ct.id='$id'");

	  $listar->execute();
	  
	  while($field = $listar->fetch())
       	 {
		  $radicado=$field['radicado'];
		  }

$despacho     = $_POST['despacho'];
$vect = explode("-",$despacho);

$codi_pone = $vect[0];
$nom_pone  = $vect[1];
$codi_enti = $vect[2];
$codi_espe = $vect[3];
$codi_nume = $vect[4];

  //$bd	     =  $_POST['especialidad'];
 
  $bd_c = "consejoPN";
  $serverName = "192.168.89.20"; 
 
$connectionInfo = array( "Database"=>$bd_c, "UID"=>"sa", "PWD"=>"M4nt3n1m13nt0");
$conn = sqlsrv_connect( $serverName, $connectionInfo);



if( $conn ) { 
     //echo "Conectado a la Base de Datos.<br />"; 
}else{ 
     echo "NO se puede conectar a la Base de Datos.<br />"; 
     die( print_r( sqlsrv_errors(), true)); 
}

	  $sql = "UPDATE T103DAINFOPROC SET A103ENTIRADI = '$codi_enti', A103ESPERADI = '$codi_espe', A103NUENRADI = '$codi_nume', A103CODIPONE = '$codi_pone', A103NOMBPONE = '$nom_pone' WHERE A103LLAVPROC = '$radicado'";
$params = array();
$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
$stmt = sqlsrv_query( $conn, $sql , $params, $options );

$row_count = sqlsrv_num_rows( $stmt );
   
if ($row_count === false)
   echo "Error in retrieveing row count.";
   
   
   
      date_default_timezone_set('America/Bogota'); 
      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Modific&oacute; Ponente';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." "."Modifico Ponente ".$fechal." "."a las: ".$hora;
	  
	   //es de tipo 2 porque va asociado al mï¿½dulo de correspondencia 
	  $tipolog=1;
	$insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();
 
  }
  
  //--------------------AGREGADO POR JORGE ANDRES VALENCIA OROZCO 04 DICIEMBRE 2014---------------------------------------
   /***********************************************************************************/

  /*----------------------- Listar Ultima Actuaciï¿½n Despacho-------------------------------------*/

  /***********************************************************************************/

  public function listarDespachosSecretaria()

  {
	  $j=0;
	   unset($vector);
	  $id=$_GET['nombre'];
	  
	  $listar = $this->db->prepare("select ct.radicado from ubicacion_expediente ct where ct.id='$id'");

	  $listar->execute();
	  
	  while($field = $listar->fetch()){
		  $radicado=$field['radicado'];
	  }
	  
	  $serverName = "192.168.89.20"; //serverName\instanceName
      $connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
      $conn = sqlsrv_connect( $serverName, $connectionInfo);
     
	 if( $conn ) { 
   		// echo "Conectado a la Base de Datoss.<br />"; 
	 }
	 else{ 
     	echo "NO se puede conectar a la Base de Datoss.<br />"; 
     	die( print_r( sqlsrv_errors(), true)); 
	 }

	 $sql = ("SELECT  dbo.T103DAINFOPROC.A103DESCACTD,dbo.T103DAINFOPROC.A103FECHINID,dbo.T103DAINFOPROC.A103FECHDESD
			 FROM dbo.T103DAINFOPROC
			 WHERE dbo.T103DAINFOPROC.A103LLAVPROC = '$radicado'");
				
	 $params = array();
	 $options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
	 $stmt = sqlsrv_query( $conn, $sql , $params, $options );

	 $row_count = sqlsrv_num_rows( $stmt );

	 if ($row_count === false){
   		 echo "Error in retrieveing row count. en listarActuacion";
	 }
 	 else{
 
		 while( $row = sqlsrv_fetch_array( $stmt)){
	 
			$vector[$j][actud]   = $row['A103DESCACTD'];	
			$vector[$j][fechadd] = $row['A103FECHINID'];
			$vector[$j][fechard] = $row['A103FECHDESD'];
		
			$j++;
 
 		}
 
  	}
  
  	return $vector;
  
  }
  
  public function listarAtuaciones(){

  
	  $listar = $this->db->prepare("SELECT * FROM accion_expediente ORDER BY acc_descripcion");
	
	  $listar->execute();
	
	  return $listar;

  }
  public function listarAsignadoa(){

  
	  $listar = $this->db->prepare("SELECT * FROM pa_usuario WHERE nombre_usuario NOT LIKE '%D%' ORDER BY empleado");
	
	  $listar->execute();
	
	  return $listar;

  }
  public function listarAtuacionesExpedientes($codradicado){

  		
	  $listar = $this->db->prepare("SELECT * FROM actuacion_expediente WHERE actu_radicado = '$codradicado'
									AND id IN(SELECT MAX(id) FROM actuacion_expediente WHERE actu_radicado = '$codradicado');");
	
	  $listar->execute();
	
	  return $listar;

  }
  public function listarActuaciones_Expedientes(){

  		
	  $listar = $this->db->prepare("SELECT ue.radicado,ps.nombre,ae.actu_fechaf,pu.empleado,ace.acc_descripcion
			      				    FROM ((((actuacion_expediente ae INNER JOIN ubicacion_expediente ue ON ae.actu_radicado = ue.id)
			                        LEFT JOIN pa_clase_proceso ps ON ue.idclase_proceso = ps.id)
			                        INNER JOIN accion_expediente ace ON ae.actu_accion = ace.id)
			                        INNER JOIN pa_usuario pu ON ae.actu_asignadoa = pu.id)
			                        ORDER BY ae.actu_radicado,ae.id DESC");
	
	  $listar->execute();
	
	  return $listar;

  }
  //////////////////////////////////////////////////// 
  //Me indica si un registro existe en una tabla para
  //crearlo o actualizarlo
  //retornta 0->crear registro, 1->actualizar registro 
  //////////////////////////////////////////////////// 
  function Existe_Registro($codradicado){
  
		
		$listar = $this->db->prepare("SELECT * FROM actuacion_expediente WHERE actu_radicado = '$codradicado'");
	
	  	$listar->execute();
		
	    $resultado = $listar->rowCount();

		if(!$resultado){
	
			return 0;
		}
		else{
			return 1;
		}
		
  }  
  
  function Existe_Registro_Unico($codradicado,$actu_accion,$actu_fechai,$actu_dias,$actu_fechaf,$actu_asignadoa){
  
		
		$listar = $this->db->prepare("SELECT * FROM actuacion_expediente WHERE actu_radicado = '$codradicado'
									  AND actu_accion    = '$actu_accion'
									  AND actu_fechai    = '$actu_fechai'
									  AND actu_dias      = '$actu_dias'
									  AND actu_fechaf    = '$actu_fechaf'
									  AND actu_asignadoa = '$actu_asignadoa'");
	
	  	$listar->execute();
		
	    $resultado = $listar->rowCount();

		if(!$resultado){
	
			return 0;
		}
		else{
			return 1;
		}
		
  }  
  
  //**********************************************************************************************************************************************
  //PROYECTO PASAR LIQUIDAR COSTAS A AMBIENTE WEB 09 DE ABRIL 2015
  
  public function listarAreaEmpleados()

  {

  
	  $listar = $this->db->prepare("SELECT * FROM pa_areaempleado");

	  $listar->execute();
	  return $listar;

  }	
  
  
  
  public function registrarprueba()

  {

	 
	  $cedula = $_POST['cedula'];
	  
	  $nombre = $_POST['nombre'];

	  $fecha = $_POST['fecha'];

	  $area = $_POST['area'];

	  
	  //PARA EL LOG
	  date_default_timezone_set('America/Bogota'); 

      $fechaa=date('Y-m-d g:ia');

      $horaa=explode(' ',$fechaa);

      $fechal=$horaa[0];
      
	  $hora=$horaa[1]; 
	  
	  $accion='Resgistr&oacute; Prueba ';
	  $idres = $_SESSION['idUsuario'];

      $detalle=$_SESSION['nombre']." ".$accion.$fechal." "."a las: ".$hora;
	  
	   //es de tipo 1 porque va asociado al mï¿½dulo de archivo 
	  $tipolog=3;
	  
	  //echo "INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', //'$accion','$detalle','$idres','$tipolog');";

      $insertarlog = $this->db->prepare("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechaa', '$accion','$detalle','$idres','$tipolog');");

      $insertarlog->execute();
	  
	  $registrar = $this->db->prepare("INSERT INTO prueba (cedula,nombre,fecha,id_areaempleado)
									   values ('$cedula','$nombre','$fecha','$area')");

	  $registrar->execute(); 
	  $resultado = $registrar->rowCount();

	  
      if ($resultado)

      {			

       print'<script languaje="Javascript">location.href="index.php?controller=prueba&action=mensajes&nombre=1"</script>';

      }

	  
	  

  }
  //PARTE AGREGADA EL 07 DE MAYO DEL 2015 PARA EL MANEJO DEL TRASLADO ART. 108
  public function get_fecha_actual(){
	
	
		//FORMA WIN 7 Y 8, YA QUE DE LA FORMA ANTERIOR TOMA EL AM O PM Y DA CONFLICTOS PARA 
		//GUARDAR EN LA BASE DE DATOS EN ESTE CASO LA TABLA detalle_correspondencia 
		//CAMPO fecha QUE ES DATETIME 
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro=date('Y-m-d g:ia'); //FORMA PARA XP
		//$fecharegistro = date('Y-m-d g:i'); 
		
		return $fecharegistro; 
		
	
  }
  
  public function registrar_traslado_reposicion(){
  

		$idusuario    = $_SESSION['idUsuario'];
		
		$id     	   = trim($_GET['id']);
		$radicado      = trim($_GET['radicado']);
		
		$fechafijacion = trim($_GET['fechafijacion']);
		
		$fechainicial  = trim($_GET['fechainicial']);
		$datei         = date_create($fechainicial);
		$fi            = date_format($datei, 'Y-m-d H:i:s');
		$fi            = $fi."."."000";
		
		$fechafinal = trim($_GET['fechafinal']);
		$datef      = date_create($fechafinal);
		$ff         = date_format($datef, 'Y-m-d H:i:s');
		$ff         = $ff."."."000";
		
	
		$observacion = "Traslado reposiciï¿½n"."Fec Fijacion: ".$fechafijacion." Fec Inicial: ".$fechainicial." Fec Final: ".$fechafinal;
		
		$juzgadodestino     = trim($_GET['juzgadodestino']);
		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
			
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
			
		$tiporegistro = "Confirmar Traslado reposiciï¿½n";
		$accion  = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
	
		//--------------------------------------------------------------------------------------------
		
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		$serverName     = "192.168.89.20"; 
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
			//ACTUALIZACIONES A SIGLO XXI
		
			$sininstancia = $radicado;
	  		$sin = substr($sininstancia, 0, 21);
		
			//COMO ESTABA
			/*UPDATE T103DAINFOPROC SET a103descacts ='Traslado reposiciï¿½n', a103codiacts ='30023087', a103codipads =@var,
					A103FECHINIS = convert(datetime, '$fi', 121),A103FECHFINS = convert(datetime, '$ff', 121),a103fechdess = GETDATE(),
					A103ANOTACTS ='$observacion'
					WHERE a103llavproc='$radicado';*/
		
			$sql = ("DECLARE @cad integer
					 DECLARE @var varchar(50)
			
					SELECT @cad = MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$radicado' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,
					A110NUMDTERM,A110FECHINIC,A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,
					A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,A110RENUTERM) 
					VALUES('$radicado',@cad,'$sin','00','30023087','30023086','Traslado reposiciï¿½n','N','NO','N',NULL,NULL,NULL,
					GETDATE(),NULL,NULL,'0000',NULL,GETDATE(),
					NULL,NULL,NULL,'D','P',GETDATE(),NULL,NULL)
			
					SELECT @var = A110CODIPADR FROM T110DRACTUPROC
					WHERE A110CONSACTU = (SELECT MAX(A110CONSACTU) - 1 AS MAXIMO FROM T110DRACTUPROC WHERE A110LLAVPROC ='$radicado') 
					AND A110LLAVPROC ='$radicado'
					
					UPDATE T103DAINFOPROC SET a103descactd ='Traslado reposiciï¿½n', a103codiactd ='30023087', a103codipadd =@var,
					A103FECHINID = NULL,A103FECHFIND = NULL,a103fechdesd = GETDATE(),
					A103ANOTACTD ='$observacion'
					WHERE a103llavproc='$radicado';");
		
		
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			//echo $fi." ".$ff;
			print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';
		}
		else{
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			   
			   		
					
						//SOLO TRASLADO REPOSICION
						//$this->db->exec("UPDATE ubicacion_expediente SET fecha='$fechalog',idusuario = '$idusuario',fecha_fin_liquidacion = '$fechafinal' where id='$id'");
						
						$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
						                 VALUES('$id','$fecharegistro','$observacion','$idusuario')");
						
		
						$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog)
						                 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
					
					
					
					

				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				//echo "Fallo: " . $e->getMessage();
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';
			}
		
		}
		
  }
  
  public function RegistrarTraslado108(){
  

		$idusuario    = $_SESSION['idUsuario'];
		
		$id     	   = trim($_GET['id']);
		$radicado      = trim($_GET['radicado']);
		
		$fechafijacion = trim($_GET['fechafijacion']);
		
		$fechainicial  = trim($_GET['fechainicial']);
		$datei         = date_create($fechainicial);
		$fi            = date_format($datei, 'Y-m-d H:i:s');
		$fi            = $fi."."."000";
		
		$fechafinal = trim($_GET['fechafinal']);
		$datef      = date_create($fechafinal);
		$ff         = date_format($datef, 'Y-m-d H:i:s');
		$ff         = $ff."."."000";
		
	
		$observacion = "Traslado Art. 110 "."Fec Fijacion: ".$fechafijacion." Fec Inicial: ".$fechainicial." Fec Final: ".$fechafinal;

		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
			
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
			
		$tiporegistro = "Confirmar Traslado Art. 110";
		$accion  = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		$tiporegistro2 = "A Despacho";
		$accion2  = "Registra ".$tiporegistro2." En el Sistema (SIEPRO)";
		$detalle2 = $_SESSION['nombre']." ".$accion2." ".$fechalog." "."a las: ".$horalog;
		
		//--------------------------------------------------------------------------------------------
		
		$adespacho          = trim($_GET['adespacho']);
		$juzgadodestino     = trim($_GET['juzgadodestino']);
		$observacion_salida = 'A DESPACHO, AL JUZGADO '.$juzgadodestino.' EL '.$fechalog;
		
		//--------------------------------------------------------------------------------------------
		
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		$serverName     = "192.168.89.20"; 
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		/*if($adespacho == 1){
		
			$sql = ("UPDATE info1 SET des = 'A DESPACHO'
			         WHERE radicado ='16730';
					
				     INSERT INTO tabla1(radicado,fechar,fechai,fechaf,observacion) values('$radicado','$fechafijacion','$fechainicial','$fechafinal','$observacion')
					 
					 INSERT INTO tabla1(radicado,fechar,fechai,fechaf,observacion) values('$radicado','$fechafijacion','$fechainicial','$fechafinal','$observacion_salida')");
		
		}
		else{
		//SQL PARA PRUEBAS
		$sql = ("UPDATE info1 SET des = '$observacion'
			     WHERE radicado ='$id';
					
				 INSERT INTO tabla1(radicado,fechar,fechai,fechaf,observacion) values('$radicado','$fechafijacion','$fechainicial','$fechafinal','$observacion')");
		}*/
				
			
		$sininstancia = $radicado;
	  	$sin = substr($sininstancia, 0, 21);
		
		if($adespacho == 1){
			
			//EN LAS 4 PRIMERAS SQL SE EJECUTAN PROCESOS PARA EL 110
			//EN LAS 3 SIGUIENTES SQL SE EJECUTAN PROCESOS PARA QUE ACTUALICE A DESPACHO
			$sql = ("DECLARE @cad integer
					 DECLARE @var varchar(50)
					 DECLARE @cad2 integer 
			
					SELECT @cad = MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$radicado' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,
					A110NUMDTERM,A110FECHINIC,A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,
					A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,A110RENUTERM) 
					VALUES('$radicado',@cad,'$sin','00','30023325','30023086','Traslado Art. 110','J','SI','C',3,convert(datetime, '$fi', 121),convert(datetime, '$ff', 121),
					GETDATE(),NULL,NULL,NULL,NULL,NULL,
					NULL,NULL,NULL,'S','D',GETDATE(),'NO','NO')
			
					SELECT @var = A110CODIPADR FROM T110DRACTUPROC
					WHERE A110CONSACTU = (SELECT MAX(A110CONSACTU) - 1 AS MAXIMO FROM T110DRACTUPROC WHERE A110LLAVPROC ='$radicado') 
					AND A110LLAVPROC ='$radicado'
					
					UPDATE T103DAINFOPROC SET a103descacts ='Traslado Art. 110', a103codiacts ='30023325', a103codipads =@var,
					A103FECHINIS = convert(datetime, '$fi', 121),A103FECHFINS = convert(datetime, '$ff', 121),a103fechdess = GETDATE(),
					A103ANOTACTS ='$observacion'
					WHERE a103llavproc='$radicado';
					
					
	
					UPDATE t103dainfoproc SET a103descacts='A Despacho', a103codiacts='30000031', a103codipads='30000031', a103fechdess = GETDATE(), 
					a103anotacts = 'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal'
					WHERE a103llavproc='$radicado';
					
					SELECT @cad2 =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$radicado' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
					A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
					A110RENUTERM) values('$radicado',@cad2,'$sin','00','30000031','30000031','A Despacho','N','NO','N',0,NULL,NULL,GETDATE(),NULL,NULL,NULL,NULL,NULL,
					'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal',NULL,NULL,'S','D',GETDATE(),'NO','NO')");
		}
		else{  
		
			$sql = ("DECLARE @cad integer
					 DECLARE @var varchar(50)
			
					SELECT @cad = MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$radicado' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,
					A110NUMDTERM,A110FECHINIC,A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,
					A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,A110RENUTERM) 
					VALUES('$radicado',@cad,'$sin','00','30023325','30023086','Traslado Art. 110','J','SI','C',3,convert(datetime, '$fi', 121),convert(datetime, '$ff', 121),
					GETDATE(),NULL,NULL,NULL,NULL,NULL,
					NULL,NULL,NULL,'S','D',GETDATE(),'NO','NO')
			
					SELECT @var = A110CODIPADR FROM T110DRACTUPROC
					WHERE A110CONSACTU = (SELECT MAX(A110CONSACTU) - 1 AS MAXIMO FROM T110DRACTUPROC WHERE A110LLAVPROC ='$radicado') 
					AND A110LLAVPROC ='$radicado'
					
					UPDATE T103DAINFOPROC SET a103descacts ='Traslado Art. 110', a103codiacts ='30023325', a103codipads =@var,
					A103FECHINIS = convert(datetime, '$fi', 121),A103FECHFINS = convert(datetime, '$ff', 121),a103fechdess = GETDATE(),
					A103ANOTACTS ='$observacion'
					WHERE a103llavproc='$radicado';");
		
		}
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			//echo $fi." ".$ff;
			print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';
		}
		else{
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			   
			   		if($adespacho == 1){
						
						
						//TRASLADO 110
						$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) VALUES('$id','$fecharegistro','$observacion','$idusuario')");
						
						$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
						
						//A DESPACHO
						$this->db->exec("UPDATE ubicacion_expediente SET fecha='$fechalog',idjuzgadodestino ='$juzgadodestino',fechasalida='$fechalog',idusuario = '$idusuario',
	  								     observacion_salida = '$observacion_salida' where id='$id'");
					
						$fecha_amd    = $modelo->get_fecha_actual_amd();	
						$hora_militar = $modelo->get_hora_actual_24horas();
						$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,estadoobs,a_despacho,idusuario,revisasecretaria,fecharevisecre,horarevisecre) 
						                 VALUES('$id','$fecharegistro','A DESPACHO',0,1,'$idusuario',1,'$fecha_amd','$hora_militar')");
										 
						$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechalog', '$accion2','$detalle2','$idusuario','$tipolog')");
			
						
					}
					else{
					
						//SOLO TRASLADO 110
						$this->db->exec("UPDATE ubicacion_expediente SET fecha='$fechalog',idusuario = '$idusuario',fecha_fin_liquidacion = '$fechafinal' where id='$id'");
						
						$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) VALUES('$id','$fecharegistro','$observacion','$idusuario')");
						
						//OBSERVACION PEDIDA POR SECRETARIO 1 DE FEBRERO 2016
						$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) VALUES('$id','$fecharegistro','EN FIRME PASA A CONTADOR PARA LIQUIDAR','$idusuario')");
						
						$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
					
					}
					
					
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				//echo "Fallo: " . $e->getMessage();
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';
			}
		
		}
		
  }
  
  public function RegistrarADespacho(){
  

		$idusuario      = $_SESSION['idUsuario'];
		
		$id     	    = trim($_GET['id']);
		$radicado       = trim($_GET['radicado']);
		
		$juzgadodestino = trim($_GET['juzgadodestino']);
		//$observacion_salida = 'A DESPACHO, AL JUZGADO '.$juzgadodestino.' EL '.$fechalog;
	
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
		
		$tiporegistro = "A Despacho";
		$accion  = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		//--------------------------------------------------------------------------------------------
		
		/*if($idusuario == 19){
		
			$observaciondespacho = 'A DESPACHO CON AUTO';
			$observacion_salida  = 'A DESPACHO CON AUTO, AL JUZGADO '.$juzgadodestino.' EL '.$fechalog;
			
		}*/
		//else{
		
			$observaciondespacho = 'A DESPACHO';
			//$observacion_salida  = 'A DESPACHO, AL JUZGADO '.$juzgadodestino.' EL '.$fechalog;
			$observacion_salida	= trim($_GET['obs']);
		//}
		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		//--------------------------------------------------------------------------------------------
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		$serverName     = "192.168.89.20"; 
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		//SQL PARA PRUEBAS
		/*$sql = ("UPDATE info1 SET des = '$observacion'
			     WHERE radicado ='$id';
					
				 INSERT INTO tabla1(radicado,fechar,fechai,fechaf,observacion) values('$radicado','$fechafijacion','$fechainicial','$fechafinal','$observacion')");*/
				
			
		$sininstancia = $radicado;
	  	$sin = substr($sininstancia, 0, 21);
		  
		$sql = ("DECLARE @cad integer
					 
					UPDATE t103dainfoproc SET a103descacts='A Despacho', a103codiacts='30000031', a103codipads='30000031', a103fechdess = GETDATE(), 
					a103anotacts = 'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal'
					WHERE a103llavproc='$radicado';
					
					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$radicado' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
					A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,
					A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
					A110RENUTERM) values('$radicado',@cad,'$sin','00','30000031','30000031','A Despacho','N','NO','N',0,NULL,NULL,GETDATE(),NULL,NULL,
					 NULL,NULL,NULL,
					'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal',NULL,NULL,'S','D',GETDATE(),'NO','NO')");
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			//echo $fi." ".$ff;
			print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';
		}
		else{
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			   
					//A DESPACHO
					$this->db->exec("UPDATE ubicacion_expediente SET fecha='$fechalog',idjuzgadodestino ='$juzgadodestino',fechasalida='$fechalog',idusuario = '$idusuario',
	  								 observacion_salida = '$observacion_salida' where id='$id'");
					
					$fecha_amd    = $modelo->get_fecha_actual_amd();	
					$hora_militar = $modelo->get_hora_actual_24horas();
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,estadoobs,a_despacho,idusuario,revisasecretaria,fecharevisecre,horarevisecre) 
					                 VALUES('$id','$fecharegistro','$observaciondespacho',0,1,'$idusuario',1,'$fecha_amd','$hora_militar')");
									 
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		}
		
  }
  
 //ESTA ES LA MISMA FUNCION ANTERIOR DE RegistrarTraslado108, ES DECIR COMO ERA PERO LA RENOMBRO PARA QUE NO SE USE, YA QUE SE VA A GRABAR TANTO TRASLADO 108 COMO A DESPACHO
 //EN SIEPRO Y SIGLO XXI EN LA FUNCION ANTERIOR  
 public function RegistrarTraslado108_2(){
  

		$idusuario    = $_SESSION['idUsuario'];
		
		$id     	   = trim($_GET['id']);
		$radicado      = trim($_GET['radicado']);
		
		$fechafijacion = trim($_GET['fechafijacion']);
		
		$fechainicial  = trim($_GET['fechainicial']);
		$datei         = date_create($fechainicial);
		$fi            = date_format($datei, 'Y-m-d H:i:s');
		$fi            = $fi."."."000";
		
		$fechafinal = trim($_GET['fechafinal']);
		$datef      = date_create($fechafinal);
		$ff         = date_format($datef, 'Y-m-d H:i:s');
		$ff         = $ff."."."000";
		
	
		$observacion   = "Traslado Art. 108 "."Fec Fijacion: ".$fechafijacion." Fec Inicial: ".$fechainicial." Fec Final: ".$fechafinal;
		
		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
			
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
			
		$tiporegistro = "Confirmar Traslado Art. 108";
		$accion  = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		//--------------------------------------------------------------------------------------------
		
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		//CONEXION A SIGLO XXI
		/*$serverName     = "192.168.89.20"; 
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		//SQL PARA PRUEBAS
		$sql = ("UPDATE info1 SET des = '$observacion'
			     WHERE radicado ='$id';
					
				 INSERT INTO tabla1(radicado,fechar,fechai,fechaf,observacion) values('$radicado','$fechafijacion','$fechainicial','$fechafinal','$observacion')");
				
			
		/*$sininstancia = $radicado;
	  	$sin = substr($sininstancia, 0, 21);
		  
		$sql = ("DECLARE @cad integer
				 DECLARE @var varchar(50)
		
				SELECT @cad = MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$radicado' 
				
				INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,
				A110NUMDTERM,A110FECHINIC,A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,
				A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,A110RENUTERM) 
				VALUES('$radicado',@cad,'$sin','00','30023325','30023086','Traslado Art. 108','J','SI','C',3,convert(datetime, '$fi', 121),convert(datetime, '$ff', 121),
				GETDATE(),NULL,NULL,NULL,NULL,NULL,
				NULL,NULL,NULL,'S','D',GETDATE(),'NO','NO')
		
				SELECT @var = A110CODIPADR FROM T110DRACTUPROC
				WHERE A110CONSACTU = (SELECT MAX(A110CONSACTU) - 1 AS MAXIMO FROM T110DRACTUPROC WHERE A110LLAVPROC ='$radicado') 
				AND A110LLAVPROC ='$radicado'
				
				UPDATE T103DAINFOPROC SET a103descacts ='Traslado Art. 108', a103codiacts ='30023325', a103codipads =@var,
				A103FECHINIS = convert(datetime, '$fi', 121),A103FECHFINS = convert(datetime, '$ff', 121),a103fechdess = GETDATE(),
				A103ANOTACTS ='$observacion'
				WHERE a103llavproc='$radicado';");*/
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			//echo $fi." ".$ff;
			print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';
		}
		else{
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			   
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) VALUES('$id','$fecharegistro','$observacion','$idusuario')");
									 
	
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				//echo "Fallo: " . $e->getMessage();
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';
			}
		
		}
		
  }
  
  /*------------------------------  ACTUALIZAR Clase Proceso EN SIEPRO CON EL PROCESO DE TRAIDO DE Siglo XXI--------------------*/
  public function ActualizarClaseProceso(){
  
  
		$serverName = "192.168.89.20"; //serverName\instanceName
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn = sqlsrv_connect( $serverName, $connectionInfo);
		 
		 if( $conn ) { 
			// echo "Conectado a la Base de Datoss.<br />"; 
		 }
		 else{ 
			echo "NO se puede conectar a la Base de Datoss.<br />"; 
			die( print_r( sqlsrv_errors(), true)); 
		 }
	
		  
		 $sql = ("SELECT t103.A103LLAVPROC,t103.A103CODICLAS
     	 		  FROM dbo.T103DAINFOPROC t103
  		          WHERE t103.A103LLAVPROC IN('17001400300820110013600',
											'17001400300820110014600',
											'17001400300820110014900',
											'17001400300820110015000',
											'17001400300820110015100',
											'17001400300820110016300',
											'17001400300820110016600',
											'17001400300820110017300',
											'17001400300820110018300',
											'17001400300820110021200',
											'17001400300820110021400',
											'17001400300820110026200',
											'17001400300820110026300',
											'17001400300820110027000',
											'17001400300820110029800',
											'17001400300820110030000',
											'17001400300820110031400',
											'17001400300820110034200',
											'17001400300820110034400',
											'17001400300820110035400',
											'17001400300820110041100',
											'17001400300820110041600',
											'17001400300820110043000',
											'17001400300820110043800',
											'17001400300820110044000',
											'17001400300820110044400',
											'17001400300820110045600',
											'17001400300820110050200',
											'17001400300820110051900',
											'17001400300820110057700',
											'17001400300820120004000',
											'17001400300820120006100',
											'17001400300820120007200',
											'17001400300820120009500',
											'17001400300820120010400',
											'17001400300820120012100',
											'17001400300820120012300',
											'17001400300820120013200',
											'17001400300820120013700',
											'17001400300820120015800',
											'17001400300820120019300',
											'17001400300820120020600',
											'17001400300820120021300',
											'17001400300820120022100',
											'17001400300820120022900',
											'17001400300820120023100',
											'17001400300820120026500',
											'17001400300820120027700',
											'17001400300820120040600',
											'17001400300820120041600',
											'17001400300820120045000',
											'17001400300820120047400',
											'17001400300820120051400',
											'17001400300820120054700',
											'17001400300820120056800',
											'17001400300820130013900',
											'17001400300820130018300',
											'17001400300820130024500',
											'17001400300820130024700',
											'17001400300820130027500',
											'17001400300820130030800',
											'17001400300820130032400',
											'17001400300820130032700',
											'17001400300820130033200',
											'17001400300820130034900',
											'17001400300820130041200',
											'17001400300820130044500',
											'17001400300820130045400',
											'17001400300820130050100',
											'17001400300820130054500',
											'17001400300820130057800',
											'17001400300820130057900',
											'17001400300820130062900',
											'17001400300820130063700',
											'17001400300820130066100',
											'17001400300820140010300',
											'17001400300820140012100',
											'17001400300820140018500',
											'17001400300820140020800',
											'17001400300820140022200',
											'17001400300820140023700',
											'17001400300820140028800',
											'17001400300820140033400',
											'17001400300820140036100',
											'17001400300820140040100',
											'17001400300820140040200',
											'17001400300820140041000',
											'17001400300820140041100',
											'17001400300820140044200',
											'17001400300820140056200',
											'17001400300920030023700',
											'17001400300920030060200',
											'17001400300920050042700',
											'17001400300920060036900',
											'17001400300920060045200',
											'17001400300920060050000',
											'17001400300920070016900',
											'17001400300920070019400',
											'17001400300920070037500',
											'17001400300920070061700',
											'17001400300920080017900',
											'17001400300920080022600',
											'17001400300920080024000',
											'17001400300920080058600',
											'17001400300920090008700',
											'17001400300920090040400',
											'17001400300920090046000',
											'17001400300920090057200',
											'17001400300920090071500',
											'17001400300920090072500',
											'17001400300920090076800',
											'17001400300920090085900',
											'17001400300920090096000',
											'17001400300920100004600',
											'17001400300920100007800',
											'17001400300920100016800',
											'17001400300920100020200',
											'17001400300920100021700',
											'17001400300920100056800',
											'17001400300920100065900',
											'17001400300920100069200',
											'17001400300920100073500',
											'17001400300920100073900',
											'17001400300920100079400',
											'17001400300920110009800',
											'17001400300920110013700',
											'17001400300920110018700',
											'17001400300920110026000',
											'17001400300920110031000',
											'17001400300920110032400',
											'17001400300920110036100',
											'17001400300920110041500',
											'17001400300920110044000',
											'17001400300920110045800',
											'17001400300920110046100',
											'17001400300920110048600',
											'17001400300920110050500',
											'17001400300920110051800',
											'17001400300920110052300',
											'17001400300920110052700',
											'17001400300920110055100',
											'17001400300920110056300',
											'17001400300920110056400',
											'17001400300920110062900',
											'17001400300920110068400',
											'17001400300920110072000',
											'17001400300920110076100',
											'17001400300920110079900',
											'17001400300920120003300',
											'17001400300920120003900',
											'17001400300920120012200',
											'17001400300920120013300',
											'17001400300920120015600',
											'17001400300920120021200',
											'17001400300920120024700',
											'17001400300920120042200',
											'17001400300920120052800',
											'17001400300920130005500',
											'17001400300920130019600',
											'17001400300920130030900',
											'17001400300920130031500',
											'17001400300920130048100',
											'17001400300920130049100',
											'17001400300920130055700',
											'17001400300920130057700',
											'17001400300920140000100',
											'17001400300920140002900',
											'17001400300920140005200',
											'17001400300920140012300',
											'17001400300920140015600',
											'17001400300920140025800',
											'17001400300920140028300',
											'17001400300920140028500',
											'17001400300920140029500',
											'17001400300920140049100',
											'17001400301019980004800',
											'17001400301019990018700',
											'17001400301020000002800',
											'17001400301020010017500',
											'17001400301020020012000',
											'17001400301020020034100',
											'17001400301020020054000',
											'17001400301020020074500',
											'17001400301020030010500',
											'17001400301020040008300',
											'17001400301020040015200',
											'17001400301020040072300',
											'17001400301020050018100',
											'17001400301020050046000',
											'17001400301020060004100',
											'17001400301020060005800',
											'17001400301020060049300',
											'17001400301020060049700',
											'17001400301020060053400',
											'17001400301020060056100',
											'17001400301020070003600',
											'17001400301020070007500',
											'17001400301020070012600',
											'17001400301020070015700',
											'17001400301020070016100',
											'17001400301020070016700',
											'17001400301020070021200',
											'17001400301020070037700',
											'17001400301020070043800',
											'17001400301020070048200',
											'17001400301020070050300',
											'17001400301020070053100',
											'17001400301020070060700',
											'17001400301020080002200',
											'17001400301020080018600',
											'17001400301020080023800',
											'17001400301020080041900',
											'17001400301020080042000',
											'17001400301020080042100',
											'17001400301020080053900',
											'17001400301020080054500',
											'17001400301020080055800',
											'17001400301020080056100',
											'17001400301020080059000',
											'17001400301020080065000',
											'17001400301020080075100',
											'17001400301020080077800',
											'17001400301020090008900',
											'17001400301020090015300',
											'17001400301020090017700',
											'17001400301020090018600',
											'17001400301020090023400',
											'17001400301020090039200',
											'17001400301020090067100',
											'17001400301020090073200',
											'17001400301020090073500',
											'17001400301020090075100',
											'17001400301020090076400',
											'17001400301020090079300',
											'17001400301020090082500',
											'17001400301020090082800',
											'17001400301020100000350',
											'17001400301020100006200',
											'17001400301020100013000',
											'17001400301020100013900',
											'17001400301020100019300',
											'17001400301020100019500',
											'17001400301020100023000',
											'17001400301020100023200',
											'17001400301020100025300',
											'17001400301020100029000',
											'17001400301020100029600',
											'17001400301020100033200',
											'17001400301020100033400',
											'17001400301020100034000',
											'17001400301020100034900',
											'17001400301020100039600',
											'17001400301020100041700',
											'17001400301020100045800',
											'17001400301020100047900',
											'17001400301020100053100',
											'17001400301020100057500',
											'17001400301020100067400',
											'17001400301020100069100',
											'17001400301020100072700',
											'17001400301020110004400',
											'17001400301020110005100',
											'17001400301020110007000',
											'17001400301020110011900',
											'17001400301020110012000',
											'17001400301020110015000',
											'17001400301020110020200',
											'17001400301020110021200',
											'17001400301020110026800',
											'17001400301020110029900',
											'17001400301020110038200',
											'17001400301020110039600',
											'17001400301020110040300',
											'17001400301020110042700',
											'17001400301020110042900',
											'17001400301020110044800',
											'17001400301020110045000',
											'17001400301020110046300',
											'17001400301020110048800',
											'17001400301020120015700',
											'17001400301020120019800',
											'17001400301020120029400',
											'17001400301020120032800',
											'17001400301020120036800',
											'17001400301020120043900',
											'17001400301020120052400',
											'17001400301020120056600',
											'17001400301020120056700',
											'17001400301020120065700',
											'17001400301020120068600',
											'17001400301020130009200',
											'17001400301020130010100',
											'17001400301020130012100',
											'17001400301020130026400',
											'17001400301020130034200',
											'17001400301020130036400',
											'17001400301020130037900',
											'17001400301020130042200',
											'17001400301020130043300',
											'17001400301020130064300',
											'17001400301020130066200',
											'17001400301020140002400',
											'17001400301020140006200',
											'17001400301020140032400',
											'17001400301020140034000',
											'17001400301020140044600',
											'17001400301020140050000',
											'17001400301120050007800',
											'17001400301120060002300',
											'17001400301120060027300',
											'17001400301120070005200',
											'17001400301120070048800',
											'17001400301120070056500',
											'17001400301120080027000',
											'17001400301120080027600',
											'17001400301120080039800',
											'17001400301120080076700',
											'17001400301120090006700',
											'17001400301120090026500',
											'17001400301120090027800',
											'17001400301120090029700',
											'17001400301120090030600',
											'17001400301120090039300',
											'17001400301120090052300',
											'17001400301120090052800',
											'17001400301120090056700',
											'17001400301120090073800',
											'17001400301120090090000',
											'17001400301120100009200',
											'17001400301120100033000',
											'17001400301120100037900',
											'17001400301120100038300',
											'17001400301120100041000',
											'17001400301120100044500',
											'17001400301120100045300',
											'17001400301120100053500',
											'17001400301120100056500',
											'17001400301120100059300',
											'17001400301120100060700',
											'17001400301120100070000',
											'17001400301120100072100',
											'17001400301120110009500',
											'17001400301120110012200',
											'17001400301120110012500',
											'17001400301120110012700',
											'17001400301120110012800',
											'17001400301120110013500',
											'17001400301120110016500',
											'17001400301120110016600',
											'17001400301120110018400',
											'17001400301120110018500',
											'17001400301120110018800',
											'17001400301120110024600',
											'17001400301120110026300',
											'17001400301120110027300',
											'17001400301120110028300',
											'17001400301120110029400',
											'17001400301120110031800',
											'17001400301120110032100',
											'17001400301120110033200',
											'17001400301120110033900',
											'17001400301120110035500',
											'17001400301120110036000',
											'17001400301120110037800',
											'17001400301120110038400',
											'17001400301120110041500',
											'17001400301120110041800',
											'17001400301120110042700',
											'17001400301120110043100',
											'17001400301120110045700',
											'17001400301120110046200',
											'17001400301120110046800',
											'17001400301120110047000',
											'17001400301120110048100',
											'17001400301120110049300',
											'17001400301120110051000',
											'17001400301120110051900',
											'17001400301120110068700',
											'17001400301120110068800',
											'17001400301120110071100',
											'17001400301120110073500',
											'17001400301120120003700',
											'17001400301120120010800',
											'17001400301120120017400',
											'17001400301120120021900',
											'17001400301120120023700',
											'17001400301120120027800',
											'17001400301120120039500',
											'17001400301120120041100',
											'17001400301120120041300',
											'17001400301120120045900',
											'17001400301120120048600',
											'17001400301120120051600',
											'17001400301120120052500',
											'17001400301120120054000',
											'17001400301120130004700',
											'17001400301120130009900',
											'17001400301120130011600',
											'17001400301120130013000',
											'17001400301120130019100',
											'17001400301120130021500',
											'17001400301120130030000',
											'17001400301120130033400',
											'17001400301120130045000',
											'17001400301120130046100',
											'17001400301120130052600',
											'17001400301120130052800',
											'17001400301120130054000',
											'17001400301120130056000',
											'17001400301120130059700',
											'17001400301120130065700',
											'17001400301120130066500',
											'17001400301120130068000',
											'17001400301120140015000',
											'17001400301120140018600',
											'17001400301120140022200',
											'17001400301120140025400',
											'17001400301120140029200',
											'17001400301120140031800',
											'17001400301220060039400',
											'17001400301220060054000',
											'17001400301220070008200',
											'17001400301220070012300',
											'17001400301220070029900',
											'17001400301220070035600',
											'17001400301220070046200',
											'17001400301220070051600',
											'17001400301220070063100',
											'17001400301220070064800',
											'17001400301220080004300',
											'17001400301220080006200',
											'17001400301220080011700',
											'17001400301220080019200',
											'17001400301220080026200',
											'17001400301220080039100',
											'17001400301220080042300',
											'17001400301220080050000',
											'17001400301220080062100',
											'17001400301220090002700',
											'17001400301220090011400',
											'17001400301220090023900',
											'17001400301220090026800',
											'17001400301220090036700',
											'17001400301220090042900',
											'17001400301220090044900',
											'17001400301220090061400',
											'17001400301220090062700',
											'17001400301220090066500',
											'17001400301220090070300',
											'17001400301220090070900',
											'17001400301220090073500',
											'17001400301220090076800',
											'17001400301220100000400',
											'17001400301220100001800',
											'17001400301220100002800',
											'17001400301220100003500',
											'17001400301220100004600',
											'17001400301220100005600',
											'17001400301220100006500',
											'17001400301220100006600',
											'17001400301220100012400',
											'17001400301220100013500',
											'17001400301220100013700',
											'17001400301220100017200',
											'17001400301220100024300',
											'17001400301220100028500',
											'17001400301220100029800',
											'17001400301220100033900',
											'17001400301220100038900',
											'17001400301220100040100',
											'17001400301220100041900',
											'17001400301220100049500',
											'17001400301220100049800',
											'17001400301220100050600',
											'17001400301220100057700',
											'17001400301220100060000',
											'17001400301220100061900',
											'17001400301220100063100',
											'17001400301220100063900',
											'17001400301220100067300',
											'17001400301220110004200',
											'17001400301220110012000',
											'17001400301220110012700',
											'17001400301220110013500',
											'17001400301220110016000',
											'17001400301220110017000',
											'17001400301220110017500',
											'17001400301220110021600',
											'17001400301220110023000',
											'17001400301220110024300',
											'17001400301220110025500',
											'17001400301220110027700',
											'17001400301220110028700',
											'17001400301220110029800',
											'17001400301220110032100',
											'17001400301220110034200',
											'17001400301220110036000',
											'17001400301220110038000',
											'17001400301220110043800',
											'17001400301220110048700',
											'17001400301220110049200',
											'17001400301220110068200',
											'17001400301220120016300',
											'17001400301220120021300',
											'17001400301220120024200',
											'17001400301220120038400',
											'17001400301220120043400',
											'17001400301220120044300',
											'17001400301220130000200',
											'17001400301220130000800',
											'17001400301220130002800',
											'17001400301220130006800',
											'17001400301220130009600',
											'17001400301220130019300',
											'17001400301220130023700',
											'17001400301220130026800',
											'17001400301220130032700',
											'17001400301220130038700',
											'17001400301220130057400',
											'17001400301220130064800',
											'17001400301220140005600',
											'17001400301220140011800',
											'17001400301220140018100',
											'17001400301220140024600',
											'17001400301220140024800',
											'17001400301220140026400',
											'17001400301220140030800')");
					
		 $params = array();
		 $options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		 $stmt = sqlsrv_query( $conn, $sql , $params, $options );
	
		 $row_count = sqlsrv_num_rows( $stmt );
	
		 if ($row_count === false){
			 echo "Error in retrieveing row count. en listarActuacion";
		 }
		 else{
	 
			 while( $row = sqlsrv_fetch_array( $stmt)){
		 
		 		 $radi = $row['A103LLAVPROC'];
				 $cp   = $row['A103CODICLAS'];	
				
				
				 $datoprocesosxxi = $this->db->prepare("select id from pa_clase_proceso where idsigloxxi = '$cp'");

				 $datoprocesosxxi->execute();
				  
				 while($fila = $datoprocesosxxi->fetch()){
					  $idcodproceso = $fila['id'];
				 }
				
				 $modificar = $this->db->prepare("UPDATE ubicacion_expediente SET idclase_proceso ='$idcodproceso' WHERE radicado='$radi'");
	  			 $modificar->execute();
				
		
			}
	 
		}
  
  		print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
  
  }
  
  public function listarLogArchivo_2(){

		/*$listar = $this->db->prepare("SELECT logusuario.fecha,logusuario.accion,logusuario.detalle,usuario.empleado,usuario.foto
									  FROM LOG AS logusuario
								      INNER JOIN pa_usuario AS usuario ON (logusuario.idusuario=usuario.id)
									  WHERE logusuario.idtipolog = 1
									  ORDER BY logusuario.id DESC
									  LIMIT 15");*/
									  
		
		$listar = $this->db->prepare("SELECT logusuario.fecha,logusuario.accion,logusuario.detalle,usuario.empleado,usuario.foto
									  FROM LOG AS logusuario
								      INNER JOIN pa_usuario AS usuario ON (logusuario.idusuario=usuario.id)
									  WHERE logusuario.idtipolog = 1 AND logusuario.id = (SELECT MAX(id) AS id  FROM log)
									  ORDER BY logusuario.id DESC");							  
		$listar->execute();
	 	return $listar;
  }	
  
  public function get_fecha_actual_amd(){
	
	
		//FORMA WIN 7 Y 8, YA QUE DE LA FORMA ANTERIOR TOMA EL AM O PM Y DA CONFLICTOS PARA 
		//GUARDAR EN LA BASE DE DATOS EN ESTE CASO LA TABLA detalle_correspondencia 
		//CAMPO fecha QUE ES DATETIME 
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro=date('Y-m-d'); //FORMA PARA XP
		//$fecharegistro = date('Y-m-d g:i'); 
		
		return $fecharegistro; 
		
	
  }
  
  public function get_datos_proceso($idradicado){
	
		
		$listar     = $this->db->prepare("SELECT ubi.id AS idproceso,ubi.radicado,ubi.cedula_demandante,ubi.demandante,ubi.cedula_demandado,ubi.demandado,
										  pj.id AS idjuzgadoorigen,pj.nombre AS nombrejuzgadoorigen 
										  FROM (ubicacion_expediente ubi INNER JOIN pa_juzgado pj ON ubi.idjuzgado = pj.id)
									      WHERE ubi.id = '$idradicado'");
	
  		$listar->execute();

  		return $listar;
	
  }
  
  
  
  //---------------------PARA REPARTO MASIVO------------------------------------------------------------------
  public function get_reparto_masivo($firm,$ffrm){
	
		
		$listar     = $this->db->prepare("SELECT id,idusuario,fecharegistrosistema,radicado
								          FROM ubicacion_expediente WHERE (fecharegistrosistema >= '$firm' AND fecharegistrosistema <= '$ffrm')
								          AND idjuzgadodestino IS NULL AND idjuzgado_reparto IS NULL
								          AND radicado NOT LIKE '%170014303%'
								          AND idusuario = 51");
	
  		$listar->execute();

  		return $listar;
	
  }
  
  
   public function get_cantidad_reparto_masivo($firm,$ffrm){
	
		
		$listar     = $this->db->prepare("SELECT COUNT(id) AS registros_masivos
										  FROM ubicacion_expediente WHERE (fecharegistrosistema >= '$firm' AND fecharegistrosistema <= '$ffrm')
										  AND idjuzgadodestino IS NULL AND idjuzgado_reparto IS NULL
										  AND radicado NOT LIKE '%170014303%'
										  AND idusuario = 51");
	
  		$listar->execute();

  		return $listar;
	
  }
  
  //INFORMACION DE LA PARTE EN JUSTICIA XXI, PARA NO VOLVER A REGISTRARLA 
  //NO SE ESTA USANDO LA FUNCION
  public function get_datos_AREPARTOMASIVO110($radicado,$fechaactu){
	
		$modelo    = new archivoModel();
		
		$msgError  = "";
  
  		$error_transaccionX = 0;
		
  		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
			
		$serverNameX = $datosbd_1; //serverName\instanceName
		$connectionInfoX = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
		$connX = sqlsrv_connect( $serverNameX, $connectionInfoX);
		
		
		if( $connX === false ) {
			
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					
					$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
				}
			}
			
			echo "ENTRE 1 (110): ".$msgError;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $connX ) === false ) {
			 
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
				}
			}
			 
			echo "ENTRE 2 (110): ".$msgError;
			 
		}
		
		
		$fechaactu = $fechaactu." "."00:00:00.000";
		
		/*$sqlX = ("	
			
			
					SELECT * FROM [$datosbd_2].[dbo].[T110DRACTUPROC] 
 					WHERE [A110LLAVPROC] = '$radicado'
					AND   [A110DESCACTU] = 'A Despacho' 
  				    AND   [A110FECHREGI] = '$fechaactu'
                    AND   [A110FECHDESA] = '$fechaactu'; 
							
		");*/
		
		
		
		$sqlX = ("	
			
			
					SELECT * FROM [$datosbd_2].[dbo].[tabla1] 
 					WHERE [radicado] = '$radicado'
					 
  				   
							
		");
		
		
			
		$paramsX  = array();
		$optionsX =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmtX    = sqlsrv_query( $connX, $sqlX , $paramsX, $optionsX );
			
			
		if( $stmtX === false ) {
			
			$error_transaccionX = 1;
			
			if( ($errors = sqlsrv_errors() ) != null) {
				
				foreach( $errors as $error ) {
					
					$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];				}
			}
				
			echo "ENTRE 3 (110): ".$msgError;
				
		}
		else{
		
			$row_count = sqlsrv_num_rows( $stmtX );
			
			//NO EXISTE
			//if ($row_count === false){
			if ($row_count == 0){
   		
				sqlsrv_free_stmt( $stmtX);
				sqlsrv_close( $connX );
				
				return 0;
				
				
			}
			//EXISTE
 			else{
			
				sqlsrv_free_stmt( $stmtX);
				sqlsrv_close( $connX );
				
				return 1;
				
				
			}		
			
		}
		
		
  	}
  
  
  public function Registrar_Reparto_Masivo_NV(){


		$modelo    = new archivoModel();
		
		$idusuario = $_SESSION['idUsuario'];
	
		//$fechacarga = trim($_GET['fechae']);
		
		$dato_idR   = trim($_GET['dato_idR']);
		$dato_idR_2 = explode("******",$dato_idR);
		$long       = count($dato_idR_2) - 1;
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
		
		$accion  = "REGISTRO REPARTO MASIVO, CANTIDAD DE REGISTROS: ".$long;
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
	
		$error_transaccion   = 0; //variable para detectar error
				
				
		$msgError  = "";
				
		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
		
		$fecha_amd    = $modelo->get_fecha_actual_amd();	
		$hora_militar = $modelo->get_hora_actual_24horas();	
		
		$A110ANOTACTU = "PASA PARA LIQUIDACION DE COSTAS ".$fecha_amd." ".$hora_militar;
				
		
		try {  
					
					$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
					//EMPIEZA LA TRANSACCION
					$this->db->beginTransaction();
						
						
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
									 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
											
								
					//*********************************NUEVA CONEXON**************************************************
					
					$serverName = $datosbd_1; //serverName\instanceName
					$connectionInfo = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
					$conn = sqlsrv_connect( $serverName, $connectionInfo);
									
									
					if( $conn === false ) {
										
						$error_transaccion = 1;
						
						$ENTRE3 = 3;
									
						if( ($errors = sqlsrv_errors() ) != null) {
										
							foreach( $errors as $error ) {
											
								$msgError .= "ERROR EN REGISTRO CONEXION: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message']." - ".$ENTRE3;
							}
						}
										
						
										
					}
									
					//Iniciar la transacciï¿½n.
					if ( sqlsrv_begin_transaction( $conn ) === false ) {
										 
						$error_transaccion = 1;
						
						$ENTRE4 = 4;
									
						if( ($errors = sqlsrv_errors() ) != null) {
										
							foreach( $errors as $error ) {
											
								$msgError .= "ERROR EN REGISTRO TRANSACION: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message']." - ".$ENTRE4;
							}
						}
										 
																			 
					}
								
					
					$i=0;
								
					while($i < $long){
									
						
						$dato_idR_3 = explode("//////",$dato_idR_2[$i]);
						
						$idradicado  = $dato_idR_3[0];
						$radicado    = $dato_idR_3[1];
						$fechar      = $dato_idR_3[2];
						
						//------------------------------------------------------
						
						//SE SEPARA EL VALUE DEL JUZGADO
						//PARA OBTENER LOS DATOS QUE SE 
						//ACTUALIZARAN EN JUSTICIA
						$juzgador    = explode("------",$dato_idR_3[3]);
						
						$juzgador_0  = $juzgador[0];//A101CODIPONE
						$juzgador_1  = $juzgador[1];//A101NOMBPONE
						$juzgador_2  = $juzgador[2];//A101CODIENTI
						$juzgador_3  = $juzgador[3];//A101CODIESPE
						$juzgador_4  = $juzgador[4];//A101CODINUME
						
						//------------------------------------------------------
						
						$cuadernor   = $dato_idR_3[4];
						$traslador   = $dato_idR_3[5];
						
						$id_cp       = $dato_idR_3[6];
						
					
						if($juzgador_0 == "9251"){
						
							$idjuzgado = 1;
							
							//NOTA: SE REALIZA ESTE CAMBIO YA QUE Juliana Diaz Palacio REEMPLAZARA A 
							//Luis Hernando Rios Salazar, POR SUS DIAS DE CUIDADO
							
							//Luis Hernando Rios Salazar
							$id_user_asignada = 4;
							
							//Juliana Diaz Palacio
							//$id_user_asignada = 77;
							
							if($traslador == "NO"){
									
								$obs = "PASA A Luis Hernando Rios Salazar CON ".$cuadernor." CUADERNOS PARA COSTAS";
								
								//$obs = "PASA A Juliana Diaz Palacio CON ".$cuadernor." CUADERNOS PARA COSTAS";
							}
									
							if($traslador == "SI"){
								
								$obs = "PASA A Luis Hernando Rios Salazar CON ".$cuadernor." CUADERNOS PARA COSTAS Y TRASLADO 110";
								
								//$obs = "PASA A Juliana Diaz Palacio CON ".$cuadernor." CUADERNOS PARA COSTAS Y TRASLADO 110";
							}
								
							
							
							
							//CALCULAR LA FECHA INICIAL Y FINAL, DESDE EL MOMENTO
							//DE REPARTO Y ASIGNACION DE LA TAREA
							$diasti = $modelo->get_dias_juzgado($juzgador_0);
							
							$fechas = $modelo->traer_fechas_despacho($fecha_amd,$diasti);
							
							
							$vector_fechas = explode(" ",$fechas);
						
							$fi  = explode("/",$vector_fechas[0]);
							$fii = $fi[2]."-".$fi[1]."-".$fi[0];
							
						
							$ff  = explode("/",$vector_fechas[1]);
							$fff = $ff[2]."-".$ff[1]."-".$ff[0];
							
							//-------------------------------------------------------------------
						
						}
						
						
						if($juzgador_0 == "9261"){
						
							$idjuzgado = 2;
							
							$id_user_asignada = 59;
						
							if($traslador == "NO"){
								
								$obs = "PASA A Maria Carolina Henao Rodriguez CON ".$cuadernor." CUADERNOS PARA COSTAS";
							}
								
							if($traslador == "SI"){
							
								$obs = "PASA A Maria Carolina Henao Rodriguez CON ".$cuadernor." CUADERNOS PARA COSTAS Y TRASLADO 110";
							}
							
							//CALCULAR LA FECHA INICIAL Y FINAL, DESDE EL MOMENTO
							//DE REPARTO Y ASIGNACION DE LA TAREA
							$diasti = $modelo->get_dias_juzgado($juzgador_0);
							
							$fechas = $modelo->traer_fechas_despacho($fecha_amd,$diasti);
							
							
							$vector_fechas = explode(" ",$fechas);
						
							$fi  = explode("/",$vector_fechas[0]);
							$fii = $fi[2]."-".$fi[1]."-".$fi[0];
							
						
							$ff  = explode("/",$vector_fechas[1]);
							$fff = $ff[2]."-".$ff[1]."-".$ff[0];
							
							//-------------------------------------------------------------------
						
						}
									
									
						//$datos_REPARTO_ACTU110 = $modelo->get_datos_AREPARTOMASIVO110($radicado,$fechalog);
									
									
						//NO EXISTEACTUACION EN JUSTICIA XXI Y EN LA BASE DE DATOS LOCAL EJECUCION
						//ESTO PERMITE NO REPETIR EL PROCESO A DESPACHO DE UN RADICADO
						//if ($datos_REPARTO_ACTU110 == 0){
							
							
													
							//A REPARTO MASIVO
							$this->db->exec("UPDATE ubicacion_expediente SET 
							
							                 fecha_reparto     = '$fechalog',
											 idjuzgadodestino  = '$idjuzgado',
											 idjuzgado_reparto = '$idjuzgado',
											 iddespacho        = '$juzgador_0',
											 idclase_proceso   = '$id_cp',
											 idusuario         = '$idusuario',
											 fechasalida       = '$fechalog',
											 fechadevolucion   = NULL
											 
											 WHERE id = '$idradicado'");
											 
							
							 
								
							$fechacarga_detalle = $fechalog." "."00:00:00";
														 
							$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
											 VALUES('$idradicado','$fechacarga_detalle','$obs','$idusuario')");
											 
											 
							 
											 
							$obs_2 = "A DESPACHO, ".$obs;
							$this->db->exec("
							
											 INSERT INTO detalle_correspondencia (
							                 idcorrespondencia,
											 fecha,
											 observacion,
							                 fecha_obs_i,
											 fecha_obs_f,
											 estadoobs,
											 id_user_asignada,
											 a_despacho,
											 idusuario,
											 idestadorevisojuz,
											 idrevisojuz2,
											 fecharevisado,
											 horarevisado,
											 desde_reparto,
											 revisasecretaria,
											 fecharevisecre,
											 horarevisecre) 
											 VALUES(
											 '$idradicado',
											 '$fechacarga_detalle',
											 '$obs_2',
											 '$fii',
											 '$fff',
											  2,
											  '$id_user_asignada',
											  1,
											  '$idusuario',    
											  1,
											  '$idusuario',
											  '$fechalog',
											  '$hora_militar',
											  1,
											  1,
											  '$fechalog',
											  '$hora_militar')
											  
											  
											");				 
													 
													 
		 				
				
							$sininstancia = $radicado;
							$sin          = substr($sininstancia, 0, 21);
										
							//A REPARTO DESDE LA OFICINA
							$sql = ("	
						
							
			
										UPDATE t103dainfoproc SET 
										
										a103descacts = 'Redistribuciï¿½n a Juzgados de Ejecuciï¿½n de Sentencias', 
										a103codiacts = '30023582', 
										a103codipads = '30011102',
										a103fechdess = GETDATE(), 
										a103anotacts = 'Actuaciï¿½n Registrada por la Oficina de Ejecuciï¿½n de Sentencias',
										A103ENTIRADI = '$juzgador_2', 
										A103ESPERADI = '$juzgador_3', 
										A103NUENRADI = '$juzgador_4', 
										A103CODIPONE = '$juzgador_0', 
										A103NOMBPONE = '$juzgador_1'
										
										WHERE a103llavproc='$radicado';
															
								
							");	
												
												
				
							$params  = array();
							$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
							$stmt    = sqlsrv_query( $conn, $sql , $params, $options );
														
														
							if( $stmt === false ) {
														
								$error_transaccion = 1;
													
								$ENTRE5 = 5;
														
								if( ($errors = sqlsrv_errors() ) != null) {
															
									foreach( $errors as $error ) {
																
										$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message']." - ".$ENTRE5;
									}
								}
													
							}	
											
							sqlsrv_free_stmt( $stmt);
							
							
							$sql_2 = ("	
						
						
										DECLARE @cad integer
						
																					
										SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC WHERE a110Llavproc='$radicado' 
										
										INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
										A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
										A110RENUTERM) values('$radicado',@cad,'$sin','00','30023582','30011102','Redistribuciï¿½n a Juzgados de Ejecuciï¿½n de Sentencias','N','NO','N',0,NULL,NULL,GETDATE(),NULL,NULL,NULL,NULL,NULL,
										'$A110ANOTACTU',NULL,NULL,'S','D',GETDATE(),'NO','NO')	
																	
																	
																
																	
									");
												
												
				
							$params_2  = array();
							$options_2 =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
							$stmt_2    = sqlsrv_query( $conn, $sql_2 , $params_2, $options_2 );
														
														
							if( $stmt_2 === false ) {
														
								$error_transaccion = 1;
													
								$ENTRE6 = 6;
														
								if( ($errors = sqlsrv_errors() ) != null) {
															
									foreach( $errors as $error ) {
																
										$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message']." - ".$ENTRE6;
									}
								}
													
							}	
											
							sqlsrv_free_stmt( $stmt_2);
							
							
							//A DESPACHO DESDE LA OFICINA
							
							
							$sql_3 = ("	
						
						
										UPDATE t103dainfoproc SET a103descacts='A Despacho', a103codiacts='30023334', a103codipads='30023333', 
										a103fechdess = GETDATE(), 
										a103anotacts = 'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal'
										WHERE a103llavproc='$radicado';
																
																	
									");
												
												
				
							$params_3  = array();
							$options_3 =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
							$stmt_3    = sqlsrv_query( $conn, $sql_3 , $params_3, $options_3 );
														
														
							if( $stmt_3 === false ) {
														
								$error_transaccion = 1;
													
								$ENTRE7 = 7;
														
								if( ($errors = sqlsrv_errors() ) != null) {
															
									foreach( $errors as $error ) {
																
										$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message']." - ".$ENTRE7;
									}
								}
													
							}	
											
							sqlsrv_free_stmt( $stmt_3);
							
							
							
							$sql_4 = ("   
							
							
											DECLARE @cad_2 integer
													 
													
											SELECT @cad_2 = MAX(A110CONSACTU)+1 FROM T110DRACTUPROC WHERE a110Llavproc='$radicado' 
													
											INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
											A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
											A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
											A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
											A110RENUTERM) 
											VALUES('$radicado',@cad_2,'$sin','00','30023334','30023333','A Despacho','N','NO','N',0,NULL,NULL,
											GETDATE(),NULL,NULL,NULL,NULL,NULL,
											'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal',NULL,NULL,'S','D',
											GETDATE(),'NO','NO') ");
												
												
				
							$params_4  = array();
							$options_4 =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
							$stmt_4    = sqlsrv_query( $conn, $sql_4 , $params_4, $options_4 );
														
														
							if( $stmt_4 === false ) {
														
								$error_transaccion = 1;
													
								$ENTRE8 = 8;
														
								if( ($errors = sqlsrv_errors() ) != null) {
															
									foreach( $errors as $error ) {
																
										$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message']." - ".$ENTRE8;
									}
								}
													
							}	
											
							sqlsrv_free_stmt( $stmt_4 );
				
									
									
						//}//FIN IF if ($datos_ACTU110 == 0)
									
			
						$i= $i + 1;
						
						
						
			
						
																 
					}//FIN WHILE while($i < $long){		
								
								
					if($error_transaccion) {
								
						//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
						$this->db->rollBack();
					
						//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
						sqlsrv_rollback( $conn );
									
						// Cerrar la conexiï¿½n.
						sqlsrv_close( $conn );
									
									
						echo '<script languaje="JavaScript"> 
				
							
									var ERROR = "'.$msgError.'";
						
									alert("ERROR 1: "+ERROR);
									
									location.href="index.php?controller=archivo&action=listarUbicacionExpediente";
											
										
								</script>';
								
					}
					else{
								
						//SE TERMINA LA TRANSACCION  
						$this->db->commit();
									
						//SE TERMINA LA TRANSACCION EN JUSTICIA XXI  
						sqlsrv_commit( $conn );	
									
						echo '<script languaje="JavaScript"> 
							
			
									alert("PROCESO SE REALIZA CORRECTAMENTE");
								
									location.href="index.php?controller=archivo&action=listarUbicacionExpediente";
										
								</script>';
					}
						
						
			}
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
					
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
					
				// Cerrar la conexiï¿½n.
				sqlsrv_close( $conn );
					
				//echo "Fallo: " . $e->getMessage();
					
					
				echo '<script languaje="JavaScript"> 
				
							
						var ERROR = "'.$e->getMessage().'";
		
						alert("ERROR 2: "+ERROR);
					
						location.href="index.php?controller=archivo&action=listarUbicacionExpediente";
							
					</script>';
			
					
			}		
						
						
  }//FIN FUNCION
	
  public function Registrar_Reparto_Masivo_NV_ANTERIOR(){


		$modelo    = new archivoModel();
		
		$idusuario = $_SESSION['idUsuario'];
	
		//$fechacarga = trim($_GET['fechae']);
		
		$dato_idR   = trim($_GET['dato_idR']);
		$dato_idR_2 = explode("******",$dato_idR);
		$long       = count($dato_idR_2) - 1;
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
		
		$accion  = "REGISTRO REPARTO MASIVO, CANTIDAD DE REGISTROS: ".$long;
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
	
		$error_transaccion   = 0; //variable para detectar error
				
				
		$msgError  = "";
				
		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
		
		$fecha_amd    = $modelo->get_fecha_actual_amd();	
		$hora_militar = $modelo->get_hora_actual_24horas();	
		
		$A110ANOTACTU = "PASA PARA LIQUIDACION DE COSTAS ".$fecha_amd." ".$hora_militar;
				
		
		try {  
					
					$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
					//EMPIEZA LA TRANSACCION
					$this->db->beginTransaction();
						
						
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
									 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
											
								
					//*********************************NUEVA CONEXON**************************************************
					
					$serverName = $datosbd_1; //serverName\instanceName
					$connectionInfo = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
					$conn = sqlsrv_connect( $serverName, $connectionInfo);
									
									
					if( $conn === false ) {
										
						$error_transaccion = 1;
									
						if( ($errors = sqlsrv_errors() ) != null) {
										
							foreach( $errors as $error ) {
											
								$msgError .= "ERROR EN REGISTRO CONEXION: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
							}
						}
										
						
										
					}
									
					//Iniciar la transacciï¿½n.
					if ( sqlsrv_begin_transaction( $conn ) === false ) {
										 
						$error_transaccion = 1;
									
						if( ($errors = sqlsrv_errors() ) != null) {
										
							foreach( $errors as $error ) {
											
								$msgError .= "ERROR EN REGISTRO TRANSACION: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
							}
						}
										 
																			 
					}
								
					
					$i=0;
								
					while($i < $long){
									
						
						$dato_idR_3 = explode("//////",$dato_idR_2[$i]);
						
						$idradicado  = $dato_idR_3[0];
						$radicado    = $dato_idR_3[1];
						$fechar      = $dato_idR_3[2];
						
						//------------------------------------------------------
						
						//SE SEPARA EL VALUE DEL JUZGADO
						//PARA OBTENER LOS DATOS QUE SE 
						//ACTUALIZARAN EN JUSTICIA
						$juzgador    = explode("------",$dato_idR_3[3]);
						
						$juzgador_0  = $juzgador[0];//A101CODIPONE
						$juzgador_1  = $juzgador[1];//A101NOMBPONE
						$juzgador_2  = $juzgador[2];//A101CODIENTI
						$juzgador_3  = $juzgador[3];//A101CODIESPE
						$juzgador_4  = $juzgador[4];//A101CODINUME
						
						//------------------------------------------------------
						
						$cuadernor   = $dato_idR_3[4];
						$traslador   = $dato_idR_3[5];
						
						$id_cp       = $dato_idR_3[6];
						
					
						if($juzgador_0 == "9251"){
						
							$idjuzgado = 1;
						
							if($traslador == "NO"){
								
								$obs = "PASA A DON HERNANDO CON ".$cuadernor." CUADERNOS PARA COSTAS";
							}
								
							if($traslador == "SI"){
							
								$obs = "PASA A DON HERNANDO CON ".$cuadernor." CUADERNOS PARA COSTAS Y TRASLADO 110";
							}
						
						}
						
						
						if($juzgador_0 == "9261"){
						
							$idjuzgado = 2;
						
							if($traslador == "NO"){
								
								$obs = "PASA A CAROLINA CON ".$cuadernor." CUADERNOS PARA COSTAS";
							}
								
							if($traslador == "SI"){
							
								$obs = "PASA A CAROLINA CON ".$cuadernor." CUADERNOS PARA COSTAS Y TRASLADO 110";
							}
						
						}
									
									
						//$datos_REPARTO_ACTU110 = $modelo->get_datos_AREPARTOMASIVO110($radicado,$fechalog);
									
									
						//NO EXISTEACTUACION EN JUSTICIA XXI Y EN LA BASE DE DATOS LOCAL EJECUCION
						//ESTO PERMITE NO REPETIR EL PROCESO A DESPACHO DE UN RADICADO
						//if ($datos_REPARTO_ACTU110 == 0){
							
							
													
							//A REPARTO MASIVO
							$this->db->exec("UPDATE ubicacion_expediente SET 
							
							                 fecha_reparto     = '$fechalog',
											 idjuzgadodestino  = '$idjuzgado',
											 idjuzgado_reparto = '$idjuzgado',
											 iddespacho        = '$juzgador_0',
											 idclase_proceso   = '$id_cp',
											 idusuario         = '$idusuario'
											 
											 WHERE id = '$idradicado'");
											 
							
							 
								
							$fechacarga_detalle = $fechalog." "."00:00:00";
														 
							$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
											 VALUES('$idradicado','$fechacarga_detalle','$obs','$idusuario')");
													 
													 
		 
				
							$sininstancia = $radicado;
							$sin          = substr($sininstancia, 0, 21);
										
							//A REPARTO DESDE LA OFICINA
				
							$sql = ("	DECLARE @cad integer 
				
										UPDATE t103dainfoproc SET a103descacts='Redistribuciï¿½n a Juzgados de Ejecuciï¿½n de Sentencias', a103codiacts='30023582', a103codipads='30011102',
										a103fechdess = GETDATE(), a103anotacts = 'Actuaciï¿½n Registrada por la Oficina de Ejecuciï¿½n de Sentencias',
										A103ENTIRADI = '$juzgador_2', A103ESPERADI = '$juzgador_3', A103NUENRADI = '$juzgador_4', A103CODIPONE = '$juzgador_0', A103NOMBPONE = '$juzgador_1'
										WHERE a103llavproc='$radicado';
										
										SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC WHERE a110Llavproc='$radicado' 
										
										INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
										A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
										A110RENUTERM) values('$radicado',@cad,'$sin','00','30023582','30011102','Redistribuciï¿½n a Juzgados de Ejecuciï¿½n de Sentencias','N','NO','N',0,NULL,NULL,GETDATE(),NULL,NULL,NULL,NULL,NULL,
										'$A110ANOTACTU',NULL,NULL,'S','D',GETDATE(),'NO','NO')
										
									");	
							
							
							/*$sql = ("   
													 
										INSERT INTO info1(radicado,des) 
										VALUES('$radicado','$obs') 
										
										
										INSERT INTO tabla1(radicado,fechar,fechai,fechaf,observacion) 
										VALUES('$radicado',
										        convert(datetime, '$fechalog', 121),
											    convert(datetime, '$fechalog', 121),
											    convert(datetime, '$fechalog', 121),
											    '$obs'
										)
										 
									
									");	*/		
										
										
		
							$params  = array();
							$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
							$stmt = sqlsrv_query( $conn, $sql , $params, $options );
											
											
							if( $stmt === false ) {
											
								$error_transaccion = 1;
											
								if( ($errors = sqlsrv_errors() ) != null) {
												
									foreach( $errors as $error ) {
													
										$msgError .= "ERROR EN REGISTRO EJECUCION: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
									}
								}
												
										
							}
									
									
						//}//FIN IF if ($datos_ACTU110 == 0)
									
			
						$i= $i + 1;
																 
					}//FIN WHILE while($i < $long){		
								
								
					if($error_transaccion) {
								
						//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
						$this->db->rollBack();
					
						//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
						sqlsrv_rollback( $conn );
									
						// Cerrar la conexiï¿½n.
						sqlsrv_close( $conn );
									
									
						echo '<script languaje="JavaScript"> 
				
							
									var ERROR = "'.$msgError.'";
						
									alert("ERROR 1: "+ERROR);
									
									location.href="index.php?controller=archivo&action=listarUbicacionExpediente";
											
										
								</script>';
								
					}
					else{
								
						//SE TERMINA LA TRANSACCION  
						$this->db->commit();
									
						//SE TERMINA LA TRANSACCION EN JUSTICIA XXI  
						sqlsrv_commit( $conn );	
									
						echo '<script languaje="JavaScript"> 
							
			
									alert("PROCESO SE REALIZA CORRECTAMENTE");
								
									location.href="index.php?controller=archivo&action=listarUbicacionExpediente";
										
								</script>';
					}
						
						
			}
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
					
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
					
				// Cerrar la conexiï¿½n.
				sqlsrv_close( $conn );
					
				//echo "Fallo: " . $e->getMessage();
					
					
				echo '<script languaje="JavaScript"> 
				
							
						var ERROR = "'.$e->getMessage().'";
		
						alert("ERROR 2: "+ERROR);
					
						location.href="index.php?controller=archivo&action=listarUbicacionExpediente";
							
					</script>';
			
					
			}		
						
						
	}//FIN FUNCION
	
	
	/*----------------------- Listar Despachos Justicia XXI-------------------------------------*/

   
   public function getListarDespachosJusticiaXXI(){
	
		$modelo     = new archivoModel();
		
		$cadena_lista = "";
  
  		$error_transaccionX = 0;
		
  		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
			
		$serverNameX = $datosbd_1; //serverName\instanceName
		$connectionInfoX = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4 );
		$connX = sqlsrv_connect( $serverNameX, $connectionInfoX);
		
		
		if( $connX === false ) {
			
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
			
			echo "ENTRE 1 (T052BAPROCGENE)";
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $connX ) === false ) {
			 
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
			 
			echo "ENTRE 2 (T052BAPROCGENE)";
			 
		}
		

		$sqlX = ("	
			
			
					
					
					 SELECT A101CODIPONE,  A101NOMBPONE,  A101CODIENTI , A101CODIESPE,  A101CODINUME
					 FROM  [$datosbd_2].[dbo].[T101DAINFOPONE]
					 WHERE (A101SECRDESP = 'd') AND (A101FLAGHABI = 'SI') AND (A101CODIENTI='43' AND A101CODIESPE='03')  
					 ORDER BY A101CODIENTI, A101CODIESPE, A101CODINUME, A101NOMBPONE;
							
		");
			
		$paramsX  = array();
		$optionsX =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmtX    = sqlsrv_query( $connX, $sqlX , $paramsX, $optionsX );
			
			
		if( $stmtX === false ) {
			
			$error_transaccionX = 1;
			
			if( ($errors = sqlsrv_errors() ) != null) {
				
				foreach( $errors as $error ) {
					
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
				
			echo "ENTRE 3 (T052BAPROCGENE)";
				
		}
		else{
				
			//$row_count = sqlsrv_num_rows( $stmtX );
			
			

			
				 while( $row = sqlsrv_fetch_array( $stmtX) ){
				 
						$A052CODIPROC = $row['A052CODIPROC'];
						$A052DESCPROC = utf8_decode($row['A052DESCPROC']);
						
						
						$A101CODIPONE = $row['A101CODIPONE'];	
						$A101NOMBPONE = $row['A101NOMBPONE'];
						$A101CODIENTI = $row['A101CODIENTI'];
						$A101CODIESPE = $row['A101CODIESPE'];
						$A101CODINUME = $row['A101CODINUME'];
						 
						$cadena_lista .= $A101CODIPONE."//////".$A101NOMBPONE."//////".$A101CODIENTI."//////".$A101CODIESPE."//////".$A101CODINUME."******";
				 
				 }//FIN WHILE	
					
		
	
		}	
		
		
		sqlsrv_free_stmt( $stmtX);
		sqlsrv_close( $connX );
		
		return $cadena_lista;
  	}
 	
	public function getClaseProcesoJusticiaXXI($dato_radicado){
	
		$modelo     = new archivoModel();
		
		$cadena_lista = "";
  
  		$error_transaccionX = 0;
		
  		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
			
		$serverNameX = $datosbd_1; //serverName\instanceName
		$connectionInfoX = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4 );
		$connX = sqlsrv_connect( $serverNameX, $connectionInfoX);
		
		
		if( $connX === false ) {
			
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
			
			echo "ENTRE 1";
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $connX ) === false ) {
			 
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
			 
			echo "ENTRE 2";
			 
		}
		

		$sqlX = ("	
			
			
		
					 SELECT t103.A103CODICLAS,t053.A053DESCCLAS 
					 FROM ([$datosbd_2].[dbo].[T103DAINFOPROC] t103 INNER JOIN [$datosbd_2].[dbo].[T053BACLASGENE] t053 ON t103.A103CODICLAS = t053.A053CODICLAS)
					 WHERE t103.A103LLAVPROC = '$dato_radicado'
							
		"); 
			
		$paramsX  = array();
		$optionsX =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmtX    = sqlsrv_query( $connX, $sqlX , $paramsX, $optionsX );
			
			
		if( $stmtX === false ) {
			
			$error_transaccionX = 1;
			
			if( ($errors = sqlsrv_errors() ) != null) {
				
				foreach( $errors as $error ) {
					
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
				
			echo "ENTRE 3";
				
		}
		else{
				
			//$row_count = sqlsrv_num_rows( $stmtX );
			
			

			
				 while( $row = sqlsrv_fetch_array( $stmtX) ){
				 
						$A103CODICLAS = $row['A103CODICLAS'];
						$A053DESCCLAS = utf8_decode($row['A053DESCCLAS']);
						
			 
						$cadena_lista .= $A103CODICLAS."//////".$A053DESCCLAS;
				 
				 }//FIN WHILE	
					
		
	
		}	
		
		
		sqlsrv_free_stmt( $stmtX);
		sqlsrv_close( $connX );
		
		return $cadena_lista;
  	}
	
 	public function get_Clase_Proceso_Siepro($idcpjxxi){
	
		
		$listar     = $this->db->prepare("SELECT * FROM pa_clase_proceso WHERE idsigloxxi = '$idcpjxxi'");
	
  		$listar->execute();

  		return $listar;
	
  }
	
  //-------------------------------------FIN PARA REPARTO MASIVO----------------------------------------------------------------------
	
	
  
  
  
  //PARA ALERTA VENCE TERMINOS
  public function get_vence_terminos($fecha_terminos){
	
		
		$listar     = $this->db->prepare("SELECT ubi.id,ubi.radicado,ubi.fecha_terminos,ubi.termino_revisado,ubi.observacion_termino
										  FROM ubicacion_expediente ubi 
									      WHERE ubi.fecha_terminos = '$fecha_terminos'");
	
  		$listar->execute();

  		return $listar;
	
  }
  
  public function get_en_firme_liquidacion($fecha_terminos){
	
		
		/*$listar     = $this->db->prepare("SELECT ubi.id,ubi.radicado,dc.fecha,dc.observacion
									     FROM (detalle_correspondencia dc INNER JOIN ubicacion_expediente ubi ON dc.idcorrespondencia = ubi.id)
                                         WHERE ubi.fecha_fin_liquidacion = '$fecha_terminos' AND observacion LIKE '%Traslado Art. 110 Fec Fijacion:%'
                                         ORDER BY dc.fecha DESC");*/
										 
		$fecha_terminos_b = explode("-",$fecha_terminos);
		
		if($fecha_terminos_b[1] >= 1 && $fecha_terminos_b[1] <= 9){
		
			$partefecha = substr($fecha_terminos_b[1],-1);
		
		}
		else{
		
			$partefecha = $fecha_terminos_b[1];
		}
		
		if($fecha_terminos_b[2] >= 1 && $fecha_terminos_b[2] <= 9){
		
			$partefecha_2 = substr($fecha_terminos_b[2],-1);
		
		}
		else{
		
			$partefecha_2 = $fecha_terminos_b[2];
		}
		
		$fecha_terminos_c = $fecha_terminos_b[0]."-".$partefecha."-".$partefecha_2;
										 
		$listar     = $this->db->prepare("SELECT ubi.id,ubi.radicado,dc.fecha,dc.observacion
									      FROM (detalle_correspondencia dc INNER JOIN ubicacion_expediente ubi ON dc.idcorrespondencia = ubi.id)
                                          WHERE ubi.fecha_fin_liquidacion = '$fecha_terminos' 
										  AND (observacion LIKE '%Traslado Art. 110 Fec Fijacion:%' AND observacion LIKE '%Fec Final: $fecha_terminos_c%')
                                          ORDER BY dc.fecha DESC");
										 
		
	
		//echo $fecha_terminos_c;
		
  		$listar->execute();

  		return $listar;
	
  }
  
  public function registrar_titulos_encustodia(){
	
		
		//SE OBTIENEN LOS DATOS
		$idusuario   = $_SESSION['idUsuario'];
		
		$idradicado  = trim($_POST['idradicado']);
		$radicado    = trim($_POST['radicado']);
		$datospartes = trim($_POST['datospartes']);
		

		//OBTENEMOS DEL RADICADO 170014003 006 19931018000 
		//CLASE JUZGADO 4003, DEPARTAMENTO 17, MUNICIPIO 17001
		/*$idclasejuzgado = substr($radicadox, 5, 4);
		$iddepartamento = substr($radicadox, 1, 2);
		$idmunicipio    = substr($radicadox, 1, 5);*/
		

		//DATOS PARA EL REGISTRO DEL LOG
		
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		
		$tiporegistro = "Titulo(s) en Custodia";
		
		if( empty($iddocumento) ){
			$accion  = "Registra un Nuevo ".$tiporegistro." En el Sistema (SIEPRO), PROCESO: ".$radicado;
		}
		else{
			//$accion  = "Modifica una ".$tiporegistro." En el Sistema (SIGDOC) REGISTRO DE DOCUMENTOS ENTRANTES, ID PROCESO: ".$iddocumento;
		}
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		
		try {  
		
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
			
			//EMPIEZA LA TRANSACCION
		   	$this->db->beginTransaction();
			
		   		 
				$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')"); 
				 
				//******75088165//////Jorge Andres Valencia//////Cr 21 # 46 A 82//////8855934//////1-DEMANDANTE//////17-Caldas//////17001-MANIZALES******
				//75095585//////Andres Grajales//////Cr 213 # 748 B 434//////8875632//////1-DEMANDANTE//////13-Bolivar//////13001-CARTAGENA
		
				//1 EXPLODE
				$datospartes_1 = explode("******",$datospartes); 
				$longitud_1    = count($datospartes_1);
				$i             = 1;
				
				while($i < $longitud_1){
					
					//2 EXPLODE
					$datospartes_2 = explode("//////",$datospartes_1[$i]);
					
					
					$numero  = $datospartes_2[0];
					$valor   = $datospartes_2[1];
					$adju    = $datospartes_2[2];
					
				
					$this->db->exec("INSERT INTO siepro_titulos_encustodia (idradicado,fecharegistro,fechamodificacion,numero,valor,adjudicatario,encustodia,idusuarioregistra,idusuarioedita)
						             VALUES ('$idradicado','$fechalog','0000-00-00','$numero','$valor','$adju',1,'$idusuario',0)");
					
					
					
					
					$i = $i + 1;
				
				}
								 
								 
			
			//SE TERMINA LA TRANSACCION  
		  	$this->db->commit();
			
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=9"</script>';*/
			
			echo '<script languaje="JavaScript"> 
							
					alert("PROCESO SE REALIZA CORRECTAMENTE");
								
					location.href="index.php?controller=archivo&action=Titulos_Encustodia";
										
				</script>';
		  
		} 
		catch (Exception $e) {
		
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();
		  	//echo "Fallo: " . $e->getMessage();
			$error = $e->getMessage();
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=9b"</script>';*/
			
			echo '<script languaje="JavaScript"> 
					
					var error = "'.$error.'"
					
					alert("ERROR AL REALIZAR EL PROCESO: "+error);
								
					location.href="index.php?controller=archivo&action=Titulos_Encustodia";
										
				</script>';
		}
		
		
  	}
	
	public function get_titulos_materializados($identrada){
	
	
		$idusuario  = $_SESSION['idUsuario'];
		
		if($identrada == 1){
		
			
			    
			/*$listar     = $this->db->prepare("SELECT ste.id,ubi.radicado,ste.fecharegistro,ste.fechamodificacion,ste.numero,ste.valor,ste.adjudicatario,ste.encustodia
                                              FROM (siepro_titulos_encustodia ste LEFT JOIN ubicacion_expediente ubi ON ste.idradicado = ubi.id)
											  WHERE ste.idusuarioregistra = '$idusuario'
											  ORDER BY ste.id DESC");*/
											  
			$listar     = $this->db->prepare("SELECT ste.id,ubi.radicado,ste.fecharegistro,ste.fechamodificacion,ste.numero,ste.valor,ste.adjudicatario,ste.encustodia
                                              FROM (siepro_titulos_encustodia ste LEFT JOIN ubicacion_expediente ubi ON ste.idradicado = ubi.id)
											  ORDER BY ste.id DESC
											  LIMIT 10");
											 
			
		}
		if($identrada == 2){
			
			$filtrox;
			
			$filtrof;
			$filtro1;
			$filtro2;
			$filtro3;
			
	
			$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			$datox1    = trim($_GET['datox1']);
			$datox2    = trim($_GET['datox2']);
			$datox3    = trim($_GET['datox3']);
			
			
	
			if ( !empty($fechad) && !empty($fechah) ) {
			
				
				$filtrof = " AND (ste.fecharegistro >= '$fechad' AND ste.fecharegistro <= '$fechah') ";
				
			
			}
			if ( !empty($datox1) ) {
			
				$filtro1 = " AND ste.id = '$datox1' ";
			
			}
			if ( !empty($datox2) ) {
			
				$filtro2 = " AND ste.encustodia = '$datox2' ";
			
			}
			if ( !empty($datox3) ) {
			
				
				$filtro3 = " AND ubi.radicado LIKE '%$datox3%' ";
			
			}
			
	
			$filtrox = $filtro1." ".$filtro2." ".$filtro3." ".$filtrof;
			
			//echo $filtrox;
			  
			 
			/*$listar    = $this->db->prepare("SELECT ste.id,ubi.radicado,ste.fecharegistro,ste.fechamodificacion,ste.numero,ste.valor,ste.adjudicatario,ste.encustodia
                                             FROM (siepro_titulos_encustodia ste LEFT JOIN ubicacion_expediente ubi ON ste.idradicado = ubi.id)
											 WHERE ste.id >= '1'" .$filtrox. " AND ste.idusuarioregistra = '$idusuario'
											 ORDER BY ste.id DESC");*/
											 
			$listar    = $this->db->prepare("SELECT ste.id,ubi.radicado,ste.fecharegistro,ste.fechamodificacion,ste.numero,ste.valor,ste.adjudicatario,ste.encustodia
                                             FROM (siepro_titulos_encustodia ste LEFT JOIN ubicacion_expediente ubi ON ste.idradicado = ubi.id)
											 WHERE ste.id >= '1'" .$filtrox. " 
											 ORDER BY ste.id DESC");
											 
											 
			
			
											 
			//echo $sql;
		}

  		$listar->execute();

  		return $listar;
	
  	}

	public function poner_en_custodia(){
	
		
		//SE OBTIENEN LOS DATOS
		$idusuario = $_SESSION['idUsuario'];
		
		$id        = trim($_GET['id']);
		$opcion    = trim($_GET['opcion']);
	
		//DATOS PARA EL REGISTRO DEL LOG
		
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		
		//$tiporegistro = "Titulo A Custodia";
		
		if($opcion == 1){
			
			$tiporegistro = "Titulo A Custodia";
		}
		else{
			
			$tiporegistro = "Titulo Sin Custodia";
		}
		
		if( empty($iddocumento) ){
		
			if($opcion == 1){
			
				$accion  = "Modifica ".$tiporegistro." En el Sistema (SIEPRO), ID: ".$id;
			}
			else{
			
				$accion  = "Modifica ".$tiporegistro." En el Sistema (SIEPRO), ID: ".$id;
			}
		}
		else{
			//$accion  = "Modifica una ".$tiporegistro." En el Sistema (SIGDOC) REGISTRO DE DOCUMENTOS ENTRANTES, ID PROCESO: ".$iddocumento;
		}
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		
		try {  
		
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
			
			//EMPIEZA LA TRANSACCION
		   	$this->db->beginTransaction();
			
		   		 
				$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')"); 
				 
				if($opcion == 1){
					
					$this->db->exec("UPDATE siepro_titulos_encustodia SET fechamodificacion = '$fechalog',encustodia = 1,idusuarioedita = '$idusuario'
						             WHERE id = '$id'");
									 
				}
				else{
					
					$this->db->exec("UPDATE siepro_titulos_encustodia SET fechamodificacion = '$fechalog',encustodia = 2,idusuarioedita = '$idusuario'
						             WHERE id = '$id'");
				}
								 
								 
			
			//SE TERMINA LA TRANSACCION  
		  	$this->db->commit();
			
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=10"</script>';*/
			
			echo '<script languaje="JavaScript"> 
							
					alert("PROCESO SE REALIZA CORRECTAMENTE");
								
					location.href="index.php?controller=archivo&action=Listar_Titulos_Materializados";
										
				</script>';

		  
		} 
		catch (Exception $e) {
		
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();
		  	//echo "Fallo: " . $e->getMessage();
			$error = $e->getMessage();
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=10b"</script>';*/
			
			echo '<script languaje="JavaScript"> 
					
					var error = "'.$error.'"
				
					alert("ERROR AL REALIZAR EL PROCESO: "+error);
								
					location.href="index.php?controller=archivo&action=Listar_Titulos_Materializados";
										
				</script>';
		}
		
		
  	}
	
	public function registrar_titulos_otrosJuzgados(){
	
		
		//SE OBTIENEN LOS DATOS
		$idusuario   = $_SESSION['idUsuario'];
		
		//$idradicado  = trim($_POST['idradicado']);
		
		//SE RECIBE EL Radicado Y Ordenado con Oficio Numero DE ESTA FORMA
		//YA QUE LA Oficio Numero DE ESTA FORMA DE ESTA FORMA $ordenadooficio = trim($_POST['ordenadooficio']);
		//ERA VACIA LA VARIABLE
		//$datos_encabezado = explode("//////",trim($_POST['datos_encabezado']));
		//$radicado       = trim($datos_encabezado[0]);
		//$ordenadooficio  = trim($datos_encabezado[1]);
		
		$radicado       = trim($_POST['radicado']);
		$datospartes    = trim($_POST['datospartes']);
		$ordenadooficio = trim($_POST['ordenadooficio']);
		
		
		
		//OBTENEMOS DEL RADICADO 170014003 006 19931018000 
		//CLASE JUZGADO 4003, DEPARTAMENTO 17, MUNICIPIO 17001
		/*$idclasejuzgado = substr($radicadox, 5, 4);
		$iddepartamento = substr($radicadox, 1, 2);
		$idmunicipio    = substr($radicadox, 1, 5);*/
		

		//DATOS PARA EL REGISTRO DEL LOG
		
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		
		$tiporegistro = "Titulo(s) de Otro Juzgado";
		
		if( empty($iddocumento) ){
			$accion  = "Registra un Nuevo ".$tiporegistro." En el Sistema (SIEPRO), PROCESO: ".$radicado;
		}
		else{
			//$accion  = "Modifica una ".$tiporegistro." En el Sistema (SIGDOC) REGISTRO DE DOCUMENTOS ENTRANTES, ID PROCESO: ".$iddocumento;
		}
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		
		//***********************************PARA EL ARCHIVO***************************************
		
		$sin_archivo = trim($_POST['sin_archivo']);
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "TITULOS_OTROSJUZGADOS";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		$nom = trim($_SESSION['idUsuario']);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo    = 0;
		$cadena_archivos = "";			
	
		//***********************************FIN PARA EL ARCHIVO***************************************
		
	
		try {  
		
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
			
			//EMPIEZA LA TRANSACCION
		   	$this->db->beginTransaction();
			
		   		 
				$this->db->exec("INSERT INTO log (fecha,accion,detalle,idusuario,idtipolog) VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')"); 
				 
				
				//IDENTIFICAMOS QUE UN PROCESO YA EXISTA EN LA TABLA siepro_titulos_otrosjuzgados
				//PARA NO VOLVER A REGISTRAR.
				$listar = $this->db->prepare("SELECT * FROM siepro_titulos_otrosjuzgados WHERE radicado = '$radicado'");
		
				$listar->execute();
						
				$resultado = $listar->rowCount();
					
				if(!$resultado){//NO EXISTE
				 
					$this->db->exec("INSERT INTO siepro_titulos_otrosjuzgados (radicado,fecharegistro,idusuarioregistra)
						             VALUES ('$radicado','$fechalog','$idusuario')"); 
									 
					//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_titulos_otrosjuzgados
				    $idradicado  = $this->db->lastInsertId();
				}
				else{//EXISTE
				
					$field = $listar->fetch();
						
					$idradicado = trim($field[id]);
				
				}
				  
				
				 
				//******75088165//////Jorge Andres Valencia//////Cr 21 # 46 A 82//////8855934//////1-DEMANDANTE//////17-Caldas//////17001-MANIZALES******
				//75095585//////Andres Grajales//////Cr 213 # 748 B 434//////8875632//////1-DEMANDANTE//////13-Bolivar//////13001-CARTAGENA
		
				//1 EXPLODE
				$datospartes_1 = explode("******",$datospartes); 
				$longitud_1    = count($datospartes_1);
				$i             = 1;
				
				while($i < $longitud_1){
					
					//2 EXPLODE
					$datospartes_2 = explode("//////",$datospartes_1[$i]);
					
					
					$numero    = $datospartes_2[0];
					$valor     = $datospartes_2[1];
					$adju      = $datospartes_2[2];
					
					$fechapago = $datospartes_2[3];
					
					if($fechapago == ''){
						$fechapago = 'NO ASIGNADA';
					}
					
					$cantidad  = $datospartes_2[4];
					
					//NO SE SELECCIONO ARCHIVO 
					if($sin_archivo == 0){
					
						$this->db->exec("INSERT INTO siepro_detalle_titulos_otrosjuzgados (idradicado,fecharegistro,fechamodificacion,fechapago,ordenadooficio,numero,cantidad,valor,beneficiario,idusuarioregistra,idusuarioedita,sin_archivo)
							             VALUES ('$idradicado','$fechalog','0000-00-00','$fechapago','$ordenadooficio','$numero','$cantidad','$valor','$adju','$idusuario',0,'$sin_archivo')");
					
					}
					
					//SE SELECCIONO ARCHIVO
					if($sin_archivo == 1){
					
					
						//------------------------------------SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
										
						//AQUI SE CREA EL DIRECTORIO, CON EL ID ASIGNADO A LA DEMANDA
						if(is_dir($raiz.'/'.$nom.'/'.$idradicado)){$bandera=0;}
						else{mkdir($raiz.'/'.$nom.'/'.$idradicado, 0, true);}
		
						$mensage       = '';//Declaramos una variable mensaje quue almacenara el resultado de las operaciones.
						$archivo_error = 0;
											
						foreach ($_FILES as $key) //Iteramos el arreglo de archivos
						{
							if($key['error'] == UPLOAD_ERR_OK )//Si el archivo se paso correctamente Ccontinuamos 
							{
													
								$nombre_archivo = date('ymdHis'). '-' .$key['name'];//Obtenemos el nombre original del archivo y lo concatenamos con (Aï¿½oMesDiaHoramilitarMinutosSegundos)
								$temporal       = $key['tmp_name']; //Obtenemos la ruta Original del archivo
								//$Destino        = $ruta.$NombreOriginal;//Creamos una ruta de destino con la variable ruta y el nombre original del archivo	
								$ruta           = $raiz.'/'.$nom.'/'.$idradicado.'/'.$nombre_archivo;
														
								move_uploaded_file($temporal, utf8_decode($ruta)); //Movemos el archivo temporal a la ruta especificada		
														
							}
											
							if ($key['error']=='') //Si no existio ningun error, retornamos un mensaje por cada archivo subido
							{
								
								//$mensage .= '-> Archivo <b>'.$NombreOriginal.'</b> Subido correctamente. <br>';
														
								$rutaarchivo = utf8_decode($raiz.'/'.$nom.'/'.$idradicado.'/'.$nombre_archivo);
														
								
								
								$this->db->exec("INSERT INTO siepro_detalle_titulos_otrosjuzgados (idradicado,fecharegistro,fechamodificacion,fechapago,ordenadooficio,numero,cantidad,valor,beneficiario,idusuarioregistra,idusuarioedita,ruta,sin_archivo)
							                     VALUES ('$idradicado','$fechalog','0000-00-00','$fechapago','$ordenadooficio','$numero','$cantidad','$valor','$adju','$idusuario',0,'$rutaarchivo','$sin_archivo')");
					
								$cadena_archivos .= $rutaarchivo."******";
								
														
							}
							
							if ($key['error']!='')//Si existio algï¿½n error retornamos un el error por cada archivo.
							{
								$mensage .= '-> No se pudo subir el archivo <b>'.$nombre_archivo.'</b> debido al siguiente Error: n'.$key['error']; 
														
								$archivo_error = 1;
							}
												
						}
											
						//echo $mensage;// Regresamos los mensajes generados al cliente
											
						//------------------------------------FIN SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
					
					
						
					}
					
					
					
					$i = $i + 1;
				
				}
								 
								 
			
			//SE TERMINA LA TRANSACCION  
		  	$this->db->commit();
			
			//echo $datospartes;
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=11"</script>';*/
			echo "1-PROCESO SE REALIZA CORRECTAMENTE";
		  
		} 
		catch (Exception $e) {
		
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();
		  	echo "Fallo: " . $e->getMessage();
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=11b"</script>';*/
		}
		
		
  	}
	
	public function registrar_titulos_otrosJuzgados_SECAMBIAEL_20210224(){
	
		
		//SE OBTIENEN LOS DATOS
		$idusuario   = $_SESSION['idUsuario'];
		
		//$idradicado  = trim($_POST['idradicado']);
		$radicado       = trim($_POST['radicado']);
		$datospartes    = trim($_POST['datospartes']);
		$ordenadooficio = trim($_POST['ordenadooficio']);
		
		
		//OBTENEMOS DEL RADICADO 170014003 006 19931018000 
		//CLASE JUZGADO 4003, DEPARTAMENTO 17, MUNICIPIO 17001
		/*$idclasejuzgado = substr($radicadox, 5, 4);
		$iddepartamento = substr($radicadox, 1, 2);
		$idmunicipio    = substr($radicadox, 1, 5);*/
		

		//DATOS PARA EL REGISTRO DEL LOG
		
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		
		$tiporegistro = "Titulo(s) de Otro Juzgado";
		
		if( empty($iddocumento) ){
			$accion  = "Registra un Nuevo ".$tiporegistro." En el Sistema (SIEPRO), PROCESO: ".$radicado;
		}
		else{
			//$accion  = "Modifica una ".$tiporegistro." En el Sistema (SIGDOC) REGISTRO DE DOCUMENTOS ENTRANTES, ID PROCESO: ".$iddocumento;
		}
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		
		try {  
		
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
			
			//EMPIEZA LA TRANSACCION
		   	$this->db->beginTransaction();
			
		   		 
				$this->db->exec("INSERT INTO log (fecha,accion,detalle,idusuario,idtipolog) VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')"); 
				 
				
				//IDENTIFICAMOS QUE UN PROCESO YA EXISTA EN LA TABLA siepro_titulos_otrosjuzgados
				//PARA NO VOLVER A REGISTRAR.
				$listar = $this->db->prepare("SELECT * FROM siepro_titulos_otrosjuzgados WHERE radicado = '$radicado'");
		
				$listar->execute();
						
				$resultado = $listar->rowCount();
					
				if(!$resultado){//NO EXISTE
				 
					$this->db->exec("INSERT INTO siepro_titulos_otrosjuzgados (radicado,fecharegistro,idusuarioregistra)
						             VALUES ('$radicado','$fechalog','$idusuario')"); 
									 
					//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_titulos_otrosjuzgados
				    $idradicado  = $this->db->lastInsertId();
				}
				else{//EXISTE
				
					$field = $listar->fetch();
						
					$idradicado = trim($field[id]);
				
				}
				  
				
				 
				//******75088165//////Jorge Andres Valencia//////Cr 21 # 46 A 82//////8855934//////1-DEMANDANTE//////17-Caldas//////17001-MANIZALES******
				//75095585//////Andres Grajales//////Cr 213 # 748 B 434//////8875632//////1-DEMANDANTE//////13-Bolivar//////13001-CARTAGENA
		
				//1 EXPLODE
				$datospartes_1 = explode("******",$datospartes); 
				$longitud_1    = count($datospartes_1);
				$i             = 1;
				
				while($i < $longitud_1){
					
					//2 EXPLODE
					$datospartes_2 = explode("//////",$datospartes_1[$i]);
					
					
					$numero    = $datospartes_2[0];
					$valor     = $datospartes_2[1];
					$adju      = $datospartes_2[2];
					
					$fechapago = $datospartes_2[3];
					
					if($fechapago == ''){
						$fechapago = 'NO ASIGNADA';
					}
					
					$cantidad  = $datospartes_2[4];
					
				
					$this->db->exec("INSERT INTO siepro_detalle_titulos_otrosjuzgados (idradicado,fecharegistro,fechamodificacion,fechapago,ordenadooficio,numero,cantidad,valor,beneficiario,idusuarioregistra,idusuarioedita)
						             VALUES ('$idradicado','$fechalog','0000-00-00','$fechapago','$ordenadooficio','$numero','$cantidad','$valor','$adju','$idusuario',0)");
					
					
					
					
					$i = $i + 1;
				
				}
								 
								 
			
			//SE TERMINA LA TRANSACCION  
		  	$this->db->commit();
			
			//echo $datospartes;
			print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=11"</script>';
		  
		} 
		catch (Exception $e) {
		
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();
		  	echo "Fallo: " . $e->getMessage();
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=11b"</script>';*/
		}
		
		
  	}
	
	public function asignarfechapago(){

		//$error_transaccion = 0; //variable para detectar error de transaccion	
	
		//SE OBTIENEN LOS DATOS
		
		$idusuario = $_SESSION['idUsuario'];
		
		$fechas    = trim($_POST['fechas']);
		$idtitulo  = trim($_POST['idtitulo']);
		
		
		//DATOS PARA EL REGISTRO DEL LOG
		
		//INSTANCIAMOS EL MODELO, PARA DAR USO DE SUS FUNCIONES
		$modelo	= new archivoModel();
		//OBTENEMOS LA FECHA ACTUAL
		$fechaactual  = $modelo->get_fecha_actual();
		$fechar       = explode(" ",trim($fechaactual));
		$fecha        = $fechar[0];
		$hora         = $fechar[1];
		
		$accion  = "Se Asigna Fecha de Pago";
      	$detalle = $_SESSION['nombre']." "."Asigna Fecha de pago ".$fecha." "."a las: ".$hora." "."ID TITULO: ".$idtitulo;
		$tipolog = 1;
		
		try {  
		
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
			
			//EMPIEZA LA TRANSACCION
		   	$this->db->beginTransaction();
			
		   
				$this->db->exec("UPDATE siepro_detalle_titulos_otrosjuzgados SET fechapago = '$fechas',fechamodificacion = '$fecha',idusuarioedita = '$idusuario'
				                 WHERE id = '$idtitulo'");
								 
				
				$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) VALUES ('$fecha', '$accion','$detalle','$idusuario','$tipolog')");
				
			
			//SE TERMINA LA TRANSACCION  
		  	$this->db->commit();
			//echo "exito: " .$idusuario;
			print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=12"</script>';
		  
		} 
		catch (Exception $e) {
		
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();
		  	echo "Fallo: " . $e->getMessage();
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=12b"</script>';*/
		}
		
		
  	}
	
	public function get_titulos_otrosjuzgados($identrada){
	
	
		$idusuario  = $_SESSION['idUsuario'];
		
		if($identrada == 1){
		
			
			     
			$listar     = $this->db->prepare("SELECT dtoj.id,toj.radicado,dtoj.fecharegistro,dtoj.fechamodificacion,dtoj.fechapago,dtoj.ordenadooficio,
			                                  dtoj.numero,dtoj.cantidad,dtoj.valor,dtoj.beneficiario,dtoj.ruta,dtoj.sin_archivo
											  FROM (siepro_titulos_otrosjuzgados toj LEFT JOIN siepro_detalle_titulos_otrosjuzgados dtoj ON toj.id = dtoj.idradicado)
											  ORDER BY dtoj.id DESC
											  LIMIT 10");
											 
			
		}
		if($identrada == 2){
			
			$filtrox;
			
			$filtrof;
			$filtro1;
			$filtro2;
			$filtro3;
			$filtro4;
			
	
			$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			$datox1    = trim($_GET['datox1']);
			$datox2    = trim($_GET['datox2']);
			$datox3    = trim($_GET['datox3']);
			$datox4    = trim($_GET['datox4']);
			
			
	
			if ( !empty($fechad) && !empty($fechah) ) {
			
				
				$filtrof = " AND (dtoj.fecharegistro >= '$fechad' AND dtoj.fecharegistro <= '$fechah') ";
				
			
			}
			if ( !empty($datox1) ) {
			
				$filtro1 = " AND dtoj.id = '$datox1' ";
			
			}
			if ( !empty($datox2) ) {
			
				$filtro2 = " AND dtoj.beneficiario LIKE '%$datox2%' ";
			
			}
			if ( !empty($datox3) ) {
			
				
				$filtro3 = " AND toj.radicado LIKE '%$datox3%' ";
			
			}
			if ( !empty($datox4) ) {
			
				$filtro4 = " AND dtoj.numero = '$datox4' ";
			
			}
			
	
			$filtrox = $filtro1." ".$filtro2." ".$filtro3." ".$filtro4." ".$filtrof;
			
			//echo $filtrox;
			  
			 
	 
			$listar    = $this->db->prepare("SELECT dtoj.id,toj.radicado,dtoj.fecharegistro,dtoj.fechamodificacion,dtoj.fechapago,dtoj.ordenadooficio,
			                                 dtoj.numero,dtoj.cantidad,dtoj.valor,dtoj.beneficiario,dtoj.ruta,dtoj.sin_archivo
											 FROM (siepro_titulos_otrosjuzgados toj LEFT JOIN siepro_detalle_titulos_otrosjuzgados dtoj ON toj.id = dtoj.idradicado)
											 WHERE dtoj.id >= '1'" .$filtrox. " 
											 ORDER BY dtoj.id DESC");
											 
											 
			
			
											 
			//echo $sql;
		}

  		$listar->execute();

  		return $listar;
	
  	}
	
	public function get_lista($nombrelista,$campoordenar){
	
		$listar     = $this->db->prepare("SELECT * FROM ".$nombrelista." ORDER BY ".$campoordenar);
	
  		$listar->execute();

  		return $listar;
	
	}
	
	
	public function SoloADespacho(){
  

		$idusuario      = $_SESSION['idUsuario'];
		
		
		$cadenaradicados  = "20599"."******"."17001400300120080045600"."******"."2"."//////".
"20600"."******"."17001400300120080050400"."******"."2"."//////".
"21008"."******"."17001400300320100026800"."******"."2"."//////".
"25322"."******"."17001400300320100034000"."******"."2"."//////".
"21066"."******"."17001400300320110006400"."******"."2"."//////".
"20975"."******"."17001400300320110050100"."******"."2"."//////".
"17670"."******"."17001400300320120023000"."******"."2"."//////".
"17855"."******"."17001400300419980040700"."******"."2"."//////".
"17873"."******"."17001400300420040029500"."******"."2"."//////".
"17877"."******"."17001400300420040058100"."******"."2"."//////".
"17880"."******"."17001400300420050056300"."******"."2"."//////".
"17976"."******"."17001400300420100019200"."******"."2"."//////".
"20952"."******"."17001400300420110010400"."******"."2"."//////".
"18042"."******"."17001400300420120014100"."******"."2"."//////".
"18045"."******"."17001400300420120015400"."******"."2"."//////".
"18051"."******"."17001400300420120020600"."******"."2"."//////".
"18550"."******"."17001400300620010027300"."******"."2"."//////".
"25400"."******"."17001400300620030023500"."******"."2"."//////".
"18570"."******"."17001400300620050013100"."******"."2"."//////".
"18578"."******"."17001400300620060016700"."******"."2"."//////".
"18579"."******"."17001400300620060052000"."******"."2"."//////".
"18582"."******"."17001400300620060061200"."******"."2"."//////".
"20766"."******"."17001400300620100012900"."******"."2"."//////".
"21036"."******"."17001400300620110017100"."******"."2"."//////".
"18678"."******"."17001400300620120006500"."******"."2"."//////".
"18680"."******"."17001400300620120008100"."******"."2"."//////".
"18681"."******"."17001400300620120008500"."******"."2"."//////".
"19211"."******"."17001400300820120031900"."******"."2"."//////";

							
			

		$cadenaradicados_2 = explode("//////",$cadenaradicados);
		$i = 0;
		$cantidadid = count($cadenaradicados_2);
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
		
		$tiporegistro = "A Despacho Masivo";
		
		$accion  = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		//--------------------------------------------------------------------------------------------
		
		$observaciondespacho = 'A DESPACHO';
		$observacion_salida	 = 'PETICION';
		
		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		//--------------------------------------------------------------------------------------------
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		$serverName     = "192.168.89.20"; 
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		while($i < $cantidadid - 1){
		
		$cadenaradicados_3 = explode("******",$cadenaradicados_2[$i]);
		
		
		$sininstancia = $cadenaradicados_3[1];
	  	$sin = substr($sininstancia, 0, 21);
		  
		//A DESPACHO DESDE LA OFICINA
		$sql = ("DECLARE @cad integer
					 
		
					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$cadenaradicados_3[1]' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
					A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
					A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
					A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
					A110RENUTERM) values('$cadenaradicados_3[1]',@cad,'$sin','00','30000031','30000031','A Despacho','N','NO','N',0,NULL,NULL,
					convert(datetime, '2016-04-05', 121),NULL,NULL,NULL,NULL,NULL,
					'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal',NULL,NULL,'S','D',
					convert(datetime, '2016-04-05', 121),'NO','NO')");
					
					
		
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			echo $conn."RADICADO:".$cadenaradicados_3[1];
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
		}
		else{
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			   
					//A DESPACHO
					/*$this->db->exec("UPDATE ubicacion_expediente SET fecha='2016-05-20',idjuzgadodestino ='$cadenaradicados_3[2]',
					                 fechasalida='2016-05-20',fechadevolucion = NULL,idusuario = '$idusuario',
	  								 observacion_salida = '$observacion_salida' where id='$cadenaradicados_3[0]'");
									 
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$cadenaradicados_3[0]','2016-05-20 00:00:00','$observaciondespacho','$idusuario')");
									 
					
					
					//LOG	
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
					                 VALUES ('2016-05-20', '$accion','$detalle','$idusuario','$tipolog')");*/
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		}
		
		$i = $i + 1;
		
		}//FIN WHILE
		
  }	
	
	//ESTA ES LA MISMA FUCNION QUE SE USA ACTUALMENTE VARIANDO SUS UPDATE Y INSERT PARA LAS TABLA St103dainfoproc Y T110DRACTUPROC
	
	//ESTE INSERT SE USA PARA CREAR UNA ACTUACION CON Auto termina proceso por desistimiento tï¿½cito 
	
	/*INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
	  A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
	  A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
	  A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
	  A110RENUTERM) 
	  values('17001400300120100038800',38,'170014003001201000388','00','30000031','30000031','Auto termina proceso por desistimiento tï¿½cito','N','NO','N',0,NULL,NULL,convert(datetime, '2016-02-04', 121),NULL,NULL,NULL,NULL,NULL,
	  '',NULL,NULL,'D','P',convert(datetime, '2016-02-04', 121),'NO','NO')
	  
	  //ESTE INSERT SE USA PARA CREAR UNA ACTUACION CON Fijacion estado 
	  
	  INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
	  A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
	  A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
	  A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
	  A110RENUTERM) 
	  values('17001400300120100038800',39,'170014003001201000388','00','00000108','00000106','Fijacion estado','L','SI','C',1,convert(datetime, '2016-02-05', 121),convert(datetime, '2016-02-05', 121),convert(datetime, '2016-02-04', 121),NULL,1,NULL,NULL,NULL,
	  '',NULL,NULL,'S','D',convert(datetime, '2016-02-04', 121),'','')
	  
	  //ESTE UPDATE SE USA PARA ACTUALIZAR LA ULTIMA ACTAUCION DE DESPACHO Y SECRETARIA
	  
	  //DESPACHO
	  a103descactd='Auto termina proceso por desistimiento tï¿½cito'
	  //SECRETARIA
	  a103descacts='Fijacion estado'
	  
	  //LO ANTERIOR PARA QUE SE VISUALIZE CORRECTAMENTE EN LA VISTA archivo_modificarOtro.php PARTE ACTUACIONES
	  
	  //NOTA: CUANDO SE FIJA LA ACTUACION FIJACION ESTADO LA FECHA INICIAL Y FINAL DEBEN SER UNA MAS A LA FECHA DE ACTUACION
	  //ES DECIR SI LA FECHA DE ACTUACION ES 2016-02-04 LA INICIAL Y FINAL SON 2016-02-05
	  
	  UPDATE t103dainfoproc SET a103descacts='Fijacion estado',a103descactd='Auto termina proceso por desistimiento tï¿½cito', a103codiacts='30000031', a103codipads='30000031', a103fechdess = convert(datetime, '2016-02-04', 121),a103fechdesd = convert(datetime, '2016-02-04', 121), 
	  a103anotacts = 'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal'
	  WHERE a103llavproc='$cadenaradicados_3[1]'
	  
	  */
	  
	  
	  //**********************************NUEVAS VERSIONES DE FUNCIONES PARA LA ADMINISTRACION MASIVA DE PROCESOS**************************************
	
	public function RegistrarADespacho_Masivo_NUEVA_VERSION(){

		
		set_time_limit(240000000);
		
		$modelo    = new archivoModel();
		
		$idusuario = $_SESSION['idUsuario'];
	
		$carpeta   = "CARGAMASIVA";
		
		//FECHA DE CARGA AL SISTEMA DEL PROCESO
      	//$fechacarga = date("Y-m-d"); 
		
		$fechacarga = trim($_POST['fechae']);
		
		//$fechacarga = '2017-08-30'; 
		
		$fecha_amd    = $modelo->get_fecha_actual_amd();	
		$hora_militar = $modelo->get_hora_actual_24horas();
		
	
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
		$tiporegistro = "A Despacho Masivo";
		
		$accion  = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		//--------------------------------------------------------------------------------------------
		
		$observaciondespacho = 'A DESPACHO';
		$observacion_salida	 = 'PETICION';
		

		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE ES CON EL QUE SE LOGEA EL USUARIO  
		//$nom = "jvalenciao";
		$nom = trim($_SESSION['idUsuario']);
		
	
		//AQUI SE CREA EL DIRECTORIO
		if(is_dir($carpeta."/".$nom)){$bandera=0;}
		else{mkdir($carpeta."/".$nom, 0, true);}
		
		//datos del arhivo 
		$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		//echo $tipo_archivo;
		$tamano_archivo = $_FILES['archivo']['size']; 
		
		
		if (! (strpos($tipo_archivo, "vnd.ms-excel")) && ($tamano_archivo < 100000000) )  { 
			
			//echo "EXTENSION"."**********";
			
			echo '<script languaje="JavaScript"> 
			
	
				alert("LA EXTENSION O LA LONGITUD DEL ARCHIVO NO ES CORRECTA");
				
				location.href="index.php?controller=archivo&action=Registrar_A_Despacho_Masivo";
						
			</script>';
			
			
		}
		else{//1 
		
			
			
			if ( file_exists($carpeta."/".$nom.'/'.$nombre_archivo) ) {
				
				//echo "EXISTE"."**********";
				
				/*echo '<script languaje="JavaScript"> 
			
	
						alert("YA EXISTE UN ARCHIVO CON ESE NOMBRE EN EL SERVIDOR");
				
						location.href="index.php?controller=archivo&action=Registrar_A_Despacho_Masivo";
						
					</script>';*/
					
				
				//OBTENGO UN ID PARA IDENTIFICAR UN ARCHIVO CON EL MISMO NOMBRE
				//PARA AGREGARLE EL ID A ESE NOMBRE Y QUE EL SISTEMA CONTINUE SIN AVISO DE YA EXISTE UN ARCHIVO CON ESE NOMBRE EN EL SERVIDOR
				$idunico = time();
					
				$nombre_archivo = $idunico."_".$nombre_archivo;
				
				
			}
			
			
			if ( move_uploaded_file($_FILES['archivo']['tmp_name'], $carpeta."/".$nom.'/'.$nombre_archivo) ){
			
				$lineas = file( $carpeta."/".$nom.'/'.$nombre_archivo,FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
				$long   = count($lineas);
				
				//OBETNER SEPARAR DE LOS REGISTROS YA QUE EN UNOS EQUIPOS DE COMPUTO ES ---> COMA(,)
				//Y EN OTROS ---> PUNTO Y COMA (;)
				$separador = $modelo->Obtener_Separador( trim($lineas[1]) );
				
				$error_transaccion   = 0; //variable para detectar error
				//$error_transaccion_2 = 0; //variable para detectar error
				//$error_transaccion_3 = 0; //variable para detectar error
				
				$msgError  = "";
				
				$datosbd   = $modelo->get_datos_basededatos(1);
				$datosbd_b = $datosbd->fetch();
				$datosbd_1 = $datosbd_b[ip];
				$datosbd_2 = $datosbd_b[bd];
				$datosbd_3 = $datosbd_b[usuario];
				$datosbd_4 = $datosbd_b[clave];
				
				
		
				try {  
					
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
						
						
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
											
								
								//*********************************NUEVA CONEXON**************************************************
					
								$serverName = $datosbd_1; //serverName\instanceName
								$connectionInfo = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
								$conn = sqlsrv_connect( $serverName, $connectionInfo);
									
									
								if( $conn === false ) {
										
										$error_transaccion = 1;
									
										if( ($errors = sqlsrv_errors() ) != null) {
										
											foreach( $errors as $error ) {
											
												$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
											}
										}
										
										//echo "ENTRE 1";
										
								}
									
								//Iniciar la transacciï¿½n.
								if ( sqlsrv_begin_transaction( $conn ) === false ) {
										 
										$error_transaccion = 1;
									
										if( ($errors = sqlsrv_errors() ) != null) {
										
											foreach( $errors as $error ) {
											
												$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
											}
										}
										 
										//echo "ENTRE 2";
										 
								}
								
								//ASI CUANDO EL ARCHIVO TIENE ENCABEZADOS
								$i=1;
								
								while($i < $long){
									
									//echo $lineas[$i]."\n";
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR COMAS
									//$fila = explode(",",$lineas[$i]);
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR PUNTO Y COMA
									//$fila = explode(";",$lineas[$i]);
									
									$fila = explode($separador,$lineas[$i]);
									
									$idradicado = trim($fila[0]);
									$radicado   = trim($fila[1]);
									
									
									$datos_ACTU110 = $modelo->get_datos_ADESPACHO110($radicado,$fechacarga);
									
									
									//$datos_ACTU110 = 0;
									
									//NO EXISTE ACTUACION EN JUSTICIA XXI Y EN LA BASE DE DATOS LOCAL EJECUCION
									//ESTO PERMITE NO REPETIR EL PROCESO A DESPACHO DE UN RADICADO
									if ($datos_ACTU110 == 0){
													
										//A DESPACHO
										$this->db->exec("UPDATE ubicacion_expediente SET fecha='$fechacarga',
														 fechasalida='$fechacarga',fechadevolucion = NULL,idusuario = '$idusuario',
														 observacion_salida = '$observacion_salida' 
														 WHERE id = '$idradicado'");
										
										$fechacarga_detalle = $fechacarga." "."00:00:00";
														 
										$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
														 VALUES('$idradicado','$fechacarga_detalle','$observaciondespacho','$idusuario')");
													 
													 
		 								//-------------------CODIGO TEMPORAL PARA ASIGNAR TAREAS---------------------------------------------
										
										
										//$id_user_asignada = 4;
										
										//$obs_2 = "A DESPACHO, PASA A Luis Hernando Rios Salazar PARA COSTAS";
										
										//$id_user_asignada = 59;
										
										//$obs_2 = "A DESPACHO, PASA A Maria Carolina Henao Rodriguez PARA COSTAS";

										
										/*$this->db->exec("
										
														 INSERT INTO detalle_correspondencia (
														 idcorrespondencia,
														 fecha,
														 observacion,
														 fecha_obs_i,
														 fecha_obs_f,
														 estadoobs,
														 id_user_asignada,
														 a_despacho,
														 idusuario,
														 idestadorevisojuz,
														 idrevisojuz2,
														 fecharevisado,
														 horarevisado,
														 desde_reparto) 
														 VALUES(
														 '$idradicado',
														 '$fechacarga_detalle',
														 '$obs_2',
														 '$fechacarga',
														 '$fechacarga',
														  2,
														  '$id_user_asignada',
														  1,
														  '$idusuario',    
														  1,
														  '$idusuario',
														  '$fechacarga',
														  '$hora_militar',
														  1)
														  
														  
														");*/
													 
													 
		 								
										//-------------------CODIGO TEMPORAL PARA ASIGNAR TAREAS---------------------------------------------
				
										
										
										
										$sininstancia = $radicado;
										$sin          = substr($sininstancia, 0, 21);
										
										//A DESPACHO DESDE LA OFICINA
										$sql = ("   DECLARE @cad integer
													 
													UPDATE t103dainfoproc SET a103descacts='A Despacho', a103codiacts='30000031', a103codipads='30000031', 
													a103fechdess = convert(datetime, '$fechacarga', 121), 
													a103anotacts = 'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal'
													WHERE a103llavproc='$radicado';
													
													SELECT @cad = MAX(A110CONSACTU)+1 FROM T110DRACTUPROC WHERE a110Llavproc='$radicado' 
													
													INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
													A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
													A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
													A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
													A110RENUTERM) 
													VALUES('$radicado',@cad,'$sin','00','30000031','30000031','A Despacho','N','NO','N',0,NULL,NULL,
													convert(datetime, '$fechacarga', 121),NULL,NULL,NULL,NULL,NULL,
													'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal',NULL,NULL,'S','D',
													convert(datetime, '$fechacarga', 121),'NO','NO') ");
										
										
		
										$params  = array();
										$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
										$stmt = sqlsrv_query( $conn, $sql , $params, $options );
											
											
										if( $stmt === false ) {
											
											$error_transaccion = 1;
											
											if( ($errors = sqlsrv_errors() ) != null) {
												
												foreach( $errors as $error ) {
													
													$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
												}
											}
												
											//echo "ENTRE 3";
												
										}
									
									
									}//FIN IF if ($datos_ACTU110 == 0)
									
			
									$i= $i + 1;
																 
								}//FIN WHILE while($i < $long){		
								
								
								if($error_transaccion) {
								
									//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
									$this->db->rollBack();
					
									//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
									sqlsrv_rollback( $conn );
									
									// Cerrar la conexiï¿½n.
									sqlsrv_close( $conn );
									
									
									echo '<script languaje="JavaScript"> 
				
							
											var ERROR = "'.$msgError.'";
						
											alert("ERROR 1: "+ERROR);
									
											location.href="index.php?controller=archivo&action=Registrar_A_Despacho_Masivo";
											
										
										</script>';
								
								}
								else{
								
									//SE TERMINA LA TRANSACCION  
									$this->db->commit();
									
									//SE TERMINA LA TRANSACCION EN JUSTICIA XXI  
									sqlsrv_commit( $conn );	
									
									echo '<script languaje="JavaScript"> 
							
			
											alert("PROCESO SE REALIZA CORRECTAMENTE");
								
											location.href="index.php?controller=archivo&action=Registrar_A_Despacho_Masivo";
										
									</script>';
								}
						
						
				}
				catch (Exception $e) {
			
					//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
					$this->db->rollBack();
					
					//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
					sqlsrv_rollback( $conn );
					
					// Cerrar la conexiï¿½n.
					sqlsrv_close( $conn );
					
					//echo "Fallo: " . $e->getMessage();
					
					
					echo '<script languaje="JavaScript"> 
				
							
							var ERROR = "'.$e->getMessage()." SEPARADOR: ".$separador.'";
		
							alert("ERROR 2: "+ERROR);
					
							location.href="index.php?controller=archivo&action=Registrar_A_Despacho_Masivo";
							
						</script>';
			
					
				}		
						
						
				
				
			}
			
				
			
		
		}//FIN ELSE 1
			
		

	}//FIN FUNCION 
	
	
	//ESTADO MASIVO
	public function Registrar_Estado_Masivo_NUEVA_VERSION(){
		
		
		$modelo     = new archivoModel();
		
		$idusuario  = $_SESSION['idUsuario'];
	
		$carpeta    = "CARGAMASIVA";
		
		$fechacarga = trim($_POST['fechae_2']);
		
		//FECHA DE CARGA AL SISTEMA DEL PROCESO
      	$fechacarga_2 = date("Y-m-d"); 
		
		setlocale(LC_TIME, "Spanish");
		$fechavisual = strtoupper( strftime('%d %B de %Y', strtotime($fechacarga)) ); 
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
		
		$tiporegistro = "ESTADO DE ".$fechavisual." MASIVO";
		$accion  = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		//--------------------------------------------------------------------------------------------
		
		$observaciondespacho = 'ESTADO DE '.$fechavisual;
		//$observacion_salida	 = 'PASA A DESISTIMIENTO TACITO';
		
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE ES CON EL QUE SE LOGEA EL USUARIO  
		//$nom = "jvalenciao";
		$nom = trim($_SESSION['idUsuario']);
		
	
		//AQUI SE CREA EL DIRECTORIO
		if(is_dir($carpeta."/".$nom)){$bandera=0;}
		else{mkdir($carpeta."/".$nom, 0, true);}
		
		//datos del arhivo 
		$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		//echo $tipo_archivo;
		$tamano_archivo = $_FILES['archivo']['size']; 
		
		
		if (! (strpos($tipo_archivo, "vnd.ms-excel")) && ($tamano_archivo < 100000000) )  { 
			
			//echo "EXTENSION"."**********";
			
			echo '<script languaje="JavaScript"> 
			
	
				alert("LA EXTENSION O LA LONGITUD DEL ARCHIVO NO ES CORRECTA");
				
				location.href="index.php?controller=archivo&action=Registrar_Estado_Masivo";
						
			</script>';
			
			
		}
		else{//1 
		
			
			
			if ( file_exists($carpeta."/".$nom.'/'.$nombre_archivo) ) {
				
			
				$idunico = time();
					
				$nombre_archivo = $idunico."_".$nombre_archivo;
				
				
			}
			
			
			if ( move_uploaded_file($_FILES['archivo']['tmp_name'], $carpeta."/".$nom.'/'.$nombre_archivo) ){
			
				$lineas = file( $carpeta."/".$nom.'/'.$nombre_archivo,FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
				$long   = count($lineas);
				

				//OBETNER SEPARAR DE LOS REGISTROS YA QUE EN UNOS EQUIPOS DE COMPUTO ES ---> COMA(,)
				//Y EN OTROS ---> PUNTO Y COMA (;)
				//$separador = $modelo->Obtener_Separador( trim($lineas[1]) );
				
				

				try {  
					
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
						
						
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
											
								
								
								//ASI CUANDO EL ARCHIVO NO TIENE ENCABEZADOS
								$i=0;
								
								while($i < $long){
									
									//echo $lineas[$i]."\n";
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR COMAS
									//$fila = explode(",",$lineas[$i]);
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR PUNTO Y COMA
									//$fila = explode(";",$lineas[$i]);
									
									//$fila = explode($separador,$lineas[$i]);
									
									//$idradicado = trim($fila[0]);
									//$radicado   = trim($fila[0]);
									
									$radicado   = trim($lineas[$i]);
								
									
									$datos_PROCESOX = $modelo->get_datos_PROCESOX($radicado);
									$fila           = $datos_PROCESOX->fetch();
									$idradicado	    = $fila[id];
									
									
									$datos_OBSER_PROCESOX = $modelo->get_OBSER_ESTADO_PROCESOX($idradicado,$fechacarga_2,$observaciondespacho,1);
									
									//NO EXISTE 
									if ($datos_OBSER_PROCESOX == 0){
													
										
										
										$this->db->exec("UPDATE ubicacion_expediente SET fecha='$fechacarga_2',fechasalida = NULL,
														 fechadevolucion = '$fechacarga_2',
														 idusuario = '$idusuario'
														 WHERE id='$idradicado'");
										
										$fechacarga_detalle = $fechacarga_2." "."00:00:00";
														 
										$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
														 VALUES('$idradicado','$fechacarga_detalle','$observaciondespacho','$idusuario')");
														 
														 
				
									
									}//FIN IF if ($datos_ACTU110 == 0)
									
			
									$i= $i + 1;
																 
								}//FIN WHILE while($i < $long){		
								
								
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
									
					
								echo '<script languaje="JavaScript"> 
							
										
										alert("PROCESO SE REALIZA CORRECTAMENTE");
								
										location.href="index.php?controller=archivo&action=Registrar_Estado_Masivo";
										
								</script>';
								
						
						
				}
				catch (Exception $e) {
			
					//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
					$this->db->rollBack();
				
					//echo "Fallo: " . $e->getMessage();
					
					
					echo '<script languaje="JavaScript"> 
				
							
							var ERROR = "'.$e->getMessage()." REGISTROS ARCHIVO: ".$long.'";
		
							alert("ERROR 2: "+ERROR);
					
							location.href="index.php?controller=archivo&action=Registrar_Estado_Masivo";
							
						</script>';
			
					
				}		
						
						
				
				
			}
			
				
			
		
		}//FIN ELSE 1
			
		

	}//FIN FUNCION 
	
	
	//PARA ARCHIVO MASIVO
	public function registrar_paraarchivo_masivo_NUEVA_VERSION(){
		
		
		$modelo     = new archivoModel();
		
		$idusuario  = $_SESSION['idUsuario'];
	
		$carpeta    = "CARGAMASIVA";
		
		$fechacarga = date("Y-m-d");
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
		//SE ERALOIZA EL CAMBIO 1 DE SEPTIEMBRE 2020, PEDIDO DE SECRETARIA
		//$tiporegistro = "PASA AL AREA DE ARCHIVO";
		$tiporegistro = "PASA AL AREA DE UBICACION PROCESOS";
		$accion  = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		//--------------------------------------------------------------------------------------------
		
		//$observaciondespacho = 'PASA AL AREA DE ARCHIVO';
		$observaciondespacho = 'PASA AL AREA DE UBICACION PROCESOS';
		//$observacion_salida	 = 'PASA A DESISTIMIENTO TACITO';
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE ES CON EL QUE SE LOGEA EL USUARIO  
		//$nom = "jvalenciao";
		$nom = trim($_SESSION['idUsuario']);
		
	
		//AQUI SE CREA EL DIRECTORIO
		if(is_dir($carpeta."/".$nom)){$bandera=0;}
		else{mkdir($carpeta."/".$nom, 0, true);}
		
		//datos del arhivo 
		$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		//echo $tipo_archivo;
		$tamano_archivo = $_FILES['archivo']['size']; 
		
		
		if (! (strpos($tipo_archivo, "vnd.ms-excel")) && ($tamano_archivo < 100000000) )  { 
			
			//echo "EXTENSION"."**********";
			
			echo '<script languaje="JavaScript"> 
			
	
				alert("LA EXTENSION O LA LONGITUD DEL ARCHIVO NO ES CORRECTA");
				
				location.href="index.php?controller=archivo&action=Registrar_ParaArchivo_Masivo";
						
			</script>';
			
			
		}
		else{//1 
		
			
			
			if ( file_exists($carpeta."/".$nom.'/'.$nombre_archivo) ) {
				
			
				$idunico = time();
					
				$nombre_archivo = $idunico."_".$nombre_archivo;
				
				
			}
			
			
			if ( move_uploaded_file($_FILES['archivo']['tmp_name'], $carpeta."/".$nom.'/'.$nombre_archivo) ){
			
				$lineas = file( $carpeta."/".$nom.'/'.$nombre_archivo,FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
				$long   = count($lineas);
				

				//OBETNER SEPARAR DE LOS REGISTROS YA QUE EN UNOS EQUIPOS DE COMPUTO ES ---> COMA(,)
				//Y EN OTROS ---> PUNTO Y COMA (;)
				//$separador = $modelo->Obtener_Separador( trim($lineas[1]) );
				
				

				try {  
					
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
						
						
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
											
								
								
								//ASI CUANDO EL ARCHIVO NO TIENE ENCABEZADOS
								$i=0;
								
								while($i < $long){
									
									//echo $lineas[$i]."\n";
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR COMAS
									//$fila = explode(",",$lineas[$i]);
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR PUNTO Y COMA
									//$fila = explode(";",$lineas[$i]);
									
									//$fila = explode($separador,$lineas[$i]);
									
									//$idradicado = trim($fila[0]);
									//$radicado   = trim($fila[0]);
									
									$radicado   = trim($lineas[$i]);
								
									
									$datos_PROCESOX = $modelo->get_datos_PROCESOX($radicado);
									$fila           = $datos_PROCESOX->fetch();
									$idradicado	    = $fila[id];
									
					
									$datos_OBSER_PROCESOX = $modelo->get_OBSER_ESTADO_PROCESOX($idradicado,$fechacarga,$observaciondespacho,2);
									
									//NO EXISTE 
									if ($datos_OBSER_PROCESOX == 0){
													
										
										$this->db->exec("UPDATE ubicacion_expediente SET fecha='$fechacarga',idusuario = '$idusuario'
	  								                     WHERE id='$idradicado'");
										
									
										$fechacarga_detalle = $fechacarga." "."00:00:00";
														 
										$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
														 VALUES('$idradicado','$fechacarga_detalle','$observaciondespacho','$idusuario')");
														 
										
												
									}//FIN IF 
									
			
									$i= $i + 1;
																 
								}//FIN WHILE while($i < $long){		
								
								
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
									
					
								echo '<script languaje="JavaScript"> 
							
										
										alert("PROCESO SE REALIZA CORRECTAMENTE");
								
										location.href="index.php?controller=archivo&action=Registrar_ParaArchivo_Masivo";
										
								</script>';
								
						
						
				}
				catch (Exception $e) {
			
					//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
					$this->db->rollBack();
				
					//echo "Fallo: " . $e->getMessage();
					
					
					echo '<script languaje="JavaScript"> 
				
							
							var ERROR = "'.$e->getMessage()." REGISTROS ARCHIVO: ".$long.'";
		
							alert("ERROR 2: "+ERROR);
					
							location.href="index.php?controller=archivo&action=Registrar_ParaArchivo_Masivo";
							
						</script>';
			
					
				}		
						
						
				
				
			}
			
				
			
		
		}//FIN ELSE 1
			
		

	}//FIN FUNCION 
	
	//INFORMACION DE LA BASE DE DATOS, PARA SU CONEXION
	public function get_datos_basededatos($idbd){
  
  		$listar     = $this->db->prepare("SELECT * FROM pa_base_datos WHERE id = ".$idbd);
	
  		$listar->execute();

  		return $listar;
		
  	} 
	
	//INFORMACION DEL PROCESO EN BASE DATOS LOCAL EJECUCION
	public function get_datos_PROCESOX($radicado){
	
		
		$listar = $this->db->prepare("SELECT * FROM ubicacion_expediente 
		                              WHERE radicado = '$radicado'");
								
		$listar->execute();
									
		return $listar;							
		
		/*$resultado = $listar->rowCount();
					
		if(!$resultado){
						
			return 0;
										 
		}
		else{
			
			return 1;
		}*/
		
	}
	
	//INFORMACION DEL PROCESO QUE YA CUENTA CON ESA OBSERVACION DE ESTADO PARA
	//NO GENERAR DUPLICIDAD DE INFORMACION
	public function get_OBSER_ESTADO_PROCESOX($idradicado,$fechacarga_2,$observaciondespacho,$idsql){
	
	
	
		if($idsql == 1){
			  
			$listar = $this->db->prepare("SELECT * FROM detalle_correspondencia
										  WHERE idcorrespondencia = '$idradicado' 
										  AND ( DATE(fecha) >= '$fechacarga_2' AND DATE(fecha) <= '$fechacarga_2')
										  AND observacion = '$observaciondespacho'");
										  
		}
		
		if($idsql == 2){
			  
			$listar = $this->db->prepare("SELECT * FROM detalle_correspondencia
										  WHERE idcorrespondencia = '$idradicado' 
										  AND ( DATE(fecha) >= '$fechacarga_2' AND DATE(fecha) <= '$fechacarga_2')
										  AND observacion = '$observaciondespacho'");
										  
		}
								
		$listar->execute();
									
		$resultado = $listar->rowCount();
					
		if(!$resultado){
						
			return 0;
										 
		}
		else{
			
			return 1;
		}
		
	}
	
	//INFORMACION DE LA PARTE EN JUSTICIA XXI, PARA NO VOLVER A REGISTRARLA TABLA T102DAINFOSUJE
	public function get_datos_ADESPACHO110($radicado,$fechaactu){
	
		$modelo    = new archivoModel();
		
		$msgError  = "";
  
  		$error_transaccionX = 0;
		
  		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
			
		$serverNameX = $datosbd_1; //serverName\instanceName
		$connectionInfoX = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
		$connX = sqlsrv_connect( $serverNameX, $connectionInfoX);
		
		
		if( $connX === false ) {
			
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					
					$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
				}
			}
			
			echo "ENTRE 1 (110): ".$msgError;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $connX ) === false ) {
			 
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
				}
			}
			 
			echo "ENTRE 2 (110): ".$msgError;
			 
		}
		
		
		$fechaactu = $fechaactu." "."00:00:00.000";
		
		$sqlX = ("	
			
			
					SELECT * FROM [$datosbd_2].[dbo].[T110DRACTUPROC] 
 					WHERE [A110LLAVPROC] = '$radicado'
					AND   [A110DESCACTU] = 'A Despacho' 
  				    AND   [A110FECHREGI] = '$fechaactu'
                    AND   [A110FECHDESA] = '$fechaactu'; 
							
		");
			
		$paramsX  = array();
		$optionsX =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmtX    = sqlsrv_query( $connX, $sqlX , $paramsX, $optionsX );
			
			
		if( $stmtX === false ) {
			
			$error_transaccionX = 1;
			
			if( ($errors = sqlsrv_errors() ) != null) {
				
				foreach( $errors as $error ) {
					
					$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];				}
			}
				
			echo "ENTRE 3 (110): ".$msgError;
				
		}
		else{
		
			$row_count = sqlsrv_num_rows( $stmtX );
			
			//NO EXISTE
			//if ($row_count === false){
			if ($row_count == 0){
   		
				sqlsrv_free_stmt( $stmtX);
				sqlsrv_close( $connX );
				
				return 0;
				
				
			}
			//EXISTE
 			else{
			
				sqlsrv_free_stmt( $stmtX);
				sqlsrv_close( $connX );
				
				return 1;
				
				
			}		
			
		}
		
		
  	}
	
	
	public function Obtener_Separador($separador){
	
		$separadorarchivo = substr($separador, 29, 1);
		return $separadorarchivo; 
	}
	
	//*******************************************************************************************************************************************************************************
	  
	  
	  
	public function RegistrarADespacho_Masivo(){
  

		$idusuario      = $_SESSION['idUsuario'];
		
		//$id     	    = trim($_GET['id']);
		//$radicado       = trim($_GET['radicado']);
		
		//$juzgadodestino = trim($_GET['juzgadodestino']);
		
		//$juzgadodestino = 1;
		
		//$cadenaradicados   = "16730"."//////"."16436"."//////"."19425";

		
		$cadenaradicados  = "26658"."******"."17001400300120030069600"."******"."2"."//////".
"21157"."******"."17001400300120080071300"."******"."2"."//////".
"27721"."******"."17001400300120130064900"."******"."2"."//////".
"27727"."******"."17001400300120140052800"."******"."2"."//////".
"26641"."******"."17001400300220080010000"."******"."2"."//////".
"28126"."******"."17001400300220090029000"."******"."2"."//////".
"27809"."******"."17001400300319951528501"."******"."2"."//////".
"27813"."******"."17001400300320000023800"."******"."2"."//////".
"27820"."******"."17001400300320040041000"."******"."2"."//////".
"27821"."******"."17001400300320040047000"."******"."2"."//////".
"17533"."******"."17001400300320060042700"."******"."2"."//////".
"17540"."******"."17001400300320070019100"."******"."2"."//////".
"27822"."******"."17001400300320090078200"."******"."2"."//////".
"21239"."******"."17001400300320110004100"."******"."2"."//////".
"17706"."******"."17001400300320120048900"."******"."2"."//////".
"28545"."******"."17001400300420020040100"."******"."2"."//////".
"18108"."******"."17001400300420120048500"."******"."2"."//////".
"28010"."******"."17001400300520100027500"."******"."2"."//////".
"18372"."******"."17001400300520120013900"."******"."2"."//////".
"18549"."******"."17001400300620010026000"."******"."2"."//////".
"27641"."******"."17001400300620050076900"."******"."2"."//////".
"27735"."******"."17001400300620060024100"."******"."2"."//////".
"24276"."******"."17001400300620080052600"."******"."2"."//////".
"18623"."******"."17001400300620080073200"."******"."2"."//////".
"18777"."******"."17001400300620130020000"."******"."2"."//////".
"27892"."******"."17001400300720020016100"."******"."2"."//////".
"27673"."******"."17001400300720050007700"."******"."2"."//////".
"27893"."******"."17001400300720060024000"."******"."2"."//////".
"23752"."******"."17001400300720070017600"."******"."2"."//////".
"27646"."******"."17001400300720070052300"."******"."2"."//////".
"23765"."******"."17001400300720100070000"."******"."2"."//////".
"27709"."******"."17001400300720110011300"."******"."2"."//////".
"27848"."******"."17001400300820010066700"."******"."2"."//////".
"27851"."******"."17001400300820040064300"."******"."2"."//////".
"18998"."******"."17001400300820070005600"."******"."2"."//////".
"19003"."******"."17001400300820070034200"."******"."2"."//////".
"27659"."******"."17001400300820070058700"."******"."2"."//////".
"27855"."******"."17001400300820070063500"."******"."2"."//////".
"19015"."******"."17001400300820070067300"."******"."2"."//////".
"25503"."******"."17001400300820140007400"."******"."2"."//////".
"27866"."******"."17001400300919980005100"."******"."2"."//////".
"27870"."******"."17001400300920060032300"."******"."2"."//////".
"19508"."******"."17001400300920090010700"."******"."2"."//////".
"25614"."******"."17001400300920110015100"."******"."2"."//////".
"27752"."******"."17001400301020030073700"."******"."2"."//////".
"27755"."******"."17001400301020040023900"."******"."2"."//////".
"27756"."******"."17001400301020040044700"."******"."2"."//////".
"27758"."******"."17001400301020040072500"."******"."2"."//////".
"28111"."******"."17001400301020080043400"."******"."2"."//////".
"25950"."******"."17001400301120130028500"."******"."2"."//////".
"27913"."******"."17001400301220070029600"."******"."2"."//////".
"27931"."******"."17001400301220100010100"."******"."2"."//////".
"25859"."******"."17001400301220130012500"."******"."2"."//////".
"27976"."******"."17001400301220140047800"."******"."2"."//////";

							
		
		$cadenaradicados_2 = explode("//////",$cadenaradicados);
		$i = 0;
		$cantidadid = count($cadenaradicados_2);
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
		
		$tiporegistro = "A Despacho Masivo";
		
		$accion  = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		//--------------------------------------------------------------------------------------------
		
		$observaciondespacho = 'A DESPACHO';
		$observacion_salida	 = 'PETICION';
		
		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		//--------------------------------------------------------------------------------------------
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		$serverName     = "192.168.89.20"; 
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		while($i < $cantidadid - 1){
		
		$cadenaradicados_3 = explode("******",$cadenaradicados_2[$i]);
		
		//SQL PARA PRUEBAS
		/*$sql = ("UPDATE info1 SET des = '$observaciondespacho'
			     WHERE radicado ='$cadenaradicados_3[$i]';");*/
		
		/*$sql = ("INSERT INTO info3(idradicados) 
		         values('$cadenaradicados_3[0]');"); */
		
				
			
		$sininstancia = $cadenaradicados_3[1];
	  	$sin = substr($sininstancia, 0, 21);
		  
		//A DESPACHO DESDE LA OFICINA
		$sql = ("DECLARE @cad integer
					 
					UPDATE t103dainfoproc SET a103descacts='A Despacho', a103codiacts='30000031', a103codipads='30000031', 
					a103fechdess = convert(datetime, '2016-12-12', 121), 
					a103anotacts = 'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal'
					WHERE a103llavproc='$cadenaradicados_3[1]';
					
					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$cadenaradicados_3[1]' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
					A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
					A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
					A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
					A110RENUTERM) values('$cadenaradicados_3[1]',@cad,'$sin','00','30000031','30000031','A Despacho','N','NO','N',0,NULL,NULL,
					convert(datetime, '2016-12-12', 121),NULL,NULL,NULL,NULL,NULL,
					'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal',NULL,NULL,'S','D',
					convert(datetime, '2016-12-12', 121),'NO','NO')");
					
					
		
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			echo $conn."RADICADO".$cadenaradicados_3[1];
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
		}
		else{
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			   
					//A DESPACHO
					$this->db->exec("UPDATE ubicacion_expediente SET fecha='2016-12-12',idjuzgadodestino ='$cadenaradicados_3[2]',
					                 fechasalida='2016-12-12',fechadevolucion = NULL,idusuario = '$idusuario',
	  								 observacion_salida = '$observacion_salida' where id='$cadenaradicados_3[0]'");
									 
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$cadenaradicados_3[0]','2016-12-12 00:00:00','$observaciondespacho','$idusuario')");
									 
					
					
					//LOG	
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
					                 VALUES ('2016-12-12', '$accion','$detalle','$idusuario','$tipolog')");
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		}
		
		$i = $i + 1;
		
		}//FIN WHILE
		
  }	 
  
  	//SECRETARIA
	public function RegistrarADespacho_Masivo_Tacito(){
  

		$idusuario      = $_SESSION['idUsuario'];
		
		//$id     	    = trim($_GET['id']);
		//$radicado       = trim($_GET['radicado']);
		
		//$juzgadodestino = trim($_GET['juzgadodestino']);
		
		//$juzgadodestino = 1;
		
		//$cadenaradicados   = "16730"."//////"."16436"."//////"."19425";

		
		$cadenaradicados  = "21337"."******"."17001400300220090073000"."******"."1"."//////".
							"17386"."******"."17001400300220130012700"."******"."1"."//////".
							"28253"."******"."17001400300220140042500"."******"."1"."//////".
							"27810"."******"."17001400300319951538201"."******"."1"."//////".
							"20675"."******"."17001400300320100031300"."******"."1"."//////".
							"28706"."******"."17001400300320110029400"."******"."1"."//////".
							"25678"."******"."17001400300320110053700"."******"."1"."//////".
							"28143"."******"."17001400300420020019201"."******"."1"."//////".
							"25717"."******"."17001400300420130043500"."******"."1"."//////".
							"26627"."******"."17001400300620050047600"."******"."1"."//////".
							"27027"."******"."17001400300720010081500"."******"."1"."//////".
							"27507"."******"."17001400300720070009700"."******"."1"."//////".
							"18930"."******"."17001400300720130037300"."******"."1"."//////".
							"27517"."******"."17001400300720140026300"."******"."1"."//////".
							"26277"."******"."17001400300720140029100"."******"."1"."//////".
							"26476"."******"."17001400300720140031700"."******"."1"."//////".
							"26281"."******"."17001400300720140033100"."******"."1"."//////".
							"28900"."******"."17001400300720140050000"."******"."1"."//////".
							"27095"."******"."17001400300819980011000"."******"."1"."//////".
							"27847"."******"."17001400300820010056200"."******"."1"."//////".
							"24507"."******"."17001400300920100077300"."******"."1"."//////".
							"25796"."******"."17001400300920130040000"."******"."1"."//////".
							"26429"."******"."17001400300920140025200"."******"."1"."//////";
							
			

		$cadenaradicados_2 = explode("//////",$cadenaradicados);
		$i = 0;
		$cantidadid = count($cadenaradicados_2);
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
		
		
		$tiporegistro = "Desistimiento tacito Masivo";
		$accion  = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		//--------------------------------------------------------------------------------------------
		
		
		$observaciondespacho   = 'DESISTIMIENTO TACITO';
		$observaciondespacho_2 = 'ESTADO DE 28 DE MARZO DE 2019';
		

		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		//--------------------------------------------------------------------------------------------
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		$serverName     = "192.168.89.20"; 
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		while($i < $cantidadid - 1){
		
		$cadenaradicados_3 = explode("******",$cadenaradicados_2[$i]);
		
		//SQL PARA PRUEBAS
		/*$sql = ("UPDATE info1 SET des = '$observaciondespacho'
			     WHERE radicado ='$cadenaradicados_3[$i]';");*/
		
		/*$sql = ("INSERT INTO info3(idradicados) 
		         values('$cadenaradicados_3[0]');"); */
		
				
			
		$sininstancia = $cadenaradicados_3[1];
	  	$sin = substr($sininstancia, 0, 21);
		
					
		//PARA QUE EN SECRETRAIA (OECM) SE APLIQUE LA ACTUACION FIJE ESTADO Y EN DESPACHO LA ACTUACION Auto termina proceso por desistimiento tï¿½cito
		//EN LA TABLA t103dainfoproc ES DONDE SE ACTUALIZA LA ACTUACION TANTO DE DESPACHO COMO DE SECRETARIA
		//Y EN LA TABLA T110DRACTUPROC SE INSERTA LA ULTIMA ACTUACION DE DESPACHO
		
		//TABLA t103dainfoproc
		
		//FECHA SECRETARIA DESCRIPCION
		//a103fechdess = convert(datetime, '2016-03-15', 121),
		
		//FECHA DESPACHO DESCRIPCION
		//a103fechdesd = convert(datetime, '2016-03-15', 121), 
		
		//TABLA T110DRACTUPROC
		
		//FECHA INICIAL A110FECHINIC
		//convert(datetime, '2016-03-16', 121),
		
		//FECHA FINAL A110FECHFINA
		//convert(datetime, '2016-03-16', 121),
		
		//FECHA REGISTRO A110FECHREGI
		//convert(datetime, '2016-03-15', 121),
		
		//FECHA A110FECHPROV
		//convert(datetime, '2016-03-15', 121),
		
		//FECHA A110FECHDESA
		//convert(datetime, '2016-03-15', 121),
		
		
		//NOTA EJEMPLO: SI LAS FECHAS (a103fechdess , a103fechdesd) EN LA TABLA t103dainfoproc ES 2016-03-15 
		//LAS FECHAS INICAL Y FINAL EN T110DRACTUPROC SON 2016-03-16 
		//Y LAS OTRAS SON LAS MISMAS QUE t103dainfoproc
		
		$sql = ("DECLARE @cad integer
					 
					UPDATE t103dainfoproc SET a103descacts='Fijacion estado',a103descactd='Auto termina proceso por desistimiento tï¿½cito', 
					a103codiacts='30000031', a103codipads='30000031', 
					a103fechdess = convert(datetime, '2019-03-27', 121),
					a103fechdesd = convert(datetime, '2019-03-27', 121), 
	  				a103anotacts = 'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal'
	                WHERE a103llavproc='$cadenaradicados_3[1]'
					
					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$cadenaradicados_3[1]' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
				    A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
				    A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
				    A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
				    A110RENUTERM) 
				    values('$cadenaradicados_3[1]',@cad,'$sin','00','00000108','00000106','Fijacion estado','L','SI','C',1,
					convert(datetime, '2019-03-28', 121),
					convert(datetime, '2019-03-28', 121),
					convert(datetime, '2019-03-27', 121),
					NULL,1,'0020',NULL,
					convert(datetime, '2019-03-27', 121),
				    '',NULL,NULL,'S','D',
					convert(datetime, '2019-03-27', 121),
					'','')");
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			echo $conn."RADICADO".$cadenaradicados_3[1];
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
		}
		else{
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			  
					//DESISTIMIENTO TACITO
					$this->db->exec("UPDATE ubicacion_expediente SET fecha='2019-03-27',idjuzgadodestino ='$cadenaradicados_3[2]',
					                 fechasalida=NULL,fechadevolucion = '2019-03-27',idusuario = '$idusuario'
	  								 WHERE id='$cadenaradicados_3[0]'");
									 
					
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$cadenaradicados_3[0]','2019-03-27 00:00:00','$observaciondespacho','$idusuario')");
					
				  	$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$cadenaradicados_3[0]','2019-03-27 00:00:00','$observaciondespacho_2','$idusuario')");
					
					
					//LOG	
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
					                 VALUES ('2019-03-27', '$accion','$detalle','$idusuario','$tipolog')");
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		}
		
		$i = $i + 1;
		
		}//FIN WHILE
		
  }
  
  
  
  //Registrar Sustitucion Poder Secretaria
	public function Registrar_Sustitucion_Poder_Secretaria(){
  

		$idusuario      = $_SESSION['idUsuario'];
		
		
		/*
		$cadenaradicados  = "29193"."******"."17001400300220140049300"."******"."2"."//////".
							"29836"."******"."17001400300220150013200"."******"."2"."//////".
							"29900"."******"."17001400300220150013300"."******"."2"."//////".
							"28878"."******"."17001400300320150002300"."******"."2"."//////".
							"29938"."******"."17001400300420150011700"."******"."2"."//////".
							"30442"."******"."17001400300420150012200"."******"."2"."//////".
							"30741"."******"."17001400300420150033400"."******"."2"."//////".
							"29647"."******"."17001400300520150011400"."******"."2"."//////".
							"29648"."******"."17001400300520150011500"."******"."2"."//////".
							"30773"."******"."17001400300520150012300"."******"."2"."//////".
							"29503"."******"."17001400300620140054700"."******"."2"."//////".
							"29489"."******"."17001400300620150013600"."******"."2"."//////".
							"28906"."******"."17001400300720140071400"."******"."2"."//////".
							"30387"."******"."17001400300820150011700"."******"."2"."//////".
							"29512"."******"."17001400300820150012300"."******"."2"."//////".
							"29613"."******"."17001400301020150006200"."******"."2"."//////".
							"30223"."******"."17001400301020150012900"."******"."2"."//////".
							"31487"."******"."17001400301020150046800"."******"."2"."//////".
							"30765"."******"."17001400301120150000300"."******"."2"."//////".
							"31447"."******"."17001400301120150000500"."******"."2"."//////".
							"32648"."******"."17001400301120150050800"."******"."2"."//////";*/
							
			

		$cadenaradicados_2 = explode("//////",$cadenaradicados);
		$i = 0;
		$cantidadid = count($cadenaradicados_2);
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
			
		$tiporegistro = "Auto resuelve sustitucion poder Masivo";
		$accion  = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		//--------------------------------------------------------------------------------------------
		
		
		$observaciondespacho   = 'Auto resuelve sustitucion poder';
		$observaciondespacho_2 = 'ESTADO DE 19 DE SEPTIEMBRE DE 2017';
		
		$OBST110 = "Actuaciï¿½n registrada el ".$fechalog." a las: ".$horalog;
		

		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		//--------------------------------------------------------------------------------------------
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		$serverName     = "192.168.89.20"; 
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		while($i < $cantidadid - 1){
		
		$cadenaradicados_3 = explode("******",$cadenaradicados_2[$i]);
		
		//SQL PARA PRUEBAS
		/*$sql = ("UPDATE info1 SET des = '$observaciondespacho'
			     WHERE radicado ='$cadenaradicados_3[$i]';");*/
		
		/*$sql = ("INSERT INTO info3(idradicados) 
		         values('$cadenaradicados_3[0]');"); */
		
				
			
		$sininstancia = $cadenaradicados_3[1];
	  	$sin = substr($sininstancia, 0, 21);
		
					
		//PARA QUE EN SECRETRAIA (OECM) SE APLIQUE LA ACTUACION FIJE ESTADO Y EN DESPACHO LA ACTUACION Auto termina proceso por desistimiento tï¿½cito
		//EN LA TABLA t103dainfoproc ES DONDE SE ACTUALIZA LA ACTUACION TANTO DE DESPACHO COMO DE SECRETARIA
		//Y EN LA TABLA T110DRACTUPROC SE INSERTA LA ULTIMA ACTUACION DE DESPACHO
		
		//TABLA t103dainfoproc
		
		//FECHA SECRETARIA DESCRIPCION
		//a103fechdess = convert(datetime, '2016-03-15', 121),
		
		//FECHA DESPACHO DESCRIPCION
		//a103fechdesd = convert(datetime, '2016-03-15', 121), 
		
		//TABLA T110DRACTUPROC
		
		//FECHA INICIAL A110FECHINIC
		//convert(datetime, '2016-03-16', 121),
		
		//FECHA FINAL A110FECHFINA
		//convert(datetime, '2016-03-16', 121),
		
		//FECHA REGISTRO A110FECHREGI
		//convert(datetime, '2016-03-15', 121),
		
		//FECHA A110FECHPROV
		//convert(datetime, '2016-03-15', 121),
		
		//FECHA A110FECHDESA
		//convert(datetime, '2016-03-15', 121),
		
		
		//NOTA EJEMPLO: SI LAS FECHAS (a103fechdess , a103fechdesd) EN LA TABLA t103dainfoproc ES 2016-03-15 
		//LAS FECHAS INICAL Y FINAL EN T110DRACTUPROC SON 2016-03-16 
		//Y LAS OTRAS SON LAS MISMAS QUE t103dainfoproc
		
		$sql = ("DECLARE @cad integer
					 
					UPDATE t103dainfoproc SET a103descactd='Auto resuelve sustituciï¿½n poder', 
					a103codiactd='30020081', a103codipadd='30023118', 
					a103fechdesd = convert(datetime, '2017-09-18', 121)
	                WHERE a103llavproc='$cadenaradicados_3[1]'
					
					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$cadenaradicados_3[1]' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
				    A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
				    A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
				    A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
				    A110RENUTERM) 
				    values('$cadenaradicados_3[1]',@cad,'$sin','00','00000108','00000106','Fijacion estado','L','SI','C',1,
					convert(datetime, '2017-09-19', 121),
					convert(datetime, '2017-09-19', 121),
					convert(datetime, '2017-09-18', 121),
					NULL,NULL,NULL,NULL,
					NULL,
				    '$OBST110',NULL,NULL,'S','D',
					convert(datetime, '2017-09-18', 121),
					NULL,NULL)");
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			echo $conn."RADICADO".$cadenaradicados_3[1];
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
		}
		else{
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			  
					//Auto resuelve sustituciï¿½n poder
			
					$this->db->exec("UPDATE ubicacion_expediente SET fecha='2017-09-18',idjuzgadodestino ='$cadenaradicados_3[2]',
					                 fechasalida=NULL,fechadevolucion = '2017-09-18',idusuario = '$idusuario'
	  								 WHERE id='$cadenaradicados_3[0]'");
									 
					
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                   VALUES('$cadenaradicados_3[0]','2017-09-18 00:00:00','$observaciondespacho','$idusuario')");
			
			
				  	$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$cadenaradicados_3[0]','2017-09-18 00:00:00','$observaciondespacho_2','$idusuario')");
					
					
					//LOG	
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
					                 VALUES ('2017-09-18', '$accion','$detalle','$idusuario','$tipolog')");
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		}
		
		$i = $i + 1;
		
		}//FIN WHILE
		
  }
  
  
  
  //DESPACHO
  public function RegistrarADespacho_Masivo_Tacito_Despacho(){
  

		$idusuario      = $_SESSION['idUsuario'];
		
		
		$cadenaradicados  = "21337"."******"."17001400300220090073000"."******"."1"."//////".
							"17386"."******"."17001400300220130012700"."******"."1"."//////".
							"28253"."******"."17001400300220140042500"."******"."1"."//////".
							"27810"."******"."17001400300319951538201"."******"."1"."//////".
							"20675"."******"."17001400300320100031300"."******"."1"."//////".
							"28706"."******"."17001400300320110029400"."******"."1"."//////".
							"25678"."******"."17001400300320110053700"."******"."1"."//////".
							"28143"."******"."17001400300420020019201"."******"."1"."//////".
							"25717"."******"."17001400300420130043500"."******"."1"."//////".
							"26627"."******"."17001400300620050047600"."******"."1"."//////".
							"27027"."******"."17001400300720010081500"."******"."1"."//////".
							"27507"."******"."17001400300720070009700"."******"."1"."//////".
							"18930"."******"."17001400300720130037300"."******"."1"."//////".
							"27517"."******"."17001400300720140026300"."******"."1"."//////".
							"26277"."******"."17001400300720140029100"."******"."1"."//////".
							"26476"."******"."17001400300720140031700"."******"."1"."//////".
							"26281"."******"."17001400300720140033100"."******"."1"."//////".
							"28900"."******"."17001400300720140050000"."******"."1"."//////".
							"27095"."******"."17001400300819980011000"."******"."1"."//////".
							"27847"."******"."17001400300820010056200"."******"."1"."//////".
							"24507"."******"."17001400300920100077300"."******"."1"."//////".
							"25796"."******"."17001400300920130040000"."******"."1"."//////".
							"26429"."******"."17001400300920140025200"."******"."1"."//////";
;

							
		$cadenaradicados_2 = explode("//////",$cadenaradicados);
		$i = 0;
		$cantidadid = count($cadenaradicados_2);
		
		//--------------------------------------------------------------------------------------------
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		$serverName     = "192.168.89.20"; 
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		while($i < $cantidadid - 1){
		
		$cadenaradicados_3 = explode("******",$cadenaradicados_2[$i]);
		
		//SQL PARA PRUEBAS
		/*$sql = ("UPDATE info1 SET des = '$observaciondespacho'
			     WHERE radicado ='$cadenaradicados_3[$i]';");*/
		
		/*$sql = ("INSERT INTO info3(idradicados) 
		         values('$cadenaradicados_3[0]');"); */
		
				
			
		$sininstancia = $cadenaradicados_3[1];
	  	$sin = substr($sininstancia, 0, 21);
		
					
		
		
		$sql = ("DECLARE @cad integer
					 

					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$cadenaradicados_3[1]' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
				    A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
				    A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
				    A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
				    A110RENUTERM) 
				    values('$cadenaradicados_3[1]',@cad,'$sin','00','30023388','30023138','Auto termina proceso por desistimiento tï¿½cito','N','NO','N',NULL,
					NULL,
					NULL,
					convert(datetime, '2019-03-27', 121),
					NULL,1,'0020','0410',
					convert(datetime, '2019-03-27', 121),
				    NULL,NULL,NULL,'D','P',
					convert(datetime, '2019-03-27', 121),
					NULL,NULL)");
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			echo $conn."RADICADO".$cadenaradicados_3[1];
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
		}
		else{
		
			try {  
			

				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		}
		
		$i = $i + 1;
		
		}//FIN WHILE
		
  }
  
  
  //Registrar sustitucion poder despacho
  public function Registrar_Sustitucion_Poder_Despacho(){
  

		$idusuario      = $_SESSION['idUsuario'];
		
		
		
		
		$cadenaradicados  = "29193"."******"."17001400300220140049300"."******"."2"."//////".
							"29836"."******"."17001400300220150013200"."******"."2"."//////".
							"29900"."******"."17001400300220150013300"."******"."2"."//////".
							"28878"."******"."17001400300320150002300"."******"."2"."//////".
							"29938"."******"."17001400300420150011700"."******"."2"."//////".
							"30442"."******"."17001400300420150012200"."******"."2"."//////".
							"30741"."******"."17001400300420150033400"."******"."2"."//////".
							"29647"."******"."17001400300520150011400"."******"."2"."//////".
							"29648"."******"."17001400300520150011500"."******"."2"."//////".
							"30773"."******"."17001400300520150012300"."******"."2"."//////".
							"29503"."******"."17001400300620140054700"."******"."2"."//////".
							"29489"."******"."17001400300620150013600"."******"."2"."//////".
							"28906"."******"."17001400300720140071400"."******"."2"."//////".
							"30387"."******"."17001400300820150011700"."******"."2"."//////".
							"29512"."******"."17001400300820150012300"."******"."2"."//////".
							"29613"."******"."17001400301020150006200"."******"."2"."//////".
							"30223"."******"."17001400301020150012900"."******"."2"."//////".
							"31487"."******"."17001400301020150046800"."******"."2"."//////".
							"30765"."******"."17001400301120150000300"."******"."2"."//////".
							"31447"."******"."17001400301120150000500"."******"."2"."//////".
							"32648"."******"."17001400301120150050800"."******"."2"."//////";

							
		$cadenaradicados_2 = explode("//////",$cadenaradicados);
		$i = 0;
		$cantidadid = count($cadenaradicados_2);
		
		//--------------------------------------------------------------------------------------------
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		$serverName     = "192.168.89.20"; 
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		while($i < $cantidadid - 1){
		
		$cadenaradicados_3 = explode("******",$cadenaradicados_2[$i]);
		
		//SQL PARA PRUEBAS
		/*$sql = ("UPDATE info1 SET des = '$observaciondespacho'
			     WHERE radicado ='$cadenaradicados_3[$i]';");*/
		
		/*$sql = ("INSERT INTO info3(idradicados) 
		         values('$cadenaradicados_3[0]');"); */
		
				
			
		$sininstancia = $cadenaradicados_3[1];
	  	$sin = substr($sininstancia, 0, 21);
		
					
		
		
		$sql = ("DECLARE @cad integer
					 

					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$cadenaradicados_3[1]' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
				    A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
				    A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
				    A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
				    A110RENUTERM) 
				    values('$cadenaradicados_3[1]',@cad,'$sin','00','30020081','30023023','Auto resuelve sustituciï¿½n poder','N','NO','N',NULL,
					NULL,
					NULL,
					convert(datetime, '2017-09-18', 121),
					NULL,NULL,'0021',NULL,
					convert(datetime, '2017-09-18', 121),
				    NULL,NULL,NULL,'D','P',
					convert(datetime, '2017-09-18', 121),
					NULL,NULL)");
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			echo $conn."RADICADO".$cadenaradicados_3[1];
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
		}
		else{
		
			try {  
			

				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		}
		
		$i = $i + 1;
		
		}//FIN WHILE
		
  }
  
  
  public function Registrar_Estado_Masivo(){
  

		$idusuario      = $_SESSION['idUsuario'];
		
		//$id     	    = trim($_GET['id']);
		//$radicado       = trim($_GET['radicado']);
		
		//$juzgadodestino = trim($_GET['juzgadodestino']);
		
		//$juzgadodestino = 1;
		
		//$cadenaradicados   = "16730"."//////"."16436"."//////"."19425";
		
		
		
		$cadenaradicados = "21133"."******"."17001400300120080007000"."******"."1"."//////".
"26497"."******"."17001400300220140007500"."******"."1"."//////".
"26652"."******"."17001400300220140032000"."******"."1"."//////".
"26264"."******"."17001400300320140024700"."******"."1"."//////".
"26265"."******"."17001400300320140028600"."******"."1"."//////".
"28472"."******"."17001400300320140057800"."******"."1"."//////".
"32770"."******"."17001400300320160029600"."******"."1"."//////".
"25224"."******"."17001400300420140007300"."******"."1"."//////".
"28598"."******"."17001400300420140029400"."******"."1"."//////".
"26790"."******"."17001400300420140033800"."******"."1"."//////".
"32606"."******"."17001400300420150067200"."******"."1"."//////".
"26574"."******"."17001400300520140030200"."******"."1"."//////".
"33134"."******"."17001400300520160006400"."******"."1"."//////".
"28346"."******"."17001400300620140061700"."******"."1"."//////".
"24853"."******"."17001400300720090092200"."******"."1"."//////".
"25843"."******"."17001400300720120044800"."******"."1"."//////".
"18925"."******"."17001400300720130035300"."******"."1"."//////".
"18935"."******"."17001400300720130040300"."******"."1"."//////".
"29204"."******"."17001400300720140005500"."******"."1"."//////".
"26593"."******"."17001400300720140025600"."******"."1"."//////".
"26476"."******"."17001400300720140031700"."******"."1"."//////".
"26281"."******"."17001400300720140033100"."******"."1"."//////".
"29045"."******"."17001400300720140035600"."******"."1"."//////".
"29604"."******"."17001400300720150020200"."******"."1"."//////".
"32947"."******"."17001400300720150028500"."******"."1"."//////".
"30037"."******"."17001400300720150035900"."******"."1"."//////".
"19368"."******"."17001400300820130033400"."******"."1"."//////".
"29279"."******"."17001400300820140058300"."******"."1"."//////".
"29255"."******"."17001400300820140058400"."******"."1"."//////".
"29408"."******"."17001400300820150011500"."******"."1"."//////".
"19781"."******"."17001400300920130039100"."******"."1"."//////".
"27567"."******"."17001400300920140031900"."******"."1"."//////".
"29892"."******"."17001400300920140052900"."******"."1"."//////".
"31615"."******"."17001400300920150046000"."******"."1"."//////".
"27763"."******"."17001400301020080075700"."******"."1"."//////".
"27245"."******"."17001400301020140034000"."******"."1"."//////".
"27791"."******"."17001400301020140059500"."******"."1"."//////".
"30222"."******"."17001400301020150021100"."******"."1"."//////".
"32817"."******"."17001400301020160010600"."******"."1"."//////".
"32829"."******"."17001400301020160034600"."******"."1"."//////".
"16523"."******"."17001400301120120023100"."******"."1"."//////".
"25841"."******"."17001400301120140023400"."******"."1"."//////".
"30941"."******"."17001400301120150060500"."******"."1"."//////".
"32936"."******"."17001400301120160014100"."******"."1"."//////".
"27942"."******"."17001400301220130058400"."******"."1"."//////".
"25270"."******"."17001400301220140006800"."******"."1"."//////".
"33099"."******"."17001400301220160003300"."******"."1"."//////".
"32364"."******"."17001400301220160027000"."******"."1"."//////";
							
		
		
		//$cadenaradicados  = "17013"."******"."17001400300220050049600"."******"."1"."//////";
							
			
		
		$cadenaradicados_2 = explode("//////",$cadenaradicados);
		$i = 0;
		$cantidadid = count($cadenaradicados_2);
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
		
		$tiporegistro = "ESTADO DE 21 DE OCTUBRE DE 2016 MASIVO";
		$accion  = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		//--------------------------------------------------------------------------------------------
		
		$observaciondespacho = 'ESTADO DE 21 DE OCTUBRE DE 2016';
		//$observacion_salida	 = 'PASA A DESISTIMIENTO TACITO';
		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		//--------------------------------------------------------------------------------------------
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		/*$serverName     = "192.168.89.20"; 
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}*/
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		while($i < $cantidadid - 1){
		
		$cadenaradicados_3 = explode("******",$cadenaradicados_2[$i]);
		
		//SQL PARA PRUEBAS
		/*$sql = ("UPDATE info1 SET des = '$observaciondespacho'
			     WHERE radicado ='$cadenaradicados_3[$i]';");*/
		
		/*$sql = ("INSERT INTO info3(idradicados) 
		         values('$cadenaradicados_3[0]');"); */
		
				
			
		//$sininstancia = $cadenaradicados_3[1];
	  	//$sin = substr($sininstancia, 0, 21);
		  
		//A DESPACHO DESDE LA OFICINA
		/*$sql = ("DECLARE @cad integer
					 
					UPDATE t103dainfoproc SET a103descacts='A Despacho', a103codiacts='30000031', a103codipads='30000031', a103fechdess = '2015-12-03 00:00:00.000', 
					a103anotacts = 'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal'
					WHERE a103llavproc='$cadenaradicados_3[1]';
					
					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$cadenaradicados_3[1]' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
					A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
					A110RENUTERM) values('$cadenaradicados_3[1]',@cad,'$sin','00','30000031','30000031','A Despacho','N','NO','N',0,NULL,NULL,'2015-12-03 00:00:00.000',NULL,NULL,NULL,NULL,NULL,
					'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal',NULL,NULL,'S','D','2015-12-03 00:00:00.000','NO','NO')");*/
					
					
		//PARA QUE EN SECRETRAIA SE FIJE ESTADO Y EN DESPACHO Auto termina proceso por desistimiento tï¿½cito
		/*$sql = ("DECLARE @cad integer
					 
					UPDATE t103dainfoproc SET a103descacts='Fijacion estado',a103descactd='Auto termina proceso por desistimiento tï¿½cito', a103codiacts='30000031', a103codipads='30000031', a103fechdess = convert(datetime, '2016-02-24', 121),a103fechdesd = convert(datetime, '2016-02-24', 121), 
	  				a103anotacts = 'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal'
	                WHERE a103llavproc='$cadenaradicados_3[1]'
					
					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$cadenaradicados_3[1]' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
				    A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
				    A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
				    A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
				    A110RENUTERM) 
				    values('$cadenaradicados_3[1]',@cad,'$sin','00','00000108','00000106','Fijacion estado','L','SI','C',1,convert(datetime, '2016-02-25', 121),convert(datetime, '2016-02-25', 121),convert(datetime, '2016-02-24', 121),NULL,1,'0020',NULL,convert(datetime, '2016-02-24', 121),
				    '',NULL,NULL,'S','D',convert(datetime, '2016-02-24', 121),'','')");
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );*/
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		/*if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}*/
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			//sqlsrv_rollback( $conn );
			//echo $conn;
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
		}
		else{
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			   
					//A DESPACHO
					
									 
					$this->db->exec("UPDATE ubicacion_expediente SET fecha='2016-10-20',fechasalida = NULL,
					                 fechadevolucion = '2016-10-20',
					                 idusuario = '$idusuario'
	  								 WHERE id='$cadenaradicados_3[0]'");
					
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$cadenaradicados_3[0]','2016-10-20 00:00:00','$observaciondespacho','$idusuario')");
						
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
					                 VALUES ('2016-10-20', '$accion','$detalle','$idusuario','$tipolog')");
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				//sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				//sqlsrv_rollback( $conn );
				
				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		}
		
		$i = $i + 1;
		
		}//FIN WHILE
		
  }

  
  
  
  
  public function RegistrarTermino(){
  

		$idusuario    = $_SESSION['idUsuario'];
		
		$id     	   = trim($_GET['id']);
		$radicado      = trim($_GET['radicado']);
		
		$fechatermino = trim($_GET['fechatermino']);
		
		$obst         = trim($_GET['obst']);
		
	
		$observacion = "TERMINOS"." FECHA: ".$fechatermino.", ".$obst;

		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
			
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
			
		$tiporegistro = "TERMINOS";
		$accion  = "Registra ".$tiporegistro." En el Sistema (SIEPRO)"." ID: ".$id."RADICADO: ".$radicado." FECHA TERMINO: ".$fechatermino;
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
	
		//--------------------------------------------------------------------------------------------
		
		$error_transaccion = 0; //variable para detectar error
		

		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			  
					$this->db->exec("UPDATE ubicacion_expediente SET fecha='$fechalog',idusuario = '$idusuario',
					                 fecha_terminos = '$fechatermino',termino_revisado = '',observacion_termino = '$obst' 
									 where id='$id'");
						
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$id','$fecharegistro','$observacion','$idusuario')");
						
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
					                 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
					
					
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				

				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		
		
  }
  
  public function termino_revisado(){
  

		$idusuario    = $_SESSION['idUsuario'];
		
		$id     	   = trim($_GET['id']);
		$radicado	   = trim($_GET['radicado']);
	
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
			
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
			
		$tiporegistro = "TERMINO REVISADO";
		$accion  = "Aplica ".$tiporegistro." En el Sistema (SIEPRO)"." ID: ".$id."RADICADO: ".$radicado;
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
	
		//--------------------------------------------------------------------------------------------
		
		$error_transaccion = 0; //variable para detectar error
		

		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			  
					$this->db->exec("UPDATE ubicacion_expediente SET fecha='$fechalog',idusuario = '$idusuario',
					                 termino_revisado = 'SI' WHERE id='$id'");
						
					//$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) VALUES('$id','$fecharegistro','$observacion','$idusuario')");
						
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
					                 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
					
					
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				

				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		
		
  }
  
  
  public function termino_revisado_todos(){
  

		$idusuario    = $_SESSION['idUsuario'];
		
		$id     	   = trim($_GET['id']);
		//$ids           = trim($id, ',');
		$ids           = explode(",",$id);
		$longi         = count($ids);
		
		$radicado	   = trim($_GET['radicado']);
	
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
			
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
			
		$tiporegistro = "TERMINO REVISADO";
		$accion  = "Aplica ".$tiporegistro." En el Sistema (SIEPRO)"." ID: ".$id."RADICADO: ".$radicado;
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
	
		//--------------------------------------------------------------------------------------------
		
		$error_transaccion = 0; //variable para detectar error
		

		//--------------------------------------------------------------------------------------------------------------------------------------------

	
			$i = 0;
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
					while($i < $longi){
			  
						$this->db->exec("UPDATE ubicacion_expediente SET fecha='$fechalog',idusuario = '$idusuario',
					                 	 termino_revisado = 'SI' WHERE id = '$ids[$i]'");
					
						$i = $i + 1;
					}	
					//$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) VALUES('$id','$fecharegistro','$observacion','$idusuario')");
						
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
					                 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
					
					
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				

				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		
		
  }
  
	public function listar_Incorpora_Expediente(){
		
		
		$iradicado				= $_GET['nombre6'];
		$radicado				= $_GET['nombre6'];
		$fechaei				= $_GET['nombre10']; 
		$fechaef				= $_GET['nombre11']; 
		
		
		//Se Incorpora Expediente al Proceso
		$siep				    = $_GET['nombre13'];
		 
		$f1=$f2=$f3=$f4=$f5="";
		
		
		if($fechai!='')
		{
		$fechai = $fechai.' 00:00:00';
		$fechaf = $fechaf.' 23:59:59';
		$f1=" and(corr.fecha_registro >= '$fechai' and corr.fecha_registro<='$fechaf')";
		}
		if($fechaei!='')
		{
		$fechaei = $fechaei.' 00:00:00';
		$fechaef = $fechaef.' 23:59:59';
		$f2=" and (corr.fecha_entrega >= '$fechaei' and corr.fecha_entrega<='$fechaef')";
		}
		if($idjuzgadodestino!='')
		{
		$f3=" and corr.idjuzgadodestino = '$idjuzgadodestino'";
		}
		if($existente!='')
		{
		$f4=" and corr.existe = '$existente'";
		}
		//Se Incorpora Expediente al Proceso
		if($siep != '' && ($siep == 'si' || $siep == 'no'))
		{
			if($siep == 'si'){$siep = 1; $f5 = " and corr.incorporaexpediente = '$siep'";}
			else{$f5 = " and corr.incorporaexpediente IS NULL";}
		
		}
		
		
		 $listar = $this->db->prepare("select corr.id, corr.fecha_registro,corr.radicado,corr.peticionario,corr.tipo_documento,corr.tiene_expediente,
		juz.nombre as juzgado,juzdest.nombre as destino,corr.fecha_entrega,sol.nombre as solicitud,usu.empleado, corr.folios,sol.idprioridad, sol.id as idsol,corr.generado, corr.existe     from correspondencia corr 
		inner join pa_juzgado juz on (corr.idjuzgado=juz.id)
		left join juzgado_destino juzdest on (corr.idjuzgadodestino=juzdest.id)
		inner join pa_solicitud sol on (corr.idsolicitud=sol.id)
		inner join pa_usuario usu on (corr.idusuario=usu.id)
		where corr.tipo_documento like '%$tipo_documento%' and sol.id like '%$solicitud%' and corr.idjuzgado like '%$idjuzgado%' and corr.radicado like '%$radicado%' and corr.peticionario like '%$peticionario%' 
		 and corr.idusuario like '%$idusuario%'".$f1.$f2.$f3.$f4.$f5." order by corr.radicado ");
			  $listar->execute();
			  
			  return $listar;
	
	}
	
	public function get_incorporar_memorial(){
	
	
		$idusuario = $_SESSION['idUsuario'];
		
		$dato_1    = trim($_GET['dato_1']);
		$dato_2    = trim($_GET['dato_2']);
		$dato_3    = trim($_GET['dato_3']);
		
		$listar    = $this->db->prepare("SELECT
											corr.id,corr.fecha_registro,corr.radicado,corr.peticionario,
											corr.tipo_documento,juz2.nombre AS juzorigen,juzdest2.nombre AS juzdestino,corr.fecha_entrega,
											sol.nombre AS solicitud,usu.empleado,corr.folios,corr.tiene_expediente
											FROM (((((ubicacion_expediente ubi LEFT JOIN correspondencia corr ON ubi.radicado = corr.radicado)
											INNER JOIN pa_juzgado juz2 ON corr.idjuzgado = juz2.id)
											LEFT JOIN juzgado_destino juzdest2 ON corr.idjuzgadodestino = juzdest2.id)
											INNER JOIN pa_solicitud sol ON corr.idsolicitud = sol.id)
											INNER JOIN pa_usuario usu ON corr.idusuario = usu.id)
											WHERE ubi.radicado = '$dato_1' 
											AND (corr.fecha_entrega >= '$dato_2' AND corr.fecha_entrega <= '$dato_3')");
		
		

  		$listar->execute();

  		return $listar;
	
  	}
	
	
	public function registrar_incorpora_memorial(){
	
		
		//SE OBTIENEN LOS DATOS
		$idusuario   = $_SESSION['idUsuario'];
		
		//$idradicado     = trim($_POST['idradicado']);
		$radicado       = trim($_POST['radicado']);
		$datospartes    = trim($_POST['datospartes']);
		//$ordenadooficio = trim($_POST['ordenadooficio']);
		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		$datosidsr = array();
		
		
		//OBTENEMOS DEL RADICADO 170014003 006 19931018000 
		//CLASE JUZGADO 4003, DEPARTAMENTO 17, MUNICIPIO 17001
		/*$idclasejuzgado = substr($radicadox, 5, 4);
		$iddepartamento = substr($radicadox, 1, 2);
		$idmunicipio    = substr($radicadox, 1, 5);*/
		

		//DATOS PARA EL REGISTRO DEL LOG
		
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		
		$tiporegistro = "Incopora Memorial";
		
		$accion  = $tiporegistro." En el Sistema (SIEPRO), PROCESO: ".$radicado;
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		
		
		
		try {  
		
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
			
			//EMPIEZA LA TRANSACCION
		   	$this->db->beginTransaction();
			
		   		 
				$this->db->exec("INSERT INTO log (fecha,accion,detalle,idusuario,idtipolog) VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')"); 
				 
				 
				//******75088165//////Jorge Andres Valencia//////Cr 21 # 46 A 82//////8855934//////1-DEMANDANTE//////17-Caldas//////17001-MANIZALES******
				//75095585//////Andres Grajales//////Cr 213 # 748 B 434//////8875632//////1-DEMANDANTE//////13-Bolivar//////13001-CARTAGENA
		
				//1 EXPLODE
				$datospartes_1 = explode("******",$datospartes); 
				$longitud_1    = count($datospartes_1);
				$i             = 1;
				
				while($i < $longitud_1){
					
					//2 EXPLODE
					$datospartes_2 = explode("//////",$datospartes_1[$i]);
					
					
					$idmemorial     = $datospartes_2[0];
					
					//ADICIONADO EL 7 DE ABRIL 2021
					//PARA CAPTURAR LA FECHA DE CREACION Y AL CREAR LA OBSEVACION EN detalle_correspondencia
					//SE VISUALIZE ESTA FECHA Y AL CARGAR DICHO MEMORIAL AL EXPEDIENTE DIGITAL
					//SE SEPA LA FECHA DE CREACION
					$datos_MEMOX     = $modelo->get_fechacreacion_MEMOX($idmemorial);
					$filamemo        = $datos_MEMOX->fetch();
					$fecha_creacionM = $filamemo[fecha_creacion];
					
					$radi       = $datospartes_2[1];
					$incorpora  = 1;
					
					//$obser      = utf8_decode($datospartes_2[2]).", ID MEMORIAL: ".$idmemorial;
					if ( !empty($fecha_creacionM) ) {
					
						//SE QUITA " FECHA CREACION: ".$fecha_creacionM; YA QUE LOS MEMORIALES A LOS PROCESOS
						//NO DIGITALIZADOS EL MEMORIAL TIENE UN SELLO DE RECIBIDO CON FECHA Y HORA
						//$obser      = utf8_decode($datospartes_2[2]).", ID MEMORIAL: ".$idmemorial." FECHA CREACION: ".$fecha_creacionM;
						$obser      = utf8_decode($datospartes_2[2]).", ID MEMORIAL: ".$idmemorial;
					}
					else{
					
						$obser      = utf8_decode($datospartes_2[2]).", ID MEMORIAL: ".$idmemorial;
					}
					
					$idradicado = $datospartes_2[3];
					
					//PARA DETERMINAR SI EL MEMORIAL YA FUE INCORPORADO Y NO CAMBIAR LA FECHA DE INCORPORACION
					//Y NO VOLVER A CREAR UNA OBSERVACION EN LA TABLA detalle_correspondencia
					$incorporado = $datospartes_2[4];
					
					$a_despacho  = $datospartes_2[5];
					
					//SE CIERRA EL IF Y ELSE, YA QUE UN PROCESO
					//SE LE PUEDEN INCORPORAR DOS MEMORIALES
					if($incorporado != 1){
									 
					
						$this->db->exec("UPDATE correspondencia SET incorporaexpediente = '$incorpora',fecha_incorpora = '$fechalog',
										 idusuario = '$idusuario'
										 WHERE id = '$idmemorial'");
										 
					}
					
					//PARA QUE NO SE REPITA LA OBSERVACION EN detalle_correspondencia DE UN PROCESO
					/*if (in_array($idradicado, $datosidsr)) {
						
							$banderaid = 0;
					}
					else{
							
						$datosidsr[] = $idradicado;*/
						
						//NO VA ADESPACHO
						if($a_despacho == 0){
							
							$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,id_memorial,idusuario) 
											 VALUES('$idradicado','$fecharegistro','$obser','$idmemorial','$idusuario')"); 
						
						}
						//SI VA A DESPACHO
						else{
						
							$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,estadoobs,id_memorial,a_despacho,idusuario) 
											 VALUES('$idradicado','$fecharegistro','$obser',0,'$idmemorial','$a_despacho','$idusuario')");
						
						}
						
					//}
						
						
	

					$i = $i + 1;
					
				
				}//FIN while($i < $longitud_1){
								 
								 
			
			//SE TERMINA LA TRANSACCION  
		  	$this->db->commit();
			
			//echo $datospartes;
			print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=13"</script>';
		  
		} 
		catch (Exception $e) {
		
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();
		  	echo "Fallo: " . $e->getMessage();
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=13b"</script>';*/
		}
		
		
  	}
	
	public function registrar_incorpora_memorialANTERIOR(){
	
		
		//SE OBTIENEN LOS DATOS
		$idusuario   = $_SESSION['idUsuario'];
		
		//$idradicado     = trim($_POST['idradicado']);
		$radicado       = trim($_POST['radicado']);
		$datospartes    = trim($_POST['datospartes']);
		//$ordenadooficio = trim($_POST['ordenadooficio']);
		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		$datosidsr = array();
		
		
		//OBTENEMOS DEL RADICADO 170014003 006 19931018000 
		//CLASE JUZGADO 4003, DEPARTAMENTO 17, MUNICIPIO 17001
		/*$idclasejuzgado = substr($radicadox, 5, 4);
		$iddepartamento = substr($radicadox, 1, 2);
		$idmunicipio    = substr($radicadox, 1, 5);*/
		

		//DATOS PARA EL REGISTRO DEL LOG
		
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		
		$tiporegistro = "Incopora Memorial";
		
		$accion  = $tiporegistro." En el Sistema (SIEPRO), PROCESO: ".$radicado;
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		
		
		
		try {  
		
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
			
			//EMPIEZA LA TRANSACCION
		   	$this->db->beginTransaction();
			
		   		 
				$this->db->exec("INSERT INTO log (fecha,accion,detalle,idusuario,idtipolog) VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')"); 
				 
				 
				//******75088165//////Jorge Andres Valencia//////Cr 21 # 46 A 82//////8855934//////1-DEMANDANTE//////17-Caldas//////17001-MANIZALES******
				//75095585//////Andres Grajales//////Cr 213 # 748 B 434//////8875632//////1-DEMANDANTE//////13-Bolivar//////13001-CARTAGENA
		
				//1 EXPLODE
				$datospartes_1 = explode("******",$datospartes); 
				$longitud_1    = count($datospartes_1);
				$i             = 1;
				
				while($i < $longitud_1){
					
					//2 EXPLODE
					$datospartes_2 = explode("//////",$datospartes_1[$i]);
					
					
					$idmemorial = $datospartes_2[0];
					$radi       = $datospartes_2[1];
					$incorpora  = 1;
					$obser      = utf8_decode($datospartes_2[2]).", ID MEMORIAL: ".$idmemorial;
					$idradicado = $datospartes_2[3];
					
					//PARA DETERMINAR SI EL MEMORIAL YA FUE INCORPORADO Y NO CAMBIAR LA FECHA DE INCORPORACION
					//Y NO VOLVER A CREAR UNA OBSERVACION EN LA TABLA detalle_correspondencia
					$incorporado = $datospartes_2[4];
					
					$a_despacho  = $datospartes_2[5];
					
					//SE CIERRA EL IF Y ELSE, YA QUE UN PROCESO
					//SE LE PUEDEN INCORPORAR DOS MEMORIALES
					if($incorporado != 1){
									 
					
						/*$this->db->exec("UPDATE correspondencia SET incorporaexpediente = '$incorpora',fecha_incorpora = '$fechalog',
										 idusuario = '$idusuario'
										 WHERE id = '$idmemorial'");*/
										 
						//PARA QUE NO ACTUALICE EL USUARIO QUE RADICA EL MEMORIAL
						$this->db->exec("UPDATE correspondencia SET 
						
											 incorporaexpediente = '$incorpora',
											 fecha_incorpora     = '$fechalog'
											 
										  WHERE id = '$idmemorial'");				 
										 
					}
					
					//PARA QUE NO SE REPITA LA OBSERVACION EN detalle_correspondencia DE UN PROCESO
					/*if (in_array($idradicado, $datosidsr)) {
						
							$banderaid = 0;
					}
					else{
							
						$datosidsr[] = $idradicado;*/
						
						//NO VA ADESPACHO
						if($a_despacho == 0){
							
							$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,id_memorial,idusuario) 
											 VALUES('$idradicado','$fecharegistro','$obser','$idmemorial','$idusuario')"); 
						
						}
						//SI VA A DESPACHO
						else{
						
							$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,estadoobs,id_memorial,a_despacho,idusuario) 
											 VALUES('$idradicado','$fecharegistro','$obser',0,'$idmemorial','$a_despacho','$idusuario')");
						
						}
						
					//}
						
						
	

					$i = $i + 1;
					
				
				}//FIN while($i < $longitud_1){
								 
								 
			
			//SE TERMINA LA TRANSACCION  
		  	$this->db->commit();
			
			//echo $datospartes;
			print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=13"</script>';
		  
		} 
		catch (Exception $e) {
		
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();
		  	echo "Fallo: " . $e->getMessage();
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=13b"</script>';*/
		}
		
		
  	}
	
	public function registrar_expediente_memorial_incorporado(){
	
		
		//SE OBTIENEN LOS DATOS
		$idusuario   = $_SESSION['idUsuario'];
		
		$idradicado     = trim($_POST['idradicado']);
		$radicado       = trim($_POST['radicado']);
		$datospartes    = trim($_POST['datospartes']);
		//$ordenadooficio = trim($_POST['ordenadooficio']);
		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		
				
		//OBTENEMOS DEL RADICADO 170014003 006 19931018000 
		//CLASE JUZGADO 4003, DEPARTAMENTO 17, MUNICIPIO 17001
		/*$idclasejuzgado = substr($radicadox, 5, 4);
		$iddepartamento = substr($radicadox, 1, 2);
		$idmunicipio    = substr($radicadox, 1, 5);*/
		

		//DATOS PARA EL REGISTRO DEL LOG
		
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		
		$tiporegistro = "Se Realiza Expediente con Memorial(les) Incorporado al Area de Memoriales Masivo";
		
		$accion  = $tiporegistro." En el Sistema (SIEPRO), ID: ".$idradicado." PROCESO: ".$radicado;
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		
		
		
		try {  
		
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
			
			//EMPIEZA LA TRANSACCION
		   	$this->db->beginTransaction();
			
		   		 
				$this->db->exec("INSERT INTO log (fecha,accion,detalle,idusuario,idtipolog) VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')"); 
				 
				 
				//******75088165//////Jorge Andres Valencia//////Cr 21 # 46 A 82//////8855934//////1-DEMANDANTE//////17-Caldas//////17001-MANIZALES******
				//75095585//////Andres Grajales//////Cr 213 # 748 B 434//////8875632//////1-DEMANDANTE//////13-Bolivar//////13001-CARTAGENA
		
				//1 EXPLODE
				$datospartes_1 = explode("******",$datospartes); 
				$longitud_1    = count($datospartes_1);
				$i             = 1;
				
				while($i < $longitud_1){
					
					//2 EXPLODE
					$datospartes_2 = explode("//////",$datospartes_1[$i]);
					
					
					$idradicado2 = $datospartes_2[0];
					$radi        = $datospartes_2[1];
					$obser       = "EXPEDIENTE CON MEMORIAL(LES) INCORPORADO AL AREA DE MEMORIALES";
					
					
					
						
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$idradicado2','$fecharegistro','$obser','$idusuario')"); 
					
	
									 
					
				
					$i = $i + 1;
				
				}
								 
								 
			
			//SE TERMINA LA TRANSACCION  
		  	$this->db->commit();
			
			//echo $datospartes;
			print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=14"</script>';
		  
		} 
		catch (Exception $e) {
		
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();
		  	echo "Fallo: " . $e->getMessage();
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=14b"</script>';*/
		}
		
		
  	}
	
	public function registrar_ejecutoria(){
	
		
		//SE OBTIENEN LOS DATOS
		$idusuario   = $_SESSION['idUsuario'];
		
		$idradicado     = trim($_POST['idradicado']);
		$radicado       = trim($_POST['radicado']);
		$datospartes    = trim($_POST['datospartes']);
		//$ordenadooficio = trim($_POST['ordenadooficio']);
		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		
				
		//OBTENEMOS DEL RADICADO 170014003 006 19931018000 
		//CLASE JUZGADO 4003, DEPARTAMENTO 17, MUNICIPIO 17001
		/*$idclasejuzgado = substr($radicadox, 5, 4);
		$iddepartamento = substr($radicadox, 1, 2);
		$idmunicipio    = substr($radicadox, 1, 5);*/
		

		//DATOS PARA EL REGISTRO DEL LOG
		
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		
		$tiporegistro = "Se Realiza Registro de Ejecutoria";
		
		$accion  = $tiporegistro." En el Sistema (SIEPRO)";
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		
		
		
		try {  
		
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
			
			//EMPIEZA LA TRANSACCION
		   	$this->db->beginTransaction();
			
		   		 
				$this->db->exec("INSERT INTO log (fecha,accion,detalle,idusuario,idtipolog) 
				                 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')"); 
				 
				 
				//******75088165//////Jorge Andres Valencia//////Cr 21 # 46 A 82//////8855934//////1-DEMANDANTE//////17-Caldas//////17001-MANIZALES******
				//75095585//////Andres Grajales//////Cr 213 # 748 B 434//////8875632//////1-DEMANDANTE//////13-Bolivar//////13001-CARTAGENA
		
				//1 EXPLODE
				$datospartes_1 = explode("******",$datospartes); 
				$longitud_1    = count($datospartes_1);
				$i             = 1;
				
				while($i < $longitud_1){
					
					//2 EXPLODE
					$datospartes_2 = explode("//////",$datospartes_1[$i]);
					
					
					$idradicado2 = $datospartes_2[0];
					$radi        = $datospartes_2[1];
					$obser       = utf8_decode($datospartes_2[2]);
					
					
					//PAR AUDIENCIA
					$fechaaudi = $datospartes_2[8];
					$horaaudi  = $datospartes_2[9];
					$obsaudi   = utf8_decode($datospartes_2[10]);
					
					//SI VA PARA DESPACHO
					$a_despacho = $datospartes_2[11];
					
					
					
					//NO SE SELECCIONO DE LA LISTA 'OBSERVACION' AUDIENCIA
					if ($fechaaudi == "SIN TRAMITE" && $horaaudi == "SIN TRAMITE" && $obsaudi == "SIN TRAMITE" ) {
		  
			  			$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,estadoobs,a_despacho,idusuario) 
					                     VALUES('$idradicado2','$fecharegistro','$obser',0,'$a_despacho','$idusuario')"); 
		  			}
					//SE SELECCIONO DE LA LISTA 'OBSERVACION' AUDIENCIA
		  			else{
					
						$obser = $obser.", FECHA:".$fechaaudi.", HORA:".$horaaudi.", ".$obsaudi;
					
						$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,fechaaudi,horaaudi,obsaudi,siaudi,idusuario) 
					                     VALUES('$idradicado2','$fecharegistro','$obser','$fechaaudi','$horaaudi','$obsaudi',1,'$idusuario')");
					
						
						$this->db->exec("INSERT INTO siepro_audiencia (idradicado,fechaaudi,horaaudi,obsaudi,fecharegistro,idusuario) 
					                     VALUES('$idradicado2','$fechaaudi','$horaaudi','$obsaudi','$fechalog','$idusuario')");
										 
					}
					
						
					
					$actu_accion      = $datospartes_2[3];
					$actu_fechai      = $datospartes_2[4];
					$actu_dias        = $datospartes_2[5];
					$actu_fechaf      = $datospartes_2[6];
					$actu_asignadoa   = $datospartes_2[7];
					
					//if (empty($actu_accion) || empty($actu_fechai) || empty($actu_dias) || empty($actu_fechaf) || empty($actu_asignadoa)) {
					if ($actu_accion == "SIN TRAMITE" && $actu_fechai == "SIN TRAMITE" && $actu_dias == "SIN TRAMITE" && $actu_fechaf == "SIN TRAMITE" && $actu_asignadoa == "SIN TRAMITE" ) {
		  
			  			$bandera = 0;
		  			}
		  			else{
					
						
						$actu_accion    = explode("-",$datospartes_2[3]);
						$id_actu_accion = $actu_accion[0];
						$desaccion      = utf8_decode($actu_accion[1]);
						
						
						$actu_asignadoa    = explode("-",$datospartes_2[7]);
						$id_actu_asignadoa = $actu_asignadoa[0];
						$asignadoaccionA   = $actu_asignadoa[1];
						
						$desaccion_B = "TRAMITE INTERNO DE PROCESO, FECHA INICIAL: ".$actu_fechai." DIAS: ".$actu_dias." FECHA FINAL: ".$actu_fechaf.
						               ", TRAMITE: ".$desaccion.", ASIGNADO A: ".$asignadoaccionA;
									   
									   
						
						$this->db->exec("INSERT INTO detalle_correspondencia(idcorrespondencia,fecha,observacion,idusuario)
				                         VALUES ('$idradicado2','$fecharegistro','$desaccion_B','$idusuario')");
										 
						
						$this->db->exec("INSERT INTO actuacion_expediente (idusuario,actu_radicado,actu_accion,actu_fechai,actu_dias,actu_fechaf,actu_asignadoa) 
							             VALUES ('$idusuario','$idradicado2','$id_actu_accion','$actu_fechai','$actu_dias','$actu_fechaf','$id_actu_asignadoa');");				 			   
					
						
						$this->db->exec("INSERT INTO actuacion_expediente_historial (idusuario,actu_radicado,actu_accion,actu_fechai,actu_dias,actu_fechaf,actu_asignadoa) 
							             VALUES ('$idusuario','$idradicado2','$id_actu_accion','$actu_fechai','$actu_dias','$actu_fechaf','$id_actu_asignadoa');");
					
					}
					
					
									
					$i = $i + 1;
				
				}
								 
								 
			
			//SE TERMINA LA TRANSACCION  
		  	$this->db->commit();
			
			//echo $datospartes;
			print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=15"</script>';
		  
		} 
		catch (Exception $e) {
		
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();
		  	echo "Fallo: " . $e->getMessage();
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=15b"</script>';*/
		}
		
		
  	}
	
	public function RegistrarConsultaProcesoVentanilla(){
  

		$idusuario    = $_SESSION['idUsuario'];
		
		$id     	   = trim($_GET['id']);
		$radicado      = trim($_GET['radicado']);
		
		//$idusuariosesion = trim($_GET['idusuariosesion']);
		
		$observacion = "PROCESO SE ENCUENTRA EN PRESTAMO A USUARIO DE VENTANILLA";

		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
			
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
			
		$tiporegistro = "PROCESO SE ENCUENTRA EN PRESTAMO A USUARIO DE VENTANILLA, ACCION REALIZADA POR SERVIDOR JUDICIAL: ";
		$accion  = $tiporegistro.$idusuario." ID RADICADO: ".$id."RADICADO: ".$radicado;
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
	
		//--------------------------------------------------------------------------------------------
		
		$error_transaccion = 0; //variable para detectar error
		

		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
				
					$listar = $this->db->prepare("SELECT d.contadoronsulta
												  FROM ubicacion_expediente d
												  WHERE d.id = '$id'");
												  
					$listar->execute();
					
					//$resultado = $listar->rowCount();
					
					$field = $listar->fetch();
						
					$numeroconsecutivo = $field[contadoronsulta];
					$consecutivo       = $numeroconsecutivo + 1; 
				
			  
					$this->db->exec("UPDATE ubicacion_expediente SET fecha='$fechalog',idusuario = '$idusuario',
					                 consultausuario = 1,idusuarioonsulta = '$idusuario',contadoronsulta = '$consecutivo',fecha_consulta = '$fechalog' 
					                 WHERE id='$id'");
						
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$id','$fecharegistro','$observacion','$idusuario')");
									 
					
					$this->db->exec("INSERT INTO siepro_historial_consulta (idusuario,idradicado,fecha,fechahora) 
					                 VALUES('$idusuario','$id','$fechalog','$fecharegistro')");
					
						
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
					                 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
					
					
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				

				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		
		
  }
  
  public function RegistrarRetornoProcesoVentanilla(){
  

		$idusuario    = $_SESSION['idUsuario'];
		
		$id     	   = trim($_GET['id']);
		$radicado      = trim($_GET['radicado']);
		
		//$idusuariosesion = trim($_GET['idusuariosesion']);
		
		$observacion = "PROCESO RETORNA DE PRESTAMO A USUARIO DE VENTANILLA";

		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
			
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
			
		$tiporegistro = "PROCESO RETORNA DE PRESTAMO A USUARIO DE VENTANILLA, ACCION REALIZADA POR SERVIDOR JUDICIAL: ";
		$accion  = $tiporegistro.$idusuario." ID RADICADO: ".$id."RADICADO: ".$radicado;
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
	
		//--------------------------------------------------------------------------------------------
		
		$error_transaccion = 0; //variable para detectar error
		

		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			  
					$this->db->exec("UPDATE ubicacion_expediente SET fecha='$fechalog',idusuario = '$idusuario',
					                 consultausuario = 0,idusuarioonsulta = 0,fecha_consulta = '0000-00-00' 
					                 WHERE id='$id'");
						
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$id','$fecharegistro','$observacion','$idusuario')");
						
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
					                 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
					
					
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				

				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		
		
  }
  
  public function registrar_paraarchivo_masivo(){
  

		$idusuario      = $_SESSION['idUsuario'];
		
		//$id     	    = trim($_GET['id']);
		//$radicado       = trim($_GET['radicado']);
		
		//$juzgadodestino = trim($_GET['juzgadodestino']);
		
		//$juzgadodestino = 1;
		
		//$cadenaradicados   = "16730"."//////"."16436"."//////"."19425";
		
		
		
		$cadenaradicados = "18432"."******"."17001400300520120051500"."******"."1"."//////".
"26590"."******"."17001400300720090067000"."******"."1"."//////".
"25485"."******"."17001400300820120028500"."******"."1"."//////".
"24078"."******"."17001400300920110048900"."******"."1"."//////".
"19930"."******"."17001400301020090065900"."******"."1"."//////";

						
		//$cadenaradicados  = "17013"."******"."17001400300220050049600"."******"."1"."//////";
							
			
					
		$cadenaradicados_2 = explode("//////",$cadenaradicados);
		$i = 0;
		$cantidadid = count($cadenaradicados_2);
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
		
		$tiporegistro = "PASA AL AREA DE ARCHIVO";
		$accion  = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		//--------------------------------------------------------------------------------------------
		
		$observaciondespacho = 'PASA AL AREA DE ARCHIVO';
		//$observacion_salida	 = 'PASA A DESISTIMIENTO TACITO';
		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		//--------------------------------------------------------------------------------------------
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		/*$serverName     = "192.168.89.20"; 
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}*/
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		while($i < $cantidadid - 1){
		
		$cadenaradicados_3 = explode("******",$cadenaradicados_2[$i]);
		
		//SQL PARA PRUEBAS
		/*$sql = ("UPDATE info1 SET des = '$observaciondespacho'
			     WHERE radicado ='$cadenaradicados_3[$i]';");*/
		
		/*$sql = ("INSERT INTO info3(idradicados) 
		         values('$cadenaradicados_3[0]');"); */
		
				
			
		//$sininstancia = $cadenaradicados_3[1];
	  	//$sin = substr($sininstancia, 0, 21);
		  
		//A DESPACHO DESDE LA OFICINA
		/*$sql = ("DECLARE @cad integer
					 
					UPDATE t103dainfoproc SET a103descacts='A Despacho', a103codiacts='30000031', a103codipads='30000031', a103fechdess = '2015-12-03 00:00:00.000', 
					a103anotacts = 'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal'
					WHERE a103llavproc='$cadenaradicados_3[1]';
					
					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$cadenaradicados_3[1]' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
					A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
					A110RENUTERM) values('$cadenaradicados_3[1]',@cad,'$sin','00','30000031','30000031','A Despacho','N','NO','N',0,NULL,NULL,'2015-12-03 00:00:00.000',NULL,NULL,NULL,NULL,NULL,
					'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal',NULL,NULL,'S','D','2015-12-03 00:00:00.000','NO','NO')");*/
					
					
		//PARA QUE EN SECRETRAIA SE FIJE ESTADO Y EN DESPACHO Auto termina proceso por desistimiento tï¿½cito
		/*$sql = ("DECLARE @cad integer
					 
					UPDATE t103dainfoproc SET a103descacts='Fijacion estado',a103descactd='Auto termina proceso por desistimiento tï¿½cito', a103codiacts='30000031', a103codipads='30000031', a103fechdess = convert(datetime, '2016-02-24', 121),a103fechdesd = convert(datetime, '2016-02-24', 121), 
	  				a103anotacts = 'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal'
	                WHERE a103llavproc='$cadenaradicados_3[1]'
					
					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$cadenaradicados_3[1]' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
				    A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
				    A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
				    A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
				    A110RENUTERM) 
				    values('$cadenaradicados_3[1]',@cad,'$sin','00','00000108','00000106','Fijacion estado','L','SI','C',1,convert(datetime, '2016-02-25', 121),convert(datetime, '2016-02-25', 121),convert(datetime, '2016-02-24', 121),NULL,1,'0020',NULL,convert(datetime, '2016-02-24', 121),
				    '',NULL,NULL,'S','D',convert(datetime, '2016-02-24', 121),'','')");
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );*/
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		/*if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}*/
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			//sqlsrv_rollback( $conn );
			//echo $conn;
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
		}
		else{
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			   
					//A DESPACHO
					
									 
					$this->db->exec("UPDATE ubicacion_expediente SET fecha='2016-10-19',idusuario = '$idusuario'
	  								 WHERE id='$cadenaradicados_3[0]'");
					
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$cadenaradicados_3[0]','2016-10-19 00:00:00','$observaciondespacho','$idusuario')");
						
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
					                 VALUES ('2016-10-19', '$accion','$detalle','$idusuario','$tipolog')");
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				//sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				//sqlsrv_rollback( $conn );
				
				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		}
		
		$i = $i + 1;
		
		}//FIN WHILE
		
  }
  
  
  public function Actualizar_ClaseProceso_SigloXXI(){
  
		//--------------------------------------------------------------------------------------------
		$error_transaccion = 0; //variable para detectar error
		//--------------------------------------------------------------------------------------------
		
		//CONEXION A SIGLO XXI
		$serverName     = "192.168.89.20"; 
		$connectionInfo = array( "Database"=>"consejoPN", "UID"=>"usuariooecm", "PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		
	
		$sininstancia = $cadenaradicados_3[1];
	  	$sin = substr($sininstancia, 0, 21);
		  
		//A DESPACHO DESDE LA OFICINA
		$sql = ("
					 
					UPDATE T103DAINFOPROC 
                    SET A103CODIAREA = '0003',A103CODIPROC = '3009',A103CODICLAS = '0007'
                    WHERE A103LLAVPROC = '17001430300120160006100'
					
					");
					
					
		
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			echo $conn;
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
		}
		else{
		
			try {  
			
				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		}
		
		
		
  }	 
  
  
  //**************PARA CORRESPONDENCIA SIN RADICADO ASOCIADO*********************************
   public function get_fecha_hora_mysql(){
	
		date_default_timezone_set('America/Bogota'); 
		$hoy = date("Y-m-d H:i:s");
		
		return $hoy; 
		
  }
  
  public function correspondencia_sin_radicado(){
	
		
		$modelo     = new archivoModel();
	
		
		//SE OBTIENEN LOS DATOS
		$idusuario   = $_SESSION['idUsuario'];
		
		$fechasr     = trim($_POST['fechasr']);
		$datospartes = trim($_POST['datospartes']);
		
		$fecha_hora_mysql = $modelo->get_fecha_hora_mysql();
		
		//$horaregistro  = $modelo->get_hora_actual_24horas();
	
		//DATOS PARA EL REGISTRO DEL LOG
		
		//$modelo     = new signotModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		
		$accion  = "REGISTRA CORRESPONDENCIA SIN RADICADO ASOCIADO";
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		
		
		$error_transaccion   = 0; //variable para detectar error
			
			
		try {  
					
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
						
						
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
											
							
							
				
								$datospartes_1A = explode("******",$datospartes); 
								$longitud_1    = count($datospartes_1A);
								$i             = 1;
								
								while($i < $longitud_1){
									
									//2 EXPLODE
									$datospartes_1B = explode("//////",$datospartes_1A[$i]);
									
									$tipodocumento  = utf8_decode( trim($datospartes_1B[0]) );
									$juzgadodestino = utf8_decode( trim($datospartes_1B[1]) );
									$tiposolicitud  = utf8_decode( trim($datospartes_1B[2]) );
									$peticionario   = utf8_decode( trim($datospartes_1B[3]) );
									$folios         = utf8_decode( trim($datospartes_1B[4]) );
									$observacion    = utf8_decode( trim($datospartes_1B[5]) );
									
									
									$this->db->exec("INSERT INTO correspondencia (fecha_registro,radicado,peticionario,tipo_documento,idjuzgado,
									                 idjuzgadodestino,idsolicitud,idusuario,folios,idubicacionexpediente,observacionesm)
                                                     VALUES ('$fecha_hora_mysql','0','$peticionario','$tipodocumento','23','$juzgadodestino',
													 '$tiposolicitud','$idusuario','$folios','33122','$observacion')");
						
									
									$i = $i + 1;
								
								}
								
							 

						
							//SE TERMINA LA TRANSACCION  
							$this->db->commit();
							
							
						
							
							echo '<script languaje="JavaScript"> 
								
									alert("PROCESO SE REALIZA CORRECTAMENTE");
									
									location.href="index.php?controller=archivo&action=Correspondencia_Sin_Radicado";
								
								</script>';
						
						
						
					  
		} 
		catch (Exception $e) {
					
						//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
						$this->db->rollBack();
						
	
						//echo "ERROR**********".$e->getMessage();
						
						echo '<script languaje="JavaScript"> 
								
								var ERROR = "'.$e->getMessage().'";
								
								alert("ERROR AL REALIZAR EL PROCESO: "+ERROR);
								
								location.href="index.php?controller=archivo&action=Correspondencia_Sin_Radicado";
								
							</script>';
						
						
		}
				
		
		
		
		
  	}
	
	
	public function correspondencia_editar_radicado(){
	
		
		$modelo     = new archivoModel();
	
		
		//SE OBTIENEN LOS DATOS
		$idusuario   = $_SESSION['idUsuario'];
		
		$idcorres    = trim($_GET['idcorres']);
		
		$d1_c = trim($_GET['d1_c']);
		$d2_c = trim($_GET['d2_c']);
		$d3_c = trim($_GET['d3_c']);
		$d4_c = trim($_GET['d4_c']);
		$d5_c = trim($_GET['d5_c']);
		$d6_c = trim($_GET['d6_c']);
		
		$d7_c = trim($_GET['d7_c']);
		
		if( empty($d7_c) ){
			$d7_c = '0000-00-00';
		}
		
		//$fecha_hora_mysql = $modelo->get_fecha_hora_mysql();
		
		//$horaregistro  = $modelo->get_hora_actual_24horas();
	
		//DATOS PARA EL REGISTRO DEL LOG
		
		//$modelo     = new signotModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		
		$accion  = "EDITA CORRESPONDENCIA SIN RADICADO ASOCIADO, ID: ".$idcorres;
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		
		
		$error_transaccion   = 0; //variable para detectar error
			
			
		try {  
					
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
						
						
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
											
							
						
								$this->db->exec("UPDATE correspondencia SET
				
													 tipo_documento   = '$d1_c',
													 idjuzgadodestino = '$d2_c',
													 idsolicitud      = '$d3_c',
													 peticionario     = '$d4_c',
													 folios           = '$d5_c',
													 observacionesm   = '$d6_c',
													 fecha_entrega    = '$d7_c',
													 idusuario        = '$idusuario'
												 
                                                 WHERE id = '$idcorres' ");
						
									
									
							
						
							//SE TERMINA LA TRANSACCION  
							$this->db->commit();
							
							
						
							
							echo '<script languaje="JavaScript"> 
								
									alert("PROCESO SE REALIZA CORRECTAMENTE");
									
									location.href="index.php?controller=archivo&action=Correspondencia_Sin_Radicado";
								
								</script>';
						
						
						
					  
		} 
		catch (Exception $e) {
					
						//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
						$this->db->rollBack();
						
	
						//echo "ERROR**********".$e->getMessage();
						
						echo '<script languaje="JavaScript"> 
								
								var ERROR = "'.$e->getMessage().'";
								
								alert("ERROR AL REALIZAR EL PROCESO: "+ERROR);
								
								location.href="index.php?controller=archivo&action=Correspondencia_Sin_Radicado";
								
							</script>';
						
						
		}
			
			
  	}
	
	
	public function busquedad_corres(){
	
			
			$modelo      = new archivoModel();
	
			//$idusuario   = $_SESSION['idUsuario'];
		
			$fechaactual = $modelo->get_fecha_actual_amd();
	
			$listar      = $this->db->prepare(" SELECT t1.id,t1.fecha_registro,t1.peticionario,t1.tipo_documento,t1.folios,t1.fecha_entrega,t1.observacionesm,
												t2.nombre AS jusgadodestino,
												t3.nombre AS solicitud,
												t4.empleado
												FROM (((correspondencia t1 LEFT JOIN juzgado_destino t2 ON t1.idjuzgadodestino = t2.id)
												LEFT JOIN pa_solicitud t3 ON t1.idsolicitud = t3.id)
												LEFT JOIN pa_usuario t4 ON t1.idusuario = t4.id)
												WHERE t1.radicado = 0
											    AND ( DATE(fecha_registro) >= '$fechaactual' AND DATE(fecha_registro) <= '$fechaactual' ) 
												ORDER BY t1.id DESC ");
		

  			$listar->execute();

  			return $listar;
	
  	}
	
	
	public function busquedad_filtro_corres(){
	
	
			$idusuario  = $_SESSION['idUsuario'];
		
		
			$filtrox;
			
			$filtrof;
			$filtrofe;
			
			$filtro1;
			$filtro2;
			$filtro3;
			$filtro4;
			$filtro5;
			$filtro6;
			
		
			$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			$fechaded   = trim($_GET['dato_3']);
			$fechadeh   = trim($_GET['dato_4']);
			
			
			$datox1    = trim($_GET['datox1']);
			$datox2    = trim($_GET['datox2']);
			$datox3    = trim($_GET['datox3']);
			$datox4    = trim($_GET['datox4']);
			$datox5    = trim($_GET['datox5']);
			$datox6    = trim($_GET['datox6']);
			
			
		
			if ( !empty($fechad) && !empty($fechah) ) {
			
				
				$filtrof = " AND ( DATE(t1.fecha_registro) >= '$fechad' AND DATE(t1.fecha_registro) <= '$fechah') ";
				
			
			}
			if ( !empty($fechaded) && !empty($fechadeh) ) {
			
				
				//$filtrofe = " AND t1.fecha_entrega = '$fechade' ";
				
				$filtrofe = " AND ( t1.fecha_entrega >= '$fechaded' AND  t1.fecha_entrega <= '$fechadeh') ";
				
			
			}
			if ( !empty($datox1) ) {
			
				$filtro1 = " AND t1.tipo_documento = '$datox1' ";
			
			}
			
			if ( !empty($datox2) ) {
			
				//$filtro2 = " AND t4.nombre LIKE '%$datox2%' ";
				
				$filtro2 = " AND t1.idjuzgadodestino = '$datox2' ";
			
			}
			
			if ( !empty($datox3) ) {
			
				$filtro3 = " AND t1.idsolicitud = '$datox3' ";
			
			}
			
			if ( !empty($datox4) ) {
			
			
				$filtro4 = " AND t1.peticionario LIKE '%$datox4%' ";
			
			}
			
			
			if ( !empty($datox5) ) {
			
				$filtro5 = " AND t1.folios = '$datox5' ";
			
			}
			
			if ( !empty($datox6) ) {
			
				
				
				$filtro6 = " AND t1.observacionesm LIKE '%$datox6%' ";
			
			}
			
	
			$filtrox = $filtro1." ".$filtro2." ".$filtro3." ".$filtro4." ".$filtro5." ".$filtro6." ".$filtrof." ".$filtrofe;
			
			//echo $filtrox;
			   
			
			
			$listar = $this->db->prepare("	SELECT t1.id,t1.fecha_registro,t1.peticionario,t1.tipo_documento,t1.folios,t1.fecha_entrega,t1.observacionesm,
											t2.nombre AS jusgadodestino,
											t3.nombre AS solicitud,
											t4.empleado
											FROM (((correspondencia t1 LEFT JOIN juzgado_destino t2 ON t1.idjuzgadodestino = t2.id)
											LEFT JOIN pa_solicitud t3 ON t1.idsolicitud = t3.id)
											LEFT JOIN pa_usuario t4 ON t1.idusuario = t4.id)
											WHERE t1.id >= '1'" .$filtrox. " AND t1.radicado = 0 
											ORDER BY t1.id DESC ");
		

  			$listar->execute();

  			return $listar;
	
  	}
	
	
	public function cantidad_filtro_corres(){
	
	
			$idusuario  = $_SESSION['idUsuario'];
		
		
			$filtrox;
			
			$filtrof;
			$filtrofe;
			
			$filtro1;
			$filtro2;
			$filtro3;
			$filtro4;
			$filtro5;
			$filtro6;
			
		
			$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			$fechaded   = trim($_GET['dato_3']);
			$fechadeh   = trim($_GET['dato_4']);
			
			
			$datox1    = trim($_GET['datox1']);
			$datox2    = trim($_GET['datox2']);
			$datox3    = trim($_GET['datox3']);
			$datox4    = trim($_GET['datox4']);
			$datox5    = trim($_GET['datox5']);
			$datox6    = trim($_GET['datox6']);
			
			
		
			if ( !empty($fechad) && !empty($fechah) ) {
			
				
				$filtrof = " AND ( DATE(t1.fecha_registro) >= '$fechad' AND DATE(t1.fecha_registro) <= '$fechah') ";
				
			
			}
			if ( !empty($fechaded) && !empty($fechadeh) ) {
			
				
				//$filtrofe = " AND t1.fecha_entrega = '$fechade' ";
				
				$filtrofe = " AND ( t1.fecha_entrega >= '$fechaded' AND  t1.fecha_entrega <= '$fechadeh') ";
				
			
			}
			if ( !empty($datox1) ) {
			
				$filtro1 = " AND t1.tipo_documento = '$datox1' ";
			
			}
			
			if ( !empty($datox2) ) {
			
				//$filtro2 = " AND t4.nombre LIKE '%$datox2%' ";
				
				$filtro2 = " AND t1.idjuzgadodestino = '$datox2' ";
			
			}
			
			if ( !empty($datox3) ) {
			
				$filtro3 = " AND t1.idsolicitud = '$datox3' ";
			
			}
			
			if ( !empty($datox4) ) {
			
			
				$filtro4 = " AND t1.peticionario LIKE '%$datox4%' ";
			
			}
			
			
			if ( !empty($datox5) ) {
			
				$filtro5 = " AND t1.folios = '$datox5' ";
			
			}
			
			if ( !empty($datox6) ) {
			
				
				
				$filtro6 = " AND t1.observacionesm LIKE '%$datox6%' ";
			
			}
			
	
			$filtrox = $filtro1." ".$filtro2." ".$filtro4." ".$filtro5." ".$filtro6." ".$filtrof." ".$filtrofe;
			
			//echo $filtrox;
			   
			
			
			
											
			$listar = $this->db->prepare("	SELECT COUNT(t1.id) AS CANTIDAD
											FROM (((correspondencia t1 LEFT JOIN juzgado_destino t2 ON t1.idjuzgadodestino = t2.id)
											LEFT JOIN pa_solicitud t3 ON t1.idsolicitud = t3.id)
											LEFT JOIN pa_usuario t4 ON t1.idusuario = t4.id)
											WHERE t1.id >= '1'" .$filtrox. " AND t1.radicado = 0 
											ORDER BY t1.id DESC ");
		

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function get_nombre_usuario($idnombreusuario){
	
		$listar     = $this->db->prepare("SELECT empleado FROM pa_usuario WHERE id = '$idnombreusuario'");
	
  		$listar->execute();

  		return $listar;
	
	}
	
	
	//ESTA FUNCION REEMPLAZA LA FUNCION get_lista_archivos YA QUE ESTQA CONCATENA EL LISTADO DE LA LISTA DE CARPETAS CON //////
	//PARA LUEGO RECIBIR ESA INFORMACION EN LA VISTA sidoju_listar_archivos.php Y CON LA FUNCION EXPLORER CREAR UN VECTOR
	//PARA SER RECORRIDO CON UN WHILE Y PODER APLICAR LAS FUNCIONES DE LA LIBRERIA JQUERYdataTable
	//NOTA: PERO LA FUNCION  get_lista_archivos TAMBIEN FUNCIONA CON LA LA BLE COMENTADA EN LA VISTA sidoju_listar_archivos.php
	public function get_lista_archivos_2($idusuario,$ruta){
	
		$modelo = new archivoModel();
		
		$listar = null;
		
		//$directorio = opendir("C:\wamp\www\centro_servicios\ArchivosSidoju");
		$directorio = opendir($ruta);
		
		while($elemento = readdir($directorio))
		{
			
			//OBTENGO EL NOMBRE DEL USUARIO PARA CONCATENARLO CON LA CARPETA ESPECIFICA CON SU CODIGO Y NOMBRE
			//EL CUAL EL CODIGO ES LA VARIABLE $elemento
			$nombreusuario = $modelo->get_nombre_usuario($elemento);
			$n_usuario_1   = $nombreusuario->fetch();
			$n_usuario_2   = $n_usuario_1['empleado'];
			
			
			if($elemento != '.' && $elemento != '..' /*&& $elemento == $idusuario*/)
			{
			
				//if (is_dir("archivos/".$elemento))
				if (is_dir("INCIDENTESALUD/".$elemento))
				{
					
					$listar .= "<li><a title = 'Archivos Escaneados: ".$n_usuario_2."' href='INCIDENTESALUD/$elemento' target='_blank'>$elemento / ".$n_usuario_2."</a></li>";
										
					
				}
				else
				{
					
					$listar .= "<li><a title = 'Archivos Escaneados: ".$n_usuario_2."' href='INCIDENTESALUD/$elemento' target='_blank'>$elemento / ".$n_usuario_2."</a></li>";
					
					
				}
			}
		}
		
		return $listar;
	
	}
	
	public function get_lista_archivos_3($ruta){
	
		$directorio = opendir($ruta); //ruta actual
		
		while ($archivo = readdir($directorio)) //obtenemos un archivo y luego otro sucesivamente
		{
			if (is_dir($archivo))//verificamos si es o no un directorio
			{
				//$listar .= "[".$archivo . "]<br />"; //de ser un directorio lo envolvemos entre corchetes
				
				$listar .= "<li><a title = 'Archivos Carpeta Compartida' href='$archivo' target='_blank'>$archivo / ".$n_usuario_2."</a></li>";
			}
			else
			{
				//$listar .= $archivo . "<br />";
				
				$listar .= "<li><a title = 'Archivos Carpeta Compartida' href='$archivo' target='_blank'>$archivo / ".$n_usuario_2."</a></li>";
			}
		}
		
		return $listar;
	}
	
	//ME DETRMINNA SI HAY CONEXION CON JUSTICIA XXI
	//ESTO PARA DETERMINAR SI SE RADICARA TANDO EN JUSTICIA XXI COMO LOCALMENTE
	//O SOLO LOCALMENTE
	public function get_conexion_JUSTICIAXXI(){
	
		$modelo    = new archivoModel();
	
		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
		
			
		$serverName = $datosbd_1; //serverName\instanceName
		$connectionInfo = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
		$conn = sqlsrv_connect( $serverName, $connectionInfo);
							
		//ERROR EN LA CONEXION							
		if( $conn === false ) {
								
			return 1;
				
		}
		//CONEXION CON EXITO
		else{
		
			return 0;
		}
		
	}
	
	public function radicador_descatar_lista(){
	
		
		$modelo     = new archivoModel();
	
		
		//SE OBTIENEN LOS DATOS
		$idusuario     = $_SESSION['idUsuario'];
		
		$idobser       = trim($_GET['idobser']);
		
		$idradicado    = trim($_GET['idradicado']);
		
		$valorradicado = trim($_GET['valorradicado']);
		
		
	
	
		//DATOS PARA EL REGISTRO DEL LOG
		
		//$modelo     = new signotModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		$accion  = "DESCARTA OBSERVACION DE LA LISTA, PARA NO SER ENVIADO A DESPACHO MASIVO, RADICADO:".$valorradicado;
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
	
		
		try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
				
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
									 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
									 
					
					//SE REALIZA ESTE CAMBIO, YA QUE PARA INDICAR QUE SE VA ADESPACHO
					//SE MANEJA LA COLUMNA a_despacho = 1
					$this->db->exec("DELETE FROM detalle_correspondencia WHERE id = '$idobser'"); 		
					
					/*$this->db->exec("UPDATE detalle_correspondencia SET a_despacho = NULL
					                 WHERE id = '$idobser'");*/
									 
									 
					/*date_default_timezone_set('America/Bogota'); 
					$fecharegistro = date('Y-m-d g:i');

					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
									 VALUES('$idradicado','$fecharegistro','PROCESOS NO VA A DESPACHO','$idusuario')");*/				 
											 
										
											
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
								
					
				echo '<script languaje="JavaScript"> 
							
							alert("PROCESO SE REALIZA CORRECTAMENTE");
							
							location.href="index.php?controller=archivo&action=Registrar_A_Despacho_Masivo";
										
						</script>';
								
					
			  
		} 
		catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				
				//echo " Fallo: " . $e->getMessage();
				
		
				echo '<script languaje="JavaScript"> 
				
						var ERROR = "'.$e->getMessage().'";
			
						alert("ERROR AL REALIZAR EL PROCESO: "+ERROR);
						
						location.href="index.php?controller=archivo&action=Registrar_A_Despacho_Masivo";
						
					 </script>';
				
				
	
		}
			
		
		
		
		
  	}  
	
	
	
	
	//ESTADO MASIVO AUTOS
	public function Registrar_Estado_Masivo_autos_NUEVA_VERSION_TCPDF(){
	
	
		//-------------PARA GENERAR EL PDF---------------------
		require_once('views/tcpdf/tcpdf.php');
		
		$fechae_2A     = $_POST['fechae_2A'];

		$fechacarga    = $_POST['fechae_2B'];
		setlocale(LC_TIME, "Spanish");
		$fechavisual   = strftime('%d %B de %Y', strtotime($fechacarga));
		
		$nun_estado    = $_POST['nun_estado'];
		$juzgadoauto   = $_POST['juzgadoauto'];
		$ruta_dinamica = $_POST['ruta_auto'];
		
		//$ruta_dinamica = "/documents/2858635/12619711";
		//$directorio    = opendir("AUTOS/2017/JUZGADO 2/MARZO/24 de marzo");
		//$carpeta       = "CARGAMASIVA";
		
		$directorio    = opendir("C:/AUTOS_ESTADOS");
		$carpeta       = "C:/CARGAMASIVA";
		$nom           = trim($_SESSION['idUsuario']);
		
		
		// create new PDF document
		//$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
		
		$pdf = new TCPDF('L','mm', 'legal', true, 'UTF-8', false);
		
		// set document information
		//$pdf->SetCreator(PDF_CREATOR);
		//$pdf->SetAuthor('Nicola Asuni');
		$pdf->SetTitle('Estado '.$nun_estado);
		//$pdf->SetSubject('TCPDF Tutorial');
		//$pdf->SetKeywords('TCPDF, PDF, example, test, guide');
		
		// set default header data
		//$pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE.' 048', PDF_HEADER_STRING);
		
		//PARA QUE CARGUE LA IMAGEN DEBE IR UBICADA EN 
		//C:\wamp\www\ejecucion\views\tcpdf\examples\images
		$pdf->SetHeaderData('tcpdf_logo2.jpg', 45, '', '');
		//$pdf->setFooterData(array(0,64,0), array(0,64,128));
		
		
		// set header and footer fonts
		$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
		$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
		
		// set default monospaced font
		$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
		
		// set margins
		$pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
		$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
		$pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
		
		// set auto page breaks
		$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
		
		// set image scale factor
		//$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);
		
		// set some language-dependent strings (optional)
		if (@file_exists(dirname(__FILE__).'/lang/eng.php')) {
			require_once(dirname(__FILE__).'/lang/eng.php');
			$pdf->setLanguageArray($l);
		}
		
		// ---------------------------------------------------------

		// //PARA EL RESTO TEXTO EN EL PDF 
		$pdf->SetFont('helvetica', 'B', 11);
		
		// add a page
		$pdf->AddPage();
		
		$pdf->Write(0, 'REPUBLICA DE COLOMBIA', '', 0, 'C', true, 0, false, false, 0);
		$pdf->Write(0, 'RAMA JUDICIAL DEL PODER PUBLICO', '', 0, 'C', true, 0, false, false, 0);
		$pdf->Write(0, $juzgadoauto, '', 0, 'C', true, 0, false, false, 0);
		
		$header_ef = array('Estado Numero: '.$nun_estado,'', '','','',' Fecha: '.$fechavisual, '');
		foreach($header_ef as $col_ef)
			$pdf->Cell(40,7,$col_ef,0);
		$pdf->Ln();
						
		//PARA EL TEXTO DE LA TABLA
		$pdf->SetFont('helvetica', '', 11);
		
		
		//------------------------------------------------------------------------------------------------------------------------------------------------------
		
	
		//AQUI SE CREA EL DIRECTORIO
		if(is_dir($carpeta."/".$nom)){$bandera=0;}
		else{mkdir($carpeta."/".$nom, 0, true);}
		
		
		//datos del arhivo 
		$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		$tamano_archivo = $_FILES['archivo']['size'];
		
		
		if (! (strpos($tipo_archivo, "vnd.ms-excel")) && ($tamano_archivo < 100000000) )  { 
			
			
			echo '<script languaje="JavaScript"> 
			
	
				alert("LA EXTENSION O LA LONGITUD DEL ARCHIVO NO ES CORRECTA");
				
				location.href="index.php?controller=archivo&action=Registrar_Estado_Masivo_Autos";
						
			</script>';
			
			
		}
		else{//1 
		
			
			
			if ( file_exists($carpeta."/".$nom.'/'.$nombre_archivo) ) {
				
			
				$idunico = time();
					
				$nombre_archivo = $idunico."_".$nombre_archivo;
				
				
			}
			
			
			if ( move_uploaded_file($_FILES['archivo']['tmp_name'], $carpeta."/".$nom.'/'.$nombre_archivo) ){
			
				$tbl = '
				<table border="1" cellpadding="1" cellspacing="1" nobr="true">
				 
				
				 
				 <tr style="background-color:#E9E9E9">
					  <td width="130">RADICADO</td>
					  <td>CLASE PROCESO</td>
					  <td>DEMANDANTE</td>
					  <td>DEMANDADO</td>
					  <td>ACTUACION</td>
					  <td>FECHA AUTO</td>
					  <td>AUTO</td>
				 </tr> 
				 
				</table>';
				 
				 $pdf->writeHTML($tbl, false, false, false, false, '');
				  
	
				//ASI CUANDO EL ARCHIVO NO TIENE ENCABEZADOS
				$i=0;
				
				//while($i < $long){
				while ($archivo = readdir($directorio)){
									
					//echo $lineas[$i]."\n";
									
					//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR COMAS
					//$fila = explode(",",$lineas[$i]);
									
					//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR PUNTO Y COMA
					$fila = explode(";",$lineas[$i]);
									
					//$fila = explode($separador,$lineas[$i]);
									
					//strtoupper //PARA PASAR A MAYUSCULAS
					//strtolower //PARA PASAR A MINUSCULAS
					
					
					$RADICADO              = trim($fila[0]);
					$CLASE_PROCESO         = trim($fila[1]);
					$DEMANDANTE            = trim($fila[2]);
					$DEMANDADO             = trim($fila[3]);
					$DESCRIPCION_ACTUACION = trim($fila[4]);
					$FECHA_AUTO            = trim($fila[5]);
					
					
					if (is_dir($archivo)){//verificamos si es o no un directorio
						//echo "[".$archivo . "]<br />"; //de ser un directorio lo envolvemos entre corchetes
					}
					else{
						
					
						
						
						//-------------ENCONTRAR LA LETRA X EN EL NOMBRE DEL ARCHIVO Y BORRARLA EJ: x12-2016-00373-1 --------------------------------
				
						/*$findme   = 'x';
						$pos      = strpos($archivo, $findme);
						
						if ($pos === false) {
						
							$nuevo_archivo = strtoupper($archivo);
						} 
						else {//ELIMINA CARACTER
						
							$nuevo_archivo = substr(strtoupper($archivo), 1);
						}*/
						
						//-------------FIN ENCONTRAR LA LETRA X EN EL NOMBRE DEL ARCHIVO Y BORRARLA --------------------------------
						
						$RUTA_AUTO = "https://www.ramajudicial.gov.co".$ruta_dinamica."/".$archivo;
						
						//AQUI LA TABLA HTML
						//writeHTML($html, $ln=true, $fill=false, $reseth=false, $cell=false, $align='')
						

						//NOTA: SE PONE utf8_encode POR QUE SI EL CAMPO TIENE TILDE NO NO SE MUESTRA EN EL REPORTE
						//TODO EL REGISTRO
						//El elemento HTML <nobr> previene que una lï¿½nea de texto se divida en una nueva lï¿½nea, 
						//asï¿½, se presentarï¿½ en una lï¿½nea larga por lo que puede ser necesario hacer un
						//desplazamiento de pantalla. Esta etiqueta no es un estï¿½ndar HTML y no deberï¿½a ser usada, 
						//en su lugar use la propiedad CSS white-space como en este ejemplo:
						//<span style="white-space: nowrap">Lï¿½nea larga sin saltos</span>
						
						//MultiCell($w, $h, $txt, $border=0, $align='J', $fill=false, $ln=1, $x='', $y='', $reseth=true, $stretch=0, $ishtml=false, $autopadding=true, $maxh=0, $valign='T', $fitcell=false) {
						
												
						//--------------DE ESTA FORMA SE CREA UNA TABALA CON LA FUNCION CELDA------------------------
						//FUNCIONA PERO EL TEXTOLARGO NO SE SOBREESCRIBE EN LA SIGUIENTE CELDA
					
						//FUNCION CELDA
						//Cell($w, $h=0, $txt='', $border=0, $ln=0, $align='', $fill=false, $link='')
						
					
						$tbl_2 = '
								
								<table border="1" cellpadding="1" cellspacing="1" nobr="true">
								
									<tr>
										<td width="130" style="font-size:10px">'.$RADICADO.'</td>
										<td>'.utf8_encode($CLASE_PROCESO).'</td>
										<td>'.utf8_encode($DEMANDANTE).'</td>
										<td>'.utf8_encode($DEMANDADO).'</td>
										<td>'.utf8_encode($DESCRIPCION_ACTUACION).'</td>
										<td>'.$FECHA_AUTO.'</td>
										
										<td valign="middle"><a title="Descargar Auto" href="'.$RUTA_AUTO.'"><img src="views/images/estados.jpg" width="163" height="55"/></a></td>
									</tr>
									
								</table>';
						
						$pdf->writeHTML($tbl_2, false, false, false, false, '');
						
					
						$i= $i + 1;
				
					
																	 
					}//FIN WHILE while($i < $long){		
					
					
								
				}//FIN ELSE	 DEL IF if (is_dir($archivo)){			
				
				
												
			}//FIN DEL if ( move_uploaded_file($_FILES['archivo']['tmp_name'], $carpeta."/".$nom.'/'.$nombre_archivo) ){
			
			$tbl_3 = '
								
					<table border="0">

						<tr>
							
							<td colspan="7"></td>
							
						</tr>								
						<tr>
							
							<td colspan="7" valign="bottom" style="text-align:center"><img src="views/images/firmasecre.png" width="291" height="174"/></td>
							
						</tr>
									
					</table>';
						
								
						
					
			$pdf->writeHTML($tbl_3, false, false, false, false, '');
			
			
		
		}//FIN ELSE 1
			
		//Close and output PDF document
		$pdf->Output('estado.pdf', 'I');	

	}//FIN FUNCION 
	
	
	public function get_lista_filtro($nombrelista,$campoordenar,$filtro,$formaordenar){
	
		$listar     = $this->db->prepare("SELECT * FROM ".$nombrelista." ".$filtro." ORDER BY ".$campoordenar." ".$formaordenar);
	
  		$listar->execute();

  		return $listar;
	
	}
	
	
	
   //---------------------PARA  MEMORIALES SIN INCORPORAR AL PROCESO------------------------------------------------------------------
   
  //ID DE pa_solicitud QUE DEBEN SALIR EN LAS ALERTAS DE INCORPORAR MEMORIALES AL PROCESO
  public function get_id_pa_solicitud_memoriales(){
  
  	
		$modelo = new archivoModel();
	  
		$campos                    = 'usuario';
		$nombrelista               = 'pa_usuario_acciones';
		$idaccion			       = '12';
	  	$campoordenar              = 'id';
	  	$datosusuarioacciones_SM_2 = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
	  	$usuarios_SM_2             = $datosusuarioacciones_SM_2->fetch();
	  	//$usuariosa_SM_2			   = explode("////",$usuarios_SM_2[usuario]);
		
		//$ids_pa_solicitud          = str_replace("////", ",", $usuarios_SM_2[usuario]);
		
		$ids_pa_solicitud          = $usuarios_SM_2[usuario];
  
  
  	    return $ids_pa_solicitud;
  
  }
  
  public function get_sin_memorial($id_radicado_sm){
  
  	
		$modelo = new archivoModel();
		
		$ids_pa_solicitud = $modelo->get_id_pa_solicitud_memoriales();
	
		
		$listar     = $this->db->prepare("SELECT t1.id,t1.fecha_registro,t1.radicado,t1.peticionario,t1.cedula,t1.telefono,
										  t1.tipo_documento,t1.folios,t2.nombre,t1.ruta_local,t1.id_memo_externo
										  FROM (correspondencia t1 
										  LEFT JOIN pa_solicitud t2 ON t1.idsolicitud = t2.id)
										  WHERE t1.radicado = '$id_radicado_sm' 
										  AND t1.incorporaexpediente IS NULL 
										  AND t1.fecha_incorpora IS NULL
										  AND t1.tipo_documento = 'Memorial' 
										  AND $ids_pa_solicitud");
	
  		$listar->execute();

  		return $listar;
	
  }
  
  
   public function get_cantidad_sin_memorial($id_radicado_sm){
	
	
		$modelo = new archivoModel();
		
		$ids_pa_solicitud = $modelo->get_id_pa_solicitud_memoriales();
		
		
		$listar     = $this->db->prepare("SELECT COUNT(t1.id) AS registros_sm
										  FROM (correspondencia t1 LEFT JOIN pa_solicitud t2 ON t1.idsolicitud = t2.id)
                                          WHERE t1.radicado = '$id_radicado_sm' AND t1.incorporaexpediente IS NULL AND t1.fecha_incorpora IS NULL
										  AND t1.tipo_documento = 'Memorial' AND $ids_pa_solicitud");
	
  		$listar->execute();

  		return $listar;
	
  }
  
  public function Incorporar_Memorial_Masivo_NV(){


		$modelo    = new archivoModel();
		
		$idusuario = $_SESSION['idUsuario'];
	
		//$fechacarga = trim($_GET['fechae']);
		
		$dato_idR   = trim($_GET['dato_idR']);
		$dato_idR_2 = explode("******",$dato_idR);
		$long       = count($dato_idR_2) - 1;
		
		$ids_memoriales = str_replace("******", ",", $dato_idR);
		
		$idradicado      = trim($_GET['id_radicado_sm']);
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
		
		//$accion  = "INCORPORA MEMORIAL AL PROCESO, CANTIDAD DE MEMORIALES: ".$long.", ID MEMORIALES: ".$ids_memoriales;
		$accion  = "INCORPORA ESCRITO AL PROCESO, CANTIDAD DE ESCRITOS: ".$long.", ID: ".$ids_memoriales;
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
	
		$error_transaccion   = 0; //variable para detectar error
				
				
	
		
		try {  
					
					$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
					//EMPIEZA LA TRANSACCION
					$this->db->beginTransaction();
						
						
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
									 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
											
								
					
					$i=0;
								
					while($i < $long){
									
				
							$id_memorial  = $dato_idR_2[$i];
						
							$this->db->exec("UPDATE correspondencia SET 
							
							                 incorporaexpediente  = 1,
											 fecha_incorpora      = '$fechalog',
											 idusuario            = '$idusuario'
					
											 WHERE id = '$id_memorial'");
											 
						
						
						$notaexp = "SE AGREGA MEMORIAL AL EXPEDIENTE, ID MEMORIAL.: ".$id_memorial; 	 
							
						$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,id_memorial,idusuario) 
									     VALUES('$idradicado','$fechahora','$notaexp','$id_memorial','$idusuario')");					 
											 
							
			
						$i= $i + 1;
						
																 
					}//FIN WHILE while($i < $long){		
					
					/*$fechacarga_detalle = $fechalog." "."00:00:00";
														 
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
									 VALUES('$idradicado','$fechacarga_detalle','$accion','$idusuario')");*/			
											 
								
					if($error_transaccion) {
								
						//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
						$this->db->rollBack();
					
				
						echo '<script languaje="JavaScript"> 
				
							
									var ERROR = "'.$msgError.'";
						
									alert("ERROR 1: "+ERROR);
									
									location.href="index.php?controller=archivo&action=listarUbicacionExpediente";
											
										
								</script>';
								
					}
					else{
								
						//SE TERMINA LA TRANSACCION  
						$this->db->commit();
									
						
						echo '<script languaje="JavaScript"> 
							
			
									alert("PROCESO SE REALIZA CORRECTAMENTE");
								
									location.href="index.php?controller=archivo&action=listarUbicacionExpediente";
										
								</script>';
					}
						
						
			}
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
					
				
				echo '<script languaje="JavaScript"> 
				
							
						var ERROR = "'.$e->getMessage().'";
		
						alert("ERROR 2: "+ERROR);
					
						location.href="index.php?controller=archivo&action=listarUbicacionExpediente";
							
					</script>';
			
					
			}		
						
						
	}//FIN FUNCION 
  
  
  
  
  
  
  //---------------------FIN PARA  MEMORIALES SIN INCORPORAR AL PROCESO------------------------------------------------------------------
	
	
  //----------------------------------------------------------------------------------------------------------------------------------------------
	
	//**************110 MASIVO*********************************

	public function get_id_proceso($idradicado){
	
		
		$listar     = $this->db->prepare("SELECT id FROM ubicacion_expediente WHERE radicado = '$idradicado'");
	
  		$listar->execute();

  		return $listar;
	
  	}	
	
	
	
	public function Registro_Ciento_Diez_Masivo(){
	
		
		$modelo     = new archivoModel();
	
		
		//SE OBTIENEN LOS DATOS
		$idusuario   = $_SESSION['idUsuario'];
		
		$fechasr110  = trim($_POST['fechasr110']);
		$datospartes = trim($_POST['datospartes']);
		$fechas_tras = trim($_POST['fechas_tras']);
		
		//$fecha_hora_mysql = $modelo->get_fecha_hora_mysql();
		
		//$horaregistro  = $modelo->get_hora_actual_24horas();
	
		//DATOS PARA EL REGISTRO DEL LOG
		
		//$modelo     = new signotModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		
		/*$accion  = "REGISTRA CORRESPONDENCIA SIN RADICADO ASOCIADO";
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;*/
		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		$error_transaccion   = 0; //variable para detectar error
			
		$msgError  = "";
		
		
		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
		
			
		try {  
					
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
						
						
						
								//*********************************NUEVA CONEXON**************************************************
					
								$serverName = $datosbd_1; //serverName\instanceName
								$connectionInfo = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
								$conn = sqlsrv_connect( $serverName, $connectionInfo);
									
									
								if( $conn === false ) {
										
										$error_transaccion = 1;
									
										if( ($errors = sqlsrv_errors() ) != null) {
										
											foreach( $errors as $error ) {
											
												$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
											}
										}
										
										//echo "ENTRE 1";
										
								}
									
								//Iniciar la transacciï¿½n.
								if ( sqlsrv_begin_transaction( $conn ) === false ) {
										 
										$error_transaccion = 1;
									
										if( ($errors = sqlsrv_errors() ) != null) {
										
											foreach( $errors as $error ) {
											
												$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
											}
										}
										 
										//echo "ENTRE 2";
										 
								}
						
						
						
						
						
							
								$datospartes_1A = explode("******",$datospartes); 
								$longitud_1    = count($datospartes_1A);
								$i             = 1;
								
								//CAPTURA FECHAS SEGUN FECHAS DE FIJACION DE LOS PROCESOS
								//ADICIONANDO AL CAMPO OCULTO fechas_m LA FECHA INICIAL Y FINAL DE
								//LA LIQUIDAION DE CADA PROCESO
								$fechas_tras_vector = explode("******",$fechas_tras);
								
								
								while($i < $longitud_1){
									
									//2 EXPLODE
									$datospartes_1B = explode("//////",$datospartes_1A[$i]);
									
									
									$radicado   = trim($datospartes_1B[0]);
									
									$id_proceso = $modelo->get_id_proceso($radicado);
									$row_M      = $id_proceso->fetch();
									$id         = $row_M[id];
									
									//VALIDA QUE EL ID DEL RADICADO EXISTA Y SE REGISTRE TANTO EN
									//LA BASE DE DATOS LOCAL Y EN JUSTICIA XXI
									if ( !empty($id) ){
									
										$fecha_M    = trim($datospartes_1B[1]);
										
										$fechas_tras_vector_B = explode("//////",$fechas_tras_vector[$i]);
										
										$fechainicial  = trim($fechas_tras_vector_B[0]);
										$datei         = date_create($fechainicial);
										$fi            = date_format($datei, 'Y-m-d H:i:s');
										$fi            = $fi."."."000";
										
										$fechafinal = trim($fechas_tras_vector_B[1]);
										$datef      = date_create($fechafinal);
										$ff         = date_format($datef, 'Y-m-d H:i:s');
										$ff         = $ff."."."000";
										
									
										$observacion = "Traslado Art. 110 "."Fec Fijacion: ".$fecha_M." Fec Inicial: ".$fechainicial." Fec Final: ".$fechafinal;
										
										
										//SOLO TRASLADO 110
										$this->db->exec("UPDATE ubicacion_expediente SET 
														 fecha                 ='$fechalog',
														 idusuario             = '$idusuario',
														 fecha_fin_liquidacion = '$fechafinal' 
														 WHERE id ='$id'");
										
										
										
										$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,fecha_tras110,fecha_tras110_i,fecha_tras110_f,idusuario) 
														 VALUES('$id','$fecharegistro','$observacion','$fecha_M','$fechainicial','$fechafinal','$idusuario')");				 
														 
										
										//OBSERVACION PEDIDA POR SECRETARIO 1 DE FEBRERO 2016
										$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
														 VALUES('$id','$fecharegistro','EN FIRME PASA A CONTADOR PARA LIQUIDAR','$idusuario')");
														 
														 
										
										
										
										
										/*$sql = ("	
													
													INSERT INTO tabla1(radicado,fechar,fechai,fechaf,observacion) 
													VALUES('$radicado',GETDATE(),
													convert(datetime, '$fi', 121),convert(datetime, '$ff', 121),
													'$observacion')
											
						
												");*/				 
										
										
										
										//REGISTRAR ACTUACION EN JUSTICIA XXI
										
										$sininstancia = $radicado;
										$sin          = substr($sininstancia, 0, 21);
											
										$sql = ("	DECLARE @cad integer
													DECLARE @var varchar(50)
					
													SELECT @cad = MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$radicado' 
													
													INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
													A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,
													A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,
													A110BORRTERM,A110RENUTERM) 
													VALUES('$radicado',@cad,'$sin','00','30023325','30023086','Traslado Art. 110','J','SI','C',3,
													convert(datetime, '$fi', 121),convert(datetime, '$ff', 121),
													GETDATE(),NULL,NULL,NULL,NULL,NULL,
													NULL,NULL,NULL,'S','D',GETDATE(),'NO','NO')
											
													SELECT @var = A110CODIPADR FROM T110DRACTUPROC
													WHERE A110CONSACTU = (SELECT MAX(A110CONSACTU) - 1 AS MAXIMO FROM T110DRACTUPROC WHERE A110LLAVPROC ='$radicado') 
													AND A110LLAVPROC ='$radicado'
													
													UPDATE T103DAINFOPROC SET a103descacts ='Traslado Art. 110', a103codiacts ='30023325', a103codipads =@var,
													A103FECHINIS = convert(datetime, '$fi', 121),A103FECHFINS = convert(datetime, '$ff', 121),a103fechdess = GETDATE(),
													A103ANOTACTS ='$observacion'
													WHERE a103llavproc='$radicado';	");
											
											
			
										$params  = array();
										$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
										$stmt = sqlsrv_query( $conn, $sql , $params, $options );
												
												
										if( $stmt === false ) {
												
											$error_transaccion = 1;
												
											if( ($errors = sqlsrv_errors() ) != null) {
													
												foreach( $errors as $error ) {
														
													$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
												}
											}
											
										}	
									
									
									}//FIN if ( !empty($id) ){
	
									$i = $i + 1;
								
								}//FIN WHILE
								
								
								if($error_transaccion) {
								
									//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
									$this->db->rollBack();
									
				
									//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
									sqlsrv_rollback( $conn );
								
									// Cerrar la conexiï¿½n.
									sqlsrv_close( $conn );
									
									
									echo '<script languaje="JavaScript"> 
											
											var ERROR = "'.$msgError.'";
						
											alert("ERROR 1: "+ERROR);
											
											//location.href="index.php?controller=archivo&action=Ciento_Diez_Masivo";
											
										</script>';
								
								}
								else{
								
									//SE TERMINA LA TRANSACCION  
									$this->db->commit();
									
									//SE TERMINA LA TRANSACCION EN JUSTICIA XXI  
									sqlsrv_commit( $conn );	
									
									echo '<script languaje="JavaScript"> 
								
											alert("PROCESO SE REALIZA CORRECTAMENTE");
													
											location.href="index.php?controller=archivo&action=Ciento_Diez_Masivo";
												
										</script>';
								}
								
							 

					
					  
		} 
		catch (Exception $e) {
					
						//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
						$this->db->rollBack();
						
	
						//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
						sqlsrv_rollback( $conn );
					
						// Cerrar la conexiï¿½n.
						sqlsrv_close( $conn );
						
						
						echo '<script languaje="JavaScript"> 
								
								var ERROR = "'.$e->getMessage().'";
						
								alert("ERROR AL REALIZAR EL PROCESO: "+ERROR);
								
								//location.href="index.php?controller=archivo&action=Ciento_Diez_Masivo";
								
							</script>';
						
						
		}
				
		
		
		
		
  	}	
	
	
	
	
	public function busquedad_filtro_TRAS110(){
	
	
			$idusuario  = $_SESSION['idUsuario'];
		
		
			$filtrox;
			
			$filtrof;
			$filtrofe;
			
			$filtro1;
			
		
			$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			$fechaded   = trim($_GET['dato_3']);
			$fechadeh   = trim($_GET['dato_4']);
			
			
			$datox1    = trim($_GET['datox1']);
			
			
		
			if ( !empty($fechad) && !empty($fechah) ) {
			
				
				$filtrof = " AND ( DATE(t1.fecha) >= '$fechad' AND DATE(t1.fecha) <= '$fechah') ";
				
			
			}
			if ( !empty($fechaded) && !empty($fechadeh) ) {
			
				
				$filtrofe = " AND ( t1.fecha_tras110 >= '$fechaded' AND  t1.fecha_tras110 <= '$fechadeh') ";
				
			
			}
			
			
			if ( !empty($datox1) ) {
			
				
				
				$filtro1 = " AND t2.radicado LIKE '%$datox1%' ";
			
			}
			
	
			$filtrox = $filtro1." ".$filtrof." ".$filtrofe;
			
			//echo $filtrox;
			   
			
			
			$listar = $this->db->prepare("	
											SELECT t1.id,t2.radicado,t1.idcorrespondencia,t1.fecha,
											t1.fecha_tras110,t1.fecha_tras110_i,t1.fecha_tras110_f,
											t1.observacion
											FROM (detalle_correspondencia t1 
											INNER JOIN ubicacion_expediente t2 ON t1.idcorrespondencia = t2.id)
											WHERE t1.id >= '1'" .$filtrox. " AND t1.fecha_tras110 IS NOT NULL
											ORDER BY t2.radicado
											
										");
											
											
													

  			$listar->execute();

  			return $listar;
	
  	}	
	
	public function busquedad_actual_TRAS110($fechaactual){
	
	
			$idusuario  = $_SESSION['idUsuario'];
		
		
			$filtrox;
			
			$filtrof;
			
		
			$filtrof = " AND ( DATE(t1.fecha) >= '$fechaactual' AND DATE(t1.fecha) <= '$fechaactual') ";
				
			
			$filtrox = $filtrof;
			
			//echo $filtrox;
			
			$listar = $this->db->prepare("	
											SELECT t1.id,t2.radicado,t1.idcorrespondencia,t1.fecha,
											t1.fecha_tras110,t1.fecha_tras110_i,t1.fecha_tras110_f,
											t1.observacion
											FROM (detalle_correspondencia t1 
											INNER JOIN ubicacion_expediente t2 ON t1.idcorrespondencia = t2.id)
											WHERE t1.id >= '1'" .$filtrox. " AND t1.fecha_tras110 IS NOT NULL
											ORDER BY t2.radicado
											
										");
											
											
													

  			$listar->execute();

  			return $listar;
	
  	}
	
	
	public function Visualizar_Remate_Sin_Aprobar(){
	
			
	
			$idusuario  = $_SESSION['idUsuario'];
			
			
			
			$listar = $this->db->prepare("	
											SELECT * FROM documentos_internos
											WHERE idtipodocumento IN(20,35,36) AND visualizarremate = 0
											
										");
											
											
													

  			$listar->execute();

  			return $listar;
	
  	}
	
	
	public function realizar_aprobar_remates(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		$accion       = "APRUEBA REMATE";
		$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
	
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
					$idrema 		       = trim($datospartes_1B[0]);//idrema
					
					
					//SQL A EJECUTAR 
					
	
					$SQL_1 = "UPDATE documentos_internos SET
							  visualizarremate = 1,
							  fechaaprobacion  = '$fechalog',
							  horaaprobacion   = '$horalog' 
							  WHERE id    = '$idrema'";			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
								
								
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							//$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
				
				
				
				
				
  	}
	
	
	public function realizar_des_aprobar_remates(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "DES-APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
	
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
					$idrema 		       = trim($datospartes_1B[0]);//idrema
					
					
					//SQL A EJECUTAR 
					
	
					$SQL_1 = "UPDATE documentos_internos SET
							  visualizarremate = 0,
							  fechaaprobacion  = NULL,
							  horaaprobacion   = NULL
							  WHERE id    = '$idrema'";			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
					
					$accion  = "DES-APRUEBA REMATE, ID REMATE: ".$idrema;
					$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
								
								
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
					
				
  	}
	
	
	
	
	
	//HORA MILITAR
	public function get_hora_actual_24horas(){
	
		date_default_timezone_set('America/Bogota'); 
		//$horaregistro=date('H:i:s'); 
		$horaregistro = date('H:i');
		
		/*$hora         = date('H');
		
		//REALIZO ESTA PREGUNTA PARA COGER EL RANGO DE HORA
		//DE 01:00 AM - 09:00 AM Y QUITARLES EL CERO INICIAL
		//YA QUE PARA GENERAR EL REPORTE EN VERIFICAR DOCUMENTOS ENTRANTES JUZGADOS
		//EN LA BASE DE DATOS REALIZA ESTE FILTRO SIN ESTE CERO INCIAL
		if($hora >= 1 && $hora <= 9){
			$horaregistro = substr($horaregistro, -4);    // Ej: 08:54 devuelve 8:54
		}*/
		
		return $horaregistro; 
	}
	
	
	
	
	/*PARA MODULO DE GESTION DE CALIDAD*/
	
	public function Registro_Accion(){
	
		
		$modelo     = new archivoModel();
	
		
		//SE OBTIENEN LOS DATOS
		$idusuario   = $_SESSION['idUsuario'];
		
		//$fechasr110  = trim($_POST['fechasr110']);
		$datospartes = trim($_POST['datospartes']);
		//$fechas_tras = trim($_POST['fechas_tras']);
		
		//$fecha_hora_mysql = $modelo->get_fecha_hora_mysql();
		$horaregistro  = $modelo->get_hora_actual_24horas();
	
		//DATOS PARA EL REGISTRO DEL LOG
		
		//$modelo     = new signotModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		
		/*$accion  = "REGISTRA CORRESPONDENCIA SIN RADICADO ASOCIADO";
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;*/
		
	
		try {  
					
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
						
						
						
					
								$datospartes_1A = explode("******",$datospartes); 
								$longitud_1    = count($datospartes_1A);
								$i             = 1;
								
								
					
								while($i < $longitud_1){
									
									//2 EXPLODE
									$datospartes_1B = explode("//////",$datospartes_1A[$i]);
									
									$id_clase_1         = explode("-",trim($datospartes_1B[0]));
									$id_clase           = $id_clase_1[0];
									
									$id_numeral_norma_1 = explode("-",trim($datospartes_1B[1]));
									$id_numeral_norma   = $id_numeral_norma_1[0];
									
									$descripcion        = utf8_decode(trim($datospartes_1B[2]));
									
									$id_pr_1            = explode("-",trim($datospartes_1B[3]));
									$id_pr              = $id_pr_1[0];
									
									$id_ai              = utf8_decode(trim($datospartes_1B[4]));
									
									$analisis_causas    = utf8_decode(trim($datospartes_1B[5]));
									
									$id_metodologia_1   = explode("-",trim($datospartes_1B[6]));
									$id_metodologia     = $id_metodologia_1[0];
									
									
									$id_generada_1      = explode("-",trim($datospartes_1B[7]));
									$id_generada        = $id_generada_1[0];
									
									
									/*$radicado   = trim($datospartes_1B[0]);
									
									$id_proceso = $modelo->get_id_proceso($radicado);
									$row_M      = $id_proceso->fetch();
									$id         = $row_M[id];*/
									
									//VALIDA QUE EL ID DEL RADICADO EXISTA Y SE REGISTRE TANTO EN 
									//LA BASE LOCAL Y EN JUSTICIA XXI
									//if ( !empty($id) ){
			
										
									
										$this->db->exec("INSERT INTO gc_acciones (id_clase,id_numeral_norma,descripcion,id_pr,id_ai,analisis_causas,id_metodologia,id_generada,
														 fecha_registro,hora_registro,usuario_registro,estado) 
														 VALUES('$id_clase','$id_numeral_norma','$descripcion','$id_pr','$id_ai','$analisis_causas','$id_metodologia','$id_generada',
														 '$fechalog','$horaregistro','$idusuario',0)");
														 
										
														 
														 
									
						
									//}//FIN if ( !empty($id) ) {
									
									
	
									$i = $i + 1;
									
									
									
								
								}//FIN WHILE
								
								
														 
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
									
								//SE TERMINA LA TRANSACCION EN JUSTICIA XXI  
								//sqlsrv_commit( $conn );	
									
								echo '<script languaje="JavaScript"> 
								
										alert("PROCESO SE REALIZA CORRECTAMENTE");
													
										location.href="index.php?controller=archivo&action=Adicionar_Accion_2";
												
									</script>';
								
							 

					
					  
		} 
		catch (Exception $e) {
					
						//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
						$this->db->rollBack();
						
	
						//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
						//sqlsrv_rollback( $conn );
					
						// Cerrar la conexiï¿½n.
						//sqlsrv_close( $conn );
						
						
						echo '<script languaje="JavaScript"> 
								
								var ERROR = "'.$e->getMessage().'";
						
								alert("ERROR AL REALIZAR EL PROCESO: "+ERROR);
								
								//location.href="index.php?controller=archivo&action=Adicionar_Accion_2";
								
							</script>';
						
						
		}
				
		
		
		
		
  	}
	
	
	
	
	//-------CARGAR ARCHIVOS .CSV DE ACCIONES Y ACTIVIDADES------------------------
	
	public function cargar_acciones_CSV(){
	
		
		set_time_limit (240000000);
		
		$modelo     = new archivoModel();
		
		$idusuario  = $_SESSION['idUsuario'];
	
		$carpeta    = "CARGAMASIVA";
		
		//$fechacarga = trim($_POST['fechae_2']);
		
		//FECHA DE CARGA AL SISTEMA DEL PROCESO
      	//$fechacarga_2 = date("Y-m-d"); 
		
		//setlocale(LC_TIME, "Spanish");
		//$fechavisual = strtoupper( strftime('%d %B de %Y', strtotime($fechacarga)) ); 
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		
		/*$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
		
		$tiporegistro = "PROCESOS DE ".$fechavisual." MASIVO";
		$accion       = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;*/
		
		//--------------------------------------------------------------------------------------------
		
		//$tipoarchivo = trim($_POST['tipoarchivo']);
		
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE ES CON EL QUE SE LOGEA EL USUARIO  
		//$nom = "jvalenciao";
		$nom = trim($_SESSION['idUsuario']);
		
	
		//AQUI SE CREA EL DIRECTORIO
		if(is_dir($carpeta."/".$nom)){$bandera=0;}
		else{mkdir($carpeta."/".$nom, 0, true);}
		
		//datos del arhivo 
		$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		//echo $tipo_archivo;
		$tamano_archivo = $_FILES['archivo']['size']; 
		
		
		if (! (strpos($tipo_archivo, "vnd.ms-excel")) && ($tamano_archivo < 100000000) )  { 
			
			//echo "EXTENSION"."**********";
			
			echo '<script languaje="JavaScript"> 
			
	
				alert("LA EXTENSION O LA LONGITUD DEL ARCHIVO NO ES CORRECTA");
				
				location.href="index.php?controller=archivo&action=Cargar_Acciones_CSV";
						
			</script>';
			
			
		}
		else{//1 
		
			
			
			if ( file_exists($carpeta."/".$nom.'/'.$nombre_archivo) ) {
				
			
				$idunico = time();
					
				$nombre_archivo = $idunico."_".$nombre_archivo;
				
				
			}
			
			
			if ( move_uploaded_file($_FILES['archivo']['tmp_name'], $carpeta."/".$nom.'/'.$nombre_archivo) ){
			
				$lineas = file( $carpeta."/".$nom.'/'.$nombre_archivo,FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
				$long   = count($lineas);
				

				//OBETNER SEPARAR DE LOS REGISTROS YA QUE EN UNOS EQUIPOS DE COMPUTO ES ---> COMA(,)
				//Y EN OTROS ---> PUNTO Y COMA (;)
				//$separador = $modelo->Obtener_Separador( trim($lineas[1]) );
				
				

				try {  
					
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
						
						
								/*$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");*/
								
								
								//ASI CUANDO EL ARCHIVO NO TIENE ENCABEZADOS
								$i=1;//PARA NO TOMAR LOS ENCABEZADOS
								$bandera_guia = 0;
								
								while($i < $long){
									
									//echo $lineas[$i]."\n";
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR COMAS
									$fila = explode(";",$lineas[$i]);
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR PUNTO Y COMA
									//$fila = explode(";",$lineas[$i]);
									
									//$fila = explode($separador,$lineas[$i]);
									
		
									
									//$nombre_destinatario = utf8_encode(trim($fila[2]));
									
								
									$id_clase         = trim($fila[0]);
									$id_numeral_norma = trim($fila[1]);
									//$descripcion      = utf8_encode(trim($fila[2]));
									$descripcion      = trim($fila[2]);
									$id_pr            = trim($fila[3]);
									$id_ai            = trim($fila[4]);
									//$analisis_causas  = utf8_encode(trim($fila[5]));
									$analisis_causas  = trim($fila[5]);
									$id_metodologia   = trim($fila[6]);
									$id_generada      = trim($fila[7]);
									$fechalog         = trim($fila[8]);
									$horaregistro     = trim($fila[9]);
									
									

									$this->db->exec("INSERT INTO gc_acciones (
									                 id_clase,
													 id_numeral_norma,descripcion,
													 id_pr,
													 id_ai,
													 analisis_causas,
													 id_metodologia,
													 id_generada,
												     fecha_registro,
													 hora_registro,
													 usuario_registro,
													 estado) 
													 VALUES(
													 '$id_clase',
													 '$id_numeral_norma',
													 '$descripcion',
													 '$id_pr',
													 '$id_ai',
													 '$analisis_causas',
													 '$id_metodologia',
													 '$id_generada',
													 '$fechalog',
													 '$horaregistro',
													 '$idusuario',
													 0)");
														 
										
											
			
									$i= $i + 1;
																 
								}//FIN WHILE while($i < $long){		
								
								
							//SE TERMINA LA TRANSACCION  
							$this->db->commit();
									
					
							echo '<script languaje="JavaScript"> 
							
								
									alert("PROCESO SE REALIZA CORRECTAMENTE");
								
									location.href="index.php?controller=archivo&action=Cargar_Acciones_CSV";
										
								</script>';
								
						
						
				}
				catch (Exception $e) {
			
					//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
					$this->db->rollBack();
				
					//echo "Fallo: " . $e->getMessage();
					
					
					echo '<script languaje="JavaScript"> 
				
							
							var ERROR = "'.$e->getMessage()." REGISTROS ARCHIVO: ".$long.'";
		
							alert("ERROR 2: "+ERROR);
					
							location.href="index.php?controller=archivo&action=Cargar_Acciones_CSV";
							
						</script>';
			
					
				}		
						
						
				
				
			}
			
				
			
		
		}//FIN ELSE 1
			
		

	}
	
	
	
	
	public function cargar_actividad_CSV(){
	
		
		set_time_limit (240000000);
		
		$modelo     = new archivoModel();
		
		//$idusuario  = $_SESSION['idUsuario'];
	
		$carpeta    = "CARGAMASIVA";
		
		//$fechacarga = trim($_POST['fechae_2']);
		
		//FECHA DE CARGA AL SISTEMA DEL PROCESO
      	//$fechacarga_2 = date("Y-m-d"); 
		
		//setlocale(LC_TIME, "Spanish");
		//$fechavisual = strtoupper( strftime('%d %B de %Y', strtotime($fechacarga)) ); 
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		
		/*$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
		
		$tiporegistro = "PROCESOS DE ".$fechavisual." MASIVO";
		$accion       = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;*/
		
		//--------------------------------------------------------------------------------------------
		
		//$tipoarchivo = trim($_POST['tipoarchivo']);
		
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE ES CON EL QUE SE LOGEA EL USUARIO  
		//$nom = "jvalenciao";
		$nom = trim($_SESSION['idUsuario']);
		
	
		//AQUI SE CREA EL DIRECTORIO
		if(is_dir($carpeta."/".$nom)){$bandera=0;}
		else{mkdir($carpeta."/".$nom, 0, true);}
		
		//datos del arhivo 
		$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		//echo $tipo_archivo;
		$tamano_archivo = $_FILES['archivo']['size']; 
		
		
		if (! (strpos($tipo_archivo, "vnd.ms-excel")) && ($tamano_archivo < 100000000) )  { 
			
			//echo "EXTENSION"."**********";
			
			echo '<script languaje="JavaScript"> 
			
	
				alert("LA EXTENSION O LA LONGITUD DEL ARCHIVO NO ES CORRECTA");
				
				location.href="index.php?controller=archivo&action=Cargar_Actividad_CSV";
						
			</script>';
			
			
		}
		else{//1 
		
			
			
			if ( file_exists($carpeta."/".$nom.'/'.$nombre_archivo) ) {
				
			
				$idunico = time();
					
				$nombre_archivo = $idunico."_".$nombre_archivo;
				
				
			}
			
			
			if ( move_uploaded_file($_FILES['archivo']['tmp_name'], $carpeta."/".$nom.'/'.$nombre_archivo) ){
			
				$lineas = file( $carpeta."/".$nom.'/'.$nombre_archivo,FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
				$long   = count($lineas);
				

				//OBETNER SEPARAR DE LOS REGISTROS YA QUE EN UNOS EQUIPOS DE COMPUTO ES ---> COMA(,)
				//Y EN OTROS ---> PUNTO Y COMA (;)
				//$separador = $modelo->Obtener_Separador( trim($lineas[1]) );
				
				

				try {  
					
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
						
						
								/*$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");*/
								
								
								//ASI CUANDO EL ARCHIVO NO TIENE ENCABEZADOS
								$i=1;//PARA NO TOMAR LOS ENCABEZADOS
								$bandera_guia = 0;
								
								while($i < $long){
									
									//echo $lineas[$i]."\n";
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR COMAS
									$fila = explode(";",$lineas[$i]);
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR PUNTO Y COMA
									//$fila = explode(";",$lineas[$i]);
									
									//$fila = explode($separador,$lineas[$i]);
									
		
									
									//$nombre_destinatario = utf8_encode(trim($fila[2]));
									
								
									$idaccion       = trim($fila[0]);
									$fecha_inicial  = trim($fila[1]);
									$fecha_final    = trim($fila[2]);
									$des            = trim($fila[3]);
									$idrespobsable  = trim($fila[4]);
									$fecha_registro = trim($fila[5]);
									$hora_registro  = trim($fila[6]);
									$idusuario      = trim($fila[7]);
									$gestion        = trim($fila[8]);
									$estado         = trim($fila[9]);
									$fecha_gestion  = trim($fila[10]);
									$hora_gestion   = trim($fila[11]);
									
									
									
									$this->db->exec("INSERT INTO gc_actividad(
									                 idaccion,
													 fecha_inicial,
													 fecha_final,
													 des,
													 idrespobsable,
												     fecha_registro,
													 hora_registro,
													 usuario_registro,
													 gestion,
													 estado,
													 fecha_gestion,
													 hora_gestion)
												     VALUES(
													 '$idaccion',
													 '$fecha_inicial',
													 '$fecha_final',
													 '$des',
													 '$idrespobsable',
												     '$fecha_registro',
													 '$hora_registro',
													 '$idusuario',
													 '$gestion',
													 '$estado',
													 '$fecha_gestion',
													 '$hora_gestion'
													 )");
														 
										
											
			
									$i= $i + 1;
																 
								}//FIN WHILE while($i < $long){		
								
								
							//SE TERMINA LA TRANSACCION  
							$this->db->commit();
									
					
							echo '<script languaje="JavaScript"> 
							
								
									alert("PROCESO SE REALIZA CORRECTAMENTE");
								
									location.href="index.php?controller=archivo&action=Cargar_Actividad_CSV";
										
								</script>';
								
						
						
				}
				catch (Exception $e) {
			
					//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
					$this->db->rollBack();
				
					//echo "Fallo: " . $e->getMessage();
					
					
					echo '<script languaje="JavaScript"> 
				
							
							var ERROR = "'.$e->getMessage()." REGISTROS ARCHIVO: ".$long.'";
		
							alert("ERROR 2: "+ERROR);
					
							location.href="index.php?controller=archivo&action=Cargar_Actividad_CSV";
							
						</script>';
			
					
				}		
						
						
				
				
			}
			
				
			
		
		}//FIN ELSE 1
			
		

	}
	
		
	
	
	
	
	
	//-------FIN CARGAR ARCHIVOS .CSV DE ACCIONES Y ACTIVIDADES---------------------
	
	
	
	
	
	public function busquedad_actual_ACCION($fechaactual){
	
	
			$idusuario  = $_SESSION['idUsuario'];
		
		
			/*$filtrox;
			
			$filtrof;
			
		
			$filtrof = " AND ( t1.fecha_registro >= '$fechaactual' AND t1.fecha_registro <= '$fechaactual') ";
				
			
			$filtrox = $filtrof;*/
			
			//WHERE t1.id >= '1'" .$filtrox. " AND t1.fecha_registro IS NOT NULL
			
			//echo $filtrox;
			
			$listar = $this->db->prepare("	
											SELECT t1.id,t2.des AS clase,t3.des AS numeral,t1.descripcion,t1.analisis_causas,
											t4.des AS procesoresponsable,/*t5.des AS procesoafectado*/t1.id_ai,t6.des AS metodologia,t7.des AS generada,
											t1.fecha_registro,t1.hora_registro,t1.estado
											FROM (((((gc_acciones t1
											LEFT JOIN gc_lista t2 ON t1.id_clase = t2.id)
											LEFT JOIN gc_lista t3 ON t1.id_numeral_norma = t3.id)
											LEFT JOIN gc_lista t4 ON t1.id_pr = t4.id)
											/*LEFT JOIN gc_lista t5 ON t1.id_ai = t5.id)*/
											LEFT JOIN gc_lista t6 ON t1.id_metodologia = t6.id)
											LEFT JOIN gc_lista t7 ON t1.id_generada = t7.id)
											WHERE t1.id >= '1' 
											ORDER BY t1.id DESC
											LIMIT 30
											
										");
											
											
													

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function busquedad_filtro_ACCION(){
	
	
			$idusuario  = $_SESSION['idUsuario'];
		
		
			$filtrox;
			
			$filtrof;
			
			
			$filtro1;
			$filtro2;
			$filtro3;
			$filtro4;
			$filtro5;
			$filtro6;
			$filtro7;
			
		
			$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			
			$datox1    = trim($_GET['datox1']);
			$datox2    = trim($_GET['datox2']);
			$datox3    = trim($_GET['datox3']);
			$datox4    = trim($_GET['datox4']);
			$datox5    = trim($_GET['datox5']);
			$datox6    = trim($_GET['datox6']);
			$datox7    = trim($_GET['datox7']);
			
			
		
			if ( !empty($fechad) && !empty($fechah) ) {
			
				
				//$filtrof = " AND ( DATE(t1.fecha) >= '$fechad' AND DATE(t1.fecha) <= '$fechah') ";
				
				$filtrof = " AND ( t1.fecha_registro >= '$fechad' AND t1.fecha_registro <= '$fechah') ";
				
			
			}
			
			
			
			if ( !empty($datox1) ) {
			
				
				
				//$filtro1 = " AND t2.radicado LIKE '%$datox1%' ";
				
				$filtro1 = " AND t1.id = '$datox1' ";
			
			}
			
			
			if ( !empty($datox2) ) {
			
				
				$filtro2 = " AND t1.id_clase = '$datox2' ";
			
			}
			
			if ( !empty($datox3) ) {
			
				
				$filtro3 = " AND t1.id_numeral_norma = '$datox3' ";
			
			}
			
			if ( !empty($datox4) ) {
			
				
				$filtro4 = " AND t1.id_pr = '$datox4' ";
			
			}
			
			if ( !empty($datox5) ) {
			
				
				$filtro5 = " AND t1.id_ai LIKE '%$datox5%' ";
			
			}
			
			if ( !empty($datox6) ) {
			
				
				$filtro6 = " AND t1.id_metodologia = '$datox6' ";
			
			}
			
			if ( !empty($datox7) ) {
			
				
				$filtro7 = " AND t1.id_generada = '$datox7' ";
			
			}
	
			$filtrox = $filtro1." ".$filtro2." ".$filtro3." ".$filtro4." ".$filtro5." ".$filtro6." ".$filtro7." ".$filtrof;
			
			//echo $filtrox;
			 
			 
			
			$listar = $this->db->prepare("	
											SELECT t1.id,t2.des AS clase,t3.des AS numeral,t1.descripcion,t1.analisis_causas,
											t4.des AS procesoresponsable,/*t5.des AS procesoafectado*/t1.id_ai,t6.des AS metodologia,t7.des AS generada,
											t1.fecha_registro,t1.hora_registro,t1.estado
											FROM (((((gc_acciones t1
											LEFT JOIN gc_lista t2 ON t1.id_clase = t2.id)
											LEFT JOIN gc_lista t3 ON t1.id_numeral_norma = t3.id)
											LEFT JOIN gc_lista t4 ON t1.id_pr = t4.id)
											/*LEFT JOIN gc_lista t5 ON t1.id_ai = t5.id)*/
											LEFT JOIN gc_lista t6 ON t1.id_metodologia = t6.id)
											LEFT JOIN gc_lista t7 ON t1.id_generada = t7.id)
											WHERE t1.id >= '1'" .$filtrox. "
											ORDER BY t1.id DESC
											LIMIT 30
											
										");   
			
  			$listar->execute();

  			return $listar;
	
  	}
	
	public function registrar_actividad(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
		
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
		
					$idaccion      = trim($datospartes_1B[0]);
					$fecha_inicial = trim($datospartes_1B[1]);
					$fecha_final   = trim($datospartes_1B[2]);
					$des           = utf8_decode(trim($datospartes_1B[3]));
					
					$idrespobsable_1 = explode("-",trim($datospartes_1B[4]));
					$idrespobsable   = $idrespobsable_1[0];
					
					
					//SQL A EJECUTAR 
					
	
					$SQL_1 = "INSERT INTO gc_actividad(idaccion,fecha_inicial,fecha_final,des,idrespobsable,
					          fecha_registro,hora_registro,usuario_registro,estado)
							  VALUES('$idaccion','$fecha_inicial','$fecha_final','$des','$idrespobsable',
							  '$fechalog','$horalog','$idusuario',0)";			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
					//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
					//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
								
								
								/*$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");*/
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
				
			
				
				
  	}
	
	public function get_procentaje_actividad($d1M){
	
	
		$listar     = $this->db->prepare("SELECT * FROM gc_actividad 
		                                  WHERE idaccion = '$d1M'");
											 
			
  		$listar->execute();
		$cantidad_actividades = $listar->rowCount();
		
		
		$listar     = $this->db->prepare("SELECT * FROM gc_actividad 
		                                  WHERE idaccion = '$d1M' AND estado = 1");
											 
			
  		$listar->execute();
		$cantidad_terminadas = $listar->rowCount();
		
		
		$calculo = ($cantidad_terminadas * 100) / $cantidad_actividades;
		
  		$calculo_porcentaje = number_format($calculo, 0, ',', '.')."%";
	
		return $calculo_porcentaje;
	
  	}
	
	
	public function Visualizar_Actividad_Usuario(){
	
			
	
			$idusuario  = $_SESSION['idUsuario'];
			
			
			
			$listar = $this->db->prepare("	
											
											SELECT * FROM gc_actividad
											WHERE idrespobsable = '$idusuario' AND estado = 0 
											AND fecha_final >= (SELECT DATE(NOW()));
											
										");
											
											
													

  			$listar->execute();

  			return $listar;
	
  	}
	
	
	public function busquedad_actual_ACTIVIDAD(){
	
	
			$idusuario  = $_SESSION['idUsuario'];
		
			if($idusuario == 8 || $idusuario == 38){
			
			
			$listar = $this->db->prepare("	
											SELECT t1.id,t1.idaccion,t1.fecha_inicial,t1.fecha_final,t1.des,t2.empleado,
											t1.fecha_registro,t1.hora_registro,t1.estado,t1.gestion,t1.rutaarchivo,t1.fecha_gestion,t1.hora_gestion 
											FROM (gc_actividad t1 
											INNER JOIN pa_usuario t2 ON t1.idrespobsable = t2.id)
											
											ORDER BY t1.id DESC
											
										");
			
			}
			else{
			
			$listar = $this->db->prepare("	
											SELECT t1.id,t1.idaccion,t1.fecha_inicial,t1.fecha_final,t1.des,t2.empleado,
											t1.fecha_registro,t1.hora_registro,t1.estado,t1.gestion,t1.rutaarchivo,t1.fecha_gestion,t1.hora_gestion  
											FROM (gc_actividad t1 
											INNER JOIN pa_usuario t2 ON t1.idrespobsable = t2.id)
											WHERE t1.idrespobsable = '$idusuario'
											ORDER BY t1.id DESC
											
										");
			}
											
											
													

  			$listar->execute();

  			return $listar;
	
  	}
	
	
	public function registrar_gestion(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario = $_SESSION['idUsuario'];
		$id_accion = trim($_POST['id_accion']);
		$gestion   = utf8_decode(trim($_POST['gestion']));
		
		//***********************************PARA EL ARCHIVO***************************************

		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "ACTIVIDAD";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		$nom = trim($_SESSION['idUsuario'])."/".$id_accion;
		
		//AQUI SE CREA EL DIRECTORIO
		if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		else{mkdir($raiz.'/'.$nom, 0, true);}
		
		//datos del arhivo 
		$nombre_archivo = $_FILES['archivo']['name']; 
		//echo $nombre_archivo;
		$tipo_archivo   = $_FILES['archivo']['type'];
		//echo $tipo_archivo;
		$tamano_archivo = $_FILES['archivo']['size']; 
		//echo $tamano_archivo;
			
		
		//SQL A EJECUTAR 
					
		/*$SQL_1 = "UPDATE gc_actividad SET 
				  gestion       = '$gestion',
				  estado        = 1,
				  fecha_gestion = '$fechalog',
				  hora_gestion  = '$horalog'
				  WHERE id      = '$id_accion'";*/			
											
						
		$msg = " ";
					
		
		if ($nombre_archivo != "") {//IF QUE ME IDENTIFICA QUE SE SELECCIONO UN ARCHIVO
		
		
			if (! ( strpos($tipo_archivo, "vnd.ms-excel") //csv
				|| strpos($tipo_archivo, "vnd.openxmlformats-officedocument.spreadsheetml.sheet") //xlsx
				|| strpos($tipo_archivo, "vnd.openxmlformats-officedocument.wordprocessingml.document")//docx
				|| strpos($tipo_archivo, "pdf") //pdf
				) && ($tamano_archivo < 100000000) )  {			
				
				
				$msg = "LA EXTENSION O LA LONGITUD DEL ARCHIVO NO ES CORRECTA: ".$tipo_archivo;
				echo $msg;
		
			}
			else{//1 
					
				if ( file_exists($raiz.'/'.$nom.'/'.$nombre_archivo) ) {
						
						
					//OBTENGO UN ID PARA IDENTIFICAR UN ARCHIVO CON EL MISMO NOMBRE
					//PARA AGREGARLE EL ID A ESE NOMBRE Y QUE EL SISTEMA CONTINUE SIN AVISO DE YA EXISTE UN ARCHIVO CON ESE NOMBRE
					$idunico = time();
						
					$nombre_archivo = $idunico."_".$nombre_archivo;
						
						
				}
				
				if ( move_uploaded_file($_FILES['archivo']['tmp_name'], $raiz.'/'.$nom.'/'.$nombre_archivo) ){//3
							 
					//echo "EL ARCHIVO HA SUBIDO AL SERVIDOR CORRECTAMENTE."."\n"; 
					$rutaarchivo = utf8_decode($raiz.'/'.$nom.'/'.$nombre_archivo);		
					 
							
					try {  
									
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
										
											
											
							/*$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");*/
											
											
					
							$this->db->exec(" UPDATE gc_actividad SET 
											  gestion       = '$gestion',
											  estado        = 1,
											  fecha_gestion = '$fechalog',
											  hora_gestion  = '$horalog',
											  rutaarchivo   = '$rutaarchivo'
											  WHERE id      = '$id_accion' ");
											
											
											
							$msg = "1.PROCESO SE REALIZA CORRECTAMENTE";
																		
							//SE TERMINA LA TRANSACCION  
							$this->db->commit();
															
							echo $msg;
											
									
									  
						} 
						catch (Exception $e) {
									
										
							$msg = "1.ERROR EN PROCESO: ".$e->getMessage();
										
										
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
										
									
							echo $msg;
										
							
										
						}
					
				}
				else{ 
							
					$msg = "Error al subir el fichero.";		 
					echo $msg;
				
																		
				}
				
			
			}//FIN ELSE 1	
	
		
		}//FIN if ($nombre_archivo != "") {//IF QUE ME IDENTIFICA QUE SE SELECCIONO UN ARCHIVO
		else{
		

			try {  
									
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
										
											
					$this->db->exec(" UPDATE gc_actividad SET 
									  gestion       = '$gestion',
									  estado        = 1,
									  fecha_gestion = '$fechalog',
									  hora_gestion  = '$horalog'
									  WHERE id      = '$id_accion' ");
											
											
											
					$msg = "2.PROCESO SE REALIZA CORRECTAMENTE";
																		
					//SE TERMINA LA TRANSACCION  
					$this->db->commit();
															
					echo $msg;
											
									
									  
			} 
			catch (Exception $e) {
									
										
				$msg = "2.ERROR EN PROCESO: ".$e->getMessage();
										
										
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
										
									
				echo $msg;
										
							
										
			}
		
	
		}
		
				
						
					
								
  	}
	
	
	public function busquedad_filtro_ACTIVIDAD(){
	
	
			$idusuario  = $_SESSION['idUsuario'];
		
		
			$filtrox;
			
			$filtrof;
			
			
			$filtro1;
			
		
			$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			
			$datox1    = trim($_GET['datox1']);
			
			
			
		
			if ( !empty($fechad) && !empty($fechah) ) {
			
				
				//$filtrof = " AND ( DATE(t1.fecha) >= '$fechad' AND DATE(t1.fecha) <= '$fechah') ";
				
				$filtrof = " AND ( t1.fecha_registro >= '$fechad' AND t1.fecha_registro <= '$fechah') ";
				
			
			}
			
			
			
			if ( !empty($datox1) ) {
			
				
				
				//$filtro1 = " AND t2.radicado LIKE '%$datox1%' ";
				
				$filtro1 = " AND t1.id = '$datox1' ";
			
			}
			
			
			
	
			$filtrox = $filtro1." ".$filtrof;
			
			//echo $filtrox;
			 
			 
			
			if($idusuario == 8 || $idusuario == 38){
			
			
			$listar = $this->db->prepare("	
											SELECT t1.id,t1.idaccion,t1.fecha_inicial,t1.fecha_final,t1.des,t2.empleado,
											t1.fecha_registro,t1.hora_registro,t1.estado,t1.gestion,t1.rutaarchivo,t1.fecha_gestion,t1.hora_gestion 
											FROM (gc_actividad t1 
											INNER JOIN pa_usuario t2 ON t1.idrespobsable = t2.id)
											WHERE t1.id >= '1'" .$filtrox. "  
											ORDER BY t1.id DESC
											
										");
			
			}
			else{
			
			$listar = $this->db->prepare("	
											SELECT t1.id,t1.idaccion,t1.fecha_inicial,t1.fecha_final,t1.des,t2.empleado,
											t1.fecha_registro,t1.hora_registro,t1.estado,t1.gestion,t1.rutaarchivo,t1.fecha_gestion,t1.hora_gestion 
											FROM (gc_actividad t1 
											INNER JOIN pa_usuario t2 ON t1.idrespobsable = t2.id)
											WHERE t1.id >= '1'" .$filtrox. " AND idrespobsable = '$idusuario' 
											ORDER BY t1.id DESC
											
										");
			}   
			
  			$listar->execute();

  			return $listar;
	
  	}
	
	
	public function finalizar_accion(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
		
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					//$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
		
					//$idaccion      = trim($datospartes_1B[0]);
					
					$idaccion      = trim($datospartes_1A[$i]);
					
					
					//SQL A EJECUTAR 
					
	
					$SQL_1 = "	UPDATE gc_acciones SET
								fecha_edita   = '$fechalog',
								hora_edita    = '$horalog',
								usuario_edita = '$idusuario',
								estado        = 1	
								WHERE id = '$idaccion' ";			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
					//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
					//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
								
								
								/*$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");*/
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
				
			
				
				
  	}
	
	
	function get_lista_con_filtro($campo_a_mostrar,$campo_a_insertar,$nombre_tabla,$campo_filtro,$valor_filtro,$campo_a_ordenar){

		
		$listar     = $this->db->prepare("SELECT * FROM ".$nombre_tabla." WHERE ".$campo_filtro. "= ".$valor_filtro." ORDER BY ".$campo_a_ordenar);
		
		$listar->execute();

  		return $listar;
	}
	
	/*FIN PARA MODULO DE GESTION DE CALIDAD*/
	
	
	function get_lista_con_filtro_IN($campo_a_mostrar,$campo_a_insertar,$nombre_tabla,$campo_filtro,$valor_filtro,$campo_a_ordenar){

		
		$listar     = $this->db->prepare("SELECT * FROM ".$nombre_tabla." WHERE ".$campo_filtro." ".$valor_filtro." ORDER BY ".$campo_a_ordenar);
		
		$listar->execute();

  		return $listar;
	}
	
	
	public function registrar_revision(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
		
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
		
					$idaccion      = trim($datospartes_1B[0]);
					$idpregunta    = trim($datospartes_1B[1]);
					$sino          = trim($datospartes_1B[2]);
					$observacion   = utf8_decode(trim($datospartes_1B[3]));
					
					//SQL A EJECUTAR 
					
	
					$SQL_1 = "INSERT INTO gc_revision_detalle(idaccion,idpregunta,sino,observacion,
					          fecha_registro,hora_registro,usuario_registro)
							  VALUES('$idaccion','$idpregunta','$sino','$observacion',
							  '$fechalog','$horalog','$idusuario')";			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
					//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
					//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
								
								
								/*$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");*/
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
				
			
				
				
  	}
	
	
	
	public function get_cant_preguntas($d1M){
	
	
		/*$listar     = $this->db->prepare("SELECT COUNT(id) AS preguntas
										  FROM gc_revision_detalle WHERE idaccion = '$d1M'");*/
										  
		$listar     = $this->db->prepare("SELECT * FROM gc_revision_detalle WHERE idaccion = '$d1M'");								  
											 
			
  		$listar->execute();
		$cantidad_preguntas = $listar->rowCount();
		
		return $cantidad_preguntas;
	
  	}
	
	
	
	
	//-------------NUEVO MODULO ADICIONAR OBSERVACIONES SERVIDORES DE JUZGADO POR JUEZ----------------
	
	public function busquedad_actual_EXPEDIENTE($fechaactual){
	
	
			$idusuario  = $_SESSION['idUsuario'];
		
		
			
			$listar = $this->db->prepare("	
											SELECT id,radicado,fecha,
											cedula_demandante,demandante,cedula_demandado,demandado,
											fechasalida
											FROM ubicacion_expediente
											WHERE (idjuzgado_reparto = 2 OR idjuzgadodestino = 2)
											AND (fechasalida IS NOT NULL OR fechasalida != '0000-00-00')
											AND (posicion IS NOT NULL OR posicion IS NULL OR posicion = '')
											AND (fechadevolucion IS NULL OR fechadevolucion = '0000-00-00')
											ORDER BY fechasalida DESC
											LIMIT 5
											
										");
											
											
													

  			$listar->execute();

  			return $listar;
	
  	}
	
	
	public function busquedad_actual_FILTRO_EXPEDIENTE($dato_filtro){
	
	
			$idusuario  = $_SESSION['idUsuario'];
		
		
			
			$listar = $this->db->prepare("	
											SELECT id,radicado,fecha,
											cedula_demandante,demandante,cedula_demandado,demandado,
											fechasalida
											FROM ubicacion_expediente
											WHERE (idjuzgado_reparto = 2 OR idjuzgadodestino = 2)
											AND (fechasalida IS NOT NULL OR fechasalida != '0000-00-00')
											AND (posicion IS NOT NULL OR posicion IS NULL OR posicion = '')
											AND (fechadevolucion IS NULL OR fechadevolucion = '0000-00-00')
											AND radicado LIKE '%$dato_filtro%'
											ORDER BY fechasalida DESC
											
											
										");
											
											
													

  			$listar->execute();

  			return $listar;
	
  	}
	
	
	
	
	public function asignar_observacion(){
	
		
		$modelo     = new archivoModel();
	
		
		//SE OBTIENEN LOS DATOS
		$idusuario   = $_SESSION['idUsuario'];
		
		//$fechasr110  = trim($_POST['fechasr110']);
		$datospartes = trim($_POST['datospartes']);
		//$fechas_tras = trim($_POST['fechas_tras']);
		
		//$fecha_hora_mysql = $modelo->get_fecha_hora_mysql();
		$horaregistro  = $modelo->get_hora_actual_24horas();
	
		//DATOS PARA EL REGISTRO DEL LOG
		
		//$modelo     = new signotModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		date_default_timezone_set('America/Bogota'); 
      	$fechaobs=date('Y-m-d g:i');
		
		
		/*$accion  = "REGISTRA CORRESPONDENCIA SIN RADICADO ASOCIADO";
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;*/
		
	
		try {  
					
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
						
						
						
					
								$datospartes_1A = explode("******",$datospartes); 
								$longitud_1    = count($datospartes_1A);
								$i             = 1;
								
								
					
								while($i < $longitud_1){
									
									//2 EXPLODE
									$datospartes_1B = explode("//////",$datospartes_1A[$i]);
									
									$juz_idradicado   = trim($datospartes_1B[0]);
									
									
									$asignado_1       = explode("-",trim($datospartes_1B[2]));
									$id_user_asignada = $asignado_1[0];
									
									//$descripcion      = utf8_decode( trim($datospartes_1B[3]).", ASIGNADA A: ".trim($datospartes_1B[2]));
									
									$descripcion      = utf8_decode( trim($datospartes_1B[3]) );
									
									$fecha_obs_i      = trim($datospartes_1B[4]);
									
									$fecha_obs_f      = trim($datospartes_1B[5]);
									
									
									
									/*$radicado   = trim($datospartes_1B[0]);
									
									$id_proceso = $modelo->get_id_proceso($radicado);
									$row_M      = $id_proceso->fetch();
									$id         = $row_M[id];*/
									
									//VALIDA QUE EL ID DEL RADICADO EXISTA Y SE REGISTRE TANTO EN 
									//LA BASE LOCAL Y EN JUSTICIA XXI
									//if ( !empty($id) ){
			
										
									
										$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,
										                 id_user_asignada,fecha_obs_i,fecha_obs_f,estadoobs,idusuario) 
														 VALUES('$juz_idradicado','$fechaobs','$descripcion',
														 '$id_user_asignada','$fecha_obs_i','$fecha_obs_f',0,'$idusuario')");
														 
										
														 
														 
									
						
									//}//FIN if ( !empty($id) ) {
									
									
	
									$i = $i + 1;
									
									
									
								
								}//FIN WHILE
								
								
														 
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
									
								//SE TERMINA LA TRANSACCION EN JUSTICIA XXI  
								//sqlsrv_commit( $conn );	
									
								echo '<script languaje="JavaScript"> 
								
										alert("PROCESO SE REALIZA CORRECTAMENTE");
													
										location.href="index.php?controller=archivo&action=Adicionar_Obs";
												
									</script>';
								
							 

					
					  
		} 
		catch (Exception $e) {
					
						//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
						$this->db->rollBack();
						
	
						//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
						//sqlsrv_rollback( $conn );
					
						// Cerrar la conexiï¿½n.
						//sqlsrv_close( $conn );
						
						
						echo '<script languaje="JavaScript"> 
								
								var ERROR = "'.$e->getMessage().'";
						
								alert("ERROR AL REALIZAR EL PROCESO: "+ERROR);
								
								//location.href="index.php?controller=archivo&action=Adicionar_Obs";
								
							</script>';
						
						
		}
				
		
		
		
		
  	}
	
	
	
	public function busquedad_actual_OBSERVACION($filtro_u){
	
	
			$idusuario  = $_SESSION['idUsuario'];
		
			
			if ( $filtro_u == 1 ) {
			
				
				$filtro_u = " t1.id_user_asignada = '$idusuario' ";
			
			}
			else{
			
				$filtro_u = " t1.id_user_asignada >= 1 ";
			}
			
			
			/*$listar = $this->db->prepare("	
											SELECT t1.id,t1.idcorrespondencia,t2.radicado,t1.fecha,t3.empleado,
											t1.observacion,t1.fecha_obs_i,t1.fecha_obs_f,t1.estadoobs,t1.juz_respuesta
											FROM ((detalle_correspondencia t1
											INNER JOIN ubicacion_expediente t2 ON t1.idcorrespondencia = t2.id)
											INNER JOIN pa_usuario t3 ON t1.id_user_asignada = t3.id)
											WHERE " .$filtro_u. "
											ORDER BY t1.id DESC
											
										");*/
										
										
			$listar = $this->db->prepare("	
											SELECT t1.id,t1.idcorrespondencia,t2.radicado,t1.fecha,t3.empleado,
											t1.observacion,t1.fecha_obs_i,t1.fecha_obs_f,t1.estadoobs,t1.juz_respuesta
											FROM ((detalle_correspondencia t1
											INNER JOIN ubicacion_expediente t2 ON t1.idcorrespondencia = t2.id)
											INNER JOIN pa_usuario t3 ON t1.id_user_asignada = t3.id)
											WHERE " .$filtro_u. "
											AND (t2.idjuzgado_reparto = 2 OR t2.idjuzgadodestino = 2)
											AND (t2.fechasalida IS NOT NULL OR t2.fechasalida != '0000-00-00')
											AND (t2.posicion IS NOT NULL OR t2.posicion IS NULL OR posicion = '')
											AND (t2.fechadevolucion IS NULL OR t2.fechadevolucion = '0000-00-00')
											ORDER BY t1.id DESC
											
										");							
											
											
			
			
			
  			$listar->execute();

  			return $listar;
	
  	}
	
	
	public function busquedad_filtro_OBSERVACION($filtro_u){
	
	
			$idusuario  = $_SESSION['idUsuario'];
		
		
			$filtrox;
			
			$filtrof;
			$filtrofobs;
			
			$filtro1;
			$filtro2;
			$filtro3;
			$filtro4;
			
			
		
			$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			$fechad_obsD = trim($_GET['dato_3']);
			$fechah_obsH = trim($_GET['dato_4']);
			
			
			$datox1    = trim($_GET['datox1']);
			$datox2    = trim($_GET['datox2']);
			$datox3    = trim($_GET['datox3']);
			
			//ESTADO
			$datox4    = trim($_GET['datox4']);
			
		
			if ( !empty($fechad) && !empty($fechah) ) {
			
				
				$filtrof = " AND ( DATE(t1.fecha) >= '$fechad' AND DATE(t1.fecha) <= '$fechah') ";
				
		
			}
			
			if ( !empty($fechad_obsD) && !empty($fechah_obsH) ) {
			
				
				$filtrofobs = " AND ( t1.fecha_obs_i >= '$fechad_obsD' AND t1.fecha_obs_i <= '$fechah_obsH') ";
				
		
			}
			
			
			
			if ( !empty($datox1) ) {
			
				
				
				//$filtro1 = " AND t2.radicado LIKE '%$datox1%' ";
				
				$filtro1 = " AND t1.id = '$datox1' ";
			
			}
			
			
			if ( !empty($datox2) ) {
			
				
				//$filtro2 = " AND t1.id_clase = '$datox2' ";
				
				$filtro2 = " AND t2.radicado LIKE '%$datox2%' ";
			
			}
			
			if ( !empty($datox3) ) {
			
				
				$filtro3 = " AND t1.id_user_asignada = '$datox3' ";
			
			}
			
			/*if ( !empty($datox4) ) {*/
			if(is_numeric($datox4)) {
			
				
				
				$filtro4 = " AND t1.estadoobs = '$datox4' ";
			
			}
			
			if ( $filtro_u == 1 ) {
			
				
				$filtro_u = " AND t1.id_user_asignada = '$idusuario' ";
			
			}
			else{
			
				$filtro_u = " AND t1.id_user_asignada >= 1 ";
			}
			
			
	
			$filtrox = $filtro1." ".$filtro2." ".$filtro3." ".$filtro4." ".$filtrof." ".$filtrofobs." ".$filtro_u;
			
			//echo $filtrox;
			//echo $datox4."---".$filtrox;
			
			/*$listar = $this->db->prepare("	
											SELECT t1.id,t1.idcorrespondencia,t2.radicado,t1.fecha,t3.empleado,
											t1.observacion,t1.fecha_obs_i,t1.fecha_obs_f,t1.estadoobs,t1.juz_respuesta
											FROM ((detalle_correspondencia t1
											INNER JOIN ubicacion_expediente t2 ON t1.idcorrespondencia = t2.id)
											INNER JOIN pa_usuario t3 ON t1.id_user_asignada = t3.id)
											WHERE t1.id >= '1'" .$filtrox. "
											ORDER BY t1.id DESC
											
										");*/
										
			
			
			$listar = $this->db->prepare("	
											SELECT t1.id,t1.idcorrespondencia,t2.radicado,t1.fecha,t3.empleado,
											t1.observacion,t1.fecha_obs_i,t1.fecha_obs_f,t1.estadoobs,t1.juz_respuesta
											FROM ((detalle_correspondencia t1
											INNER JOIN ubicacion_expediente t2 ON t1.idcorrespondencia = t2.id)
											INNER JOIN pa_usuario t3 ON t1.id_user_asignada = t3.id)
											WHERE t1.id >= '1'" .$filtrox. "
											AND (t2.idjuzgado_reparto = 2 OR t2.idjuzgadodestino = 2)
											/*AND (t2.fechasalida IS NOT NULL OR t2.fechasalida != '0000-00-00')*/
											AND (t2.posicion IS NOT NULL OR t2.posicion IS NULL OR posicion = '')
											/*AND (t2.fechadevolucion IS NULL OR t2.fechadevolucion = '0000-00-00')*/
											ORDER BY t1.id DESC
											
										");							 
			
			
			
  			$listar->execute();

  			return $listar;
	
  	}
	
	
	public function finalizar_observacion(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
		
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					//$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
		
					//$idaccion      = trim($datospartes_1B[0]);
					
					$idaccion      = trim($datospartes_1A[$i]);
					
					
					//SQL A EJECUTAR 
					
	
					$SQL_1 = "	UPDATE detalle_correspondencia SET
								estadoobs = 2	
								WHERE id = '$idaccion' ";			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
					//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
					//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
								
								
								/*$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");*/
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
				
			
				
				
  	}
	
	
	public function busquedad_ALRTA_OBSERVACION($filtro_u){
	
	
			$idusuario  = $_SESSION['idUsuario'];
		
			
			if ( $filtro_u == 1 ) {
			
				
				$filtro_u = " t1.id_user_asignada = '$idusuario' AND estadoobs = 0";
			
			}
			else{
			
				$filtro_u = " t1.id_user_asignada >= 1 ";
			}
			
			
			/*$listar = $this->db->prepare("	
											SELECT t1.id,t1.idcorrespondencia,t2.radicado,t1.fecha,t3.empleado,
											t1.observacion,t1.fecha_obs_i,t1.fecha_obs_f,t1.estadoobs,t1.juz_respuesta
											FROM ((detalle_correspondencia t1
											INNER JOIN ubicacion_expediente t2 ON t1.idcorrespondencia = t2.id)
											INNER JOIN pa_usuario t3 ON t1.id_user_asignada = t3.id)
											WHERE " .$filtro_u. "
											ORDER BY t1.id DESC
											
										");*/
										
			
			//SE ACTUALIZA POR ESTA SQL, YA QUE EL MENU PRINCIPAL SE DEMORA PARA CARGAR, 14 DE AGOSTO 2019
			$listar = $this->db->prepare("	
			
											SELECT COUNT(id) AS cantidad
											FROM detalle_correspondencia t1
											WHERE " .$filtro_u. "
											ORDER BY t1.id DESC
										
										");							
											
											
			
			
			
  			$listar->execute();

  			return $listar;
	
  	}
	
	
	
	//-------------FIN NUEVO MODULO ADICIONAR OBSERVACIONES SERVIDORES DE JUZGADO POR JUEZ----------------
	
	//PARA ALERTA AUDIENCIAS
  	public function get_audiencias(){
	
		
		//SOLO TOMAS LAS FECHAS IGUALES O MAYORES A LA FECHA ACTUAL
		/*$listar     = $this->db->prepare("SELECT t1.fecha,t2.radicado,t1.observacion,t1.fechaaudi,t1.horaaudi
										  FROM (detalle_correspondencia t1
										  INNER JOIN ubicacion_expediente t2 ON t1.idcorrespondencia = t2.id)
										  WHERE t1.siaudi = 1 AND t1.id >= 598464 
										  AND t1.fechaaudi >= (SELECT DATE(NOW()))");*/
										  
		
		$listar     = $this->db->prepare("SELECT t1.id,t1.fecharegistro,t1.fechaaudi,t1.horaaudi,t2.radicado,t1.obsaudi,
		                                  t2.idjuzgado_reparto,t1.realizada
										  FROM (siepro_audiencia t1
										  INNER JOIN ubicacion_expediente t2 ON t1.idradicado = t2.id)
										  WHERE t1.fechaaudi >= (SELECT DATE(NOW()))");
										  								  
	
  		$listar->execute();

  		return $listar;
	
  	}
	
	
	//PARA CALCULAR LOS DIAS, PARA GENERAR LA ALERTA PARA VISUALIZAR LAS AUDIENCIAS
	
	public function Dias_Respuesta($fecharegistro,$fecharespuesta){
	
				
		require_once('funciones/Festivos.php');
		
		$dias_diferencia = 0;
		
		if($fecharespuesta != "0000-00-00"){
		
			
			//FECHA INCIAL
			$inicio    = new DateTime($fecharegistro);
			//Un dï¿½a es P1D,Dos dï¿½as es P2D, 
			//es decir que si la fecha inicial es 2015-05-19 y la final es 2015-05-27
			//el intervalos iria de 2015-05-19 2015-05-20 2015-05-21 2015-05-22 2015-05-23 2015-05-24 2015-05-25 2015-05-26
			$intervalo = new DateInterval('P1D');
			//FECHA FINAL
            $fin       = new DateTime($fecharespuesta);
			//CREO EL PERIODO SEGUN LOS DATOS ANTERIORES
			$periodo   = new DatePeriod($inicio,$intervalo,$fin);
			
			foreach ($periodo as $fecha) {
			
    			//echo $fecha->format('Y-m-d')."\n";
				//$dias_diferencia = $dias_diferencia." ".$fecha->format('Y-m-d')."\n";
				
				//OBTENGO FECHA A FECHA, DESDE LA INCIAL A LA FINAL Y CAPTURO SU Aï¿½O,MES,DIA
				$fechaperiodo = explode("-",$fecha->format('Y-m-d'));
				$y            = trim($fechaperiodo[0]);
			    $m            = trim($fechaperiodo[1]);
			    $d            = trim($fechaperiodo[2]);
				//OBTENGO EL DIA SEGUN LA FECHA PASADA A $fechaperiodo CON SUS PARTES Aï¿½O,MES,DIA
				$date         = date('D', mktime(0,0,0,$m,$d,$y));
				
				//PARA DIAS FESTIVOS, SE INSTANCIA LA CLASE Y SE LLAMA LA FUNCION PARA SABER SI UN DIA ES FESTIVO
				$dias_festivos = new festivos($y);
				$esfestivo     = $dias_festivos->esFestivo($d,$m);
				
				//SE REALIZA LA PREGUNTA SI ES SABADO, DOMINGO O FESTIVO
				//PARA NO INCREMENTAR $dias_diferencia
				if($date == 'Sat' or $date == 'Sun' or $esfestivo == 1){
			
					$bandera = 0;
				}
				else{
				
					$dias_diferencia = $dias_diferencia + 1;
				}
				
				//$dias_diferencia = $dias_diferencia." ".$date."\n";
			}
	
		}
		else{
			
			$dias_diferencia = "-";
			
		}
		
		//PARA SABER QUE RETORNA
		if($dias_diferencia != "-"){
		
			//SE SUMA UNO PARA QUE SE TENGA ENCUENTA EL DIA EN QUE SE REGISTRA LA TUTELA
			//ES DECIR SI SE REGISTRA EL 2016-03-09 CUENTA ESE DIA NO CIENTA DESDE EL 2016-03-10
			$dias_diferencia = $dias_diferencia + 1;
		}
		else{
		
			$dias_diferencia = "-";
		}
		
		return $dias_diferencia;
	
	}
	
	
	
	public function Realizar_Audiencia(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		/*$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		$accion       = "REALIZA AUDIENCIA";
		$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;*/
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
	
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
					$idaudi 		= trim($datospartes_1B[0]);//idrema
					
					
					//SQL A EJECUTAR 
					
	
					$SQL_1 = "UPDATE siepro_audiencia SET
							  realizada = 'SI'
							  WHERE id    = '$idaudi'";			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
								
								
								/*$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");*/
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
				
				
				
				
				
  	}
	
	
	public function realizar_no_audiencia(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		/*$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "DES-APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;*/
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
	
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
					$idaudi 		= trim($datospartes_1B[0]);//idrema
					
					
					//SQL A EJECUTAR 
					
	
					$SQL_1 = "UPDATE siepro_audiencia SET
							  realizada = 'NO'
							  WHERE id  = '$idaudi'";			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
					
					/*$accion  = "DES-APRUEBA REMATE, ID REMATE: ".$idrema;
					$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;*/
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
								
								
								/*$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");*/
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
					
				
  	}
	
	
	
	//********************************************************************************************
						//PARA EL MANEJO PROGRAMADOR DE AUDIENCIAS
						//ADICIONADO EL 6 DE AGOSTO 2019
	//********************************************************************************************
	
	public function registrar_audiencia(){
	
	
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		setlocale(LC_TIME, "Spanish");
		//$fechaactual_2 = strftime('%d de %B de %Y', strtotime($fechalog));
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		
		//SE OBTIENEN LOS DATOS
		$idusuario   = $_SESSION['idUsuario'];
		
		$id_juzgado  = $_SESSION['id_juzgado'];
		
		$datospartes = trim($_POST['datospartes']);
		
		
			
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		
		$error_transaccion = 0; //variable para detectar error
		$msgError               = "";
		
		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
		
			
		try {  
					
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
						
						
						
								//*********************************NUEVA CONEXON**************************************************
					
								$serverName = $datosbd_1; //serverName\instanceName
								$connectionInfo = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
								$conn = sqlsrv_connect( $serverName, $connectionInfo);
									
									
								if( $conn === false ) {
										
										$error_transaccion = 1;
									
										if( ($errors = sqlsrv_errors() ) != null) {
										
											foreach( $errors as $error ) {
											
												$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
											}
										}
										
										//echo "ENTRE 1";
										
								}
									
								//Iniciar la transacciï¿½n.
								if ( sqlsrv_begin_transaction( $conn ) === false ) {
										 
										$error_transaccion = 1;
									
										if( ($errors = sqlsrv_errors() ) != null) {
										
											foreach( $errors as $error ) {
											
												$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
											}
										}
										 
										//echo "ENTRE 2";
										 
								}
						
						
						
						
						
								
			
								$datospartes_1A = explode("******",$datospartes); 
								$longitud_1     = count($datospartes_1A);
								$i              = 0;
								
								
								while($i < $longitud_1 - 1){
				
				
										//2 EXPLODE
										$datospartes_1B = explode("//////",$datospartes_1A[$i]);
										
										
										$idradicado  = trim($datospartes_1B[0]);
										$radicado    = trim($datospartes_1B[1]);
										$fecha       = trim($datospartes_1B[2]);
										$hora        = trim($datospartes_1B[3]);
										//$fija_estado = trim($datospartes_1B[4]);
										
										$fija_estado = trim($datospartes_1B[4]);
										$datei       = date_create($fija_estado);
										$fi          = date_format($datei, 'Y-m-d H:i:s');
										$fi          = $fi."."."000";
									
										$tipo_audi_1 = explode("---",trim($datospartes_1B[5]));
										$tipo_audi_2 = trim($tipo_audi_1[0]);//id audi
										$tipo_audi_3 = trim($tipo_audi_1[1]);//num audi --> me idndica que actuacion de justicia debo ingresar
										$tipo_audi_4 = trim($tipo_audi_1[2]);//des audi
										
										unset($actuacion);
										
										if($tipo_audi_3 == 1){
										
											$actuacion    = "Auto fija fecha y hora para remate";
											$A110CODIACTU = "30023478";
											$A110CODIPADR = "30013034";
											
										}
										
										if($tipo_audi_3 == 2){
										
											$actuacion    = "Auto fija fecha audiencia y/o diligencia";
											$A110CODIACTU = "30003315";
											$A110CODIPADR = "30013034";
										}
									
										
										$this->db->exec("INSERT INTO siepro_audiencia_juzgado(idradicado,fecha,hora_ini,hora_fini,estado,idusuario,fecha_reg,id_juzgado,tipo_audi) 
		                             					 VALUES('$idradicado','$fecha','$hora','-',1,'$idusuario',now(),'$id_juzgado','$tipo_audi_2')");
					
					
										//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
										$id_audi  = $this->db->lastInsertId();
										
										
										$this->db->exec("INSERT INTO siepro_audiencia_juzgado_h(idradicado,fecha,hora_ini,hora_fini,estado,idusuario,fecha_reg,id_juzgado,tipo_audi,id_audi) 
														 VALUES('$idradicado','$fecha','$hora','-',1,'$idusuario',now(),'$id_juzgado','$tipo_audi_2','$id_audi')");
														 
										
										$fechaactual_2 = strftime('%d de %B de %Y', strtotime($fecha));				 
										
										//$nota_actu = "ACTUACION REGISTRADA ".$fechalog." A LAS ".$horalog." ID AUDIENCIA: ".$id_audi;
										
										$nota_actu = "FECHA AUDIENCIA: ".$fechaactual_2." A LAS ".$hora." ID AUDIENCIA: ".$id_audi." TIPO AUDIENCIA: ".$tipo_audi_4;
										
										
										
										//REGISTRAR ACTUACION EN JUSTICIA XXI
										
										$sininstancia = $radicado;
										$sin          = substr($sininstancia, 0, 21);
											
										$sql = ("	
					
													DECLARE @cad integer
													
										
													SELECT @cad = MAX(A110CONSACTU)+1 FROM T110DRACTUPROC WHERE a110Llavproc='$radicado' 
																		
													
													INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
													A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,
													A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,A110RENUTERM) 
													VALUES('$radicado',@cad,'$sin','00','$A110CODIACTU','$A110CODIPADR','$actuacion','N','NO','N',NULL,
													NULL,NULL,GETDATE(),NULL,NULL,'0002',NULL,GETDATE(),
													'$nota_actu',NULL,NULL,'D','P',GETDATE(),NULL,NULL)
												   
												   
													UPDATE T103DAINFOPROC SET a103descactd ='$actuacion', 
													a103codiactd ='$A110CODIACTU',a103codipadd ='$A110CODIPADR',a103fechdesd = GETDATE()
													WHERE a103llavproc='$radicado';	
													
													
												
													
											");
											
											
			
										$params  = array();
										$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
										$stmt = sqlsrv_query( $conn, $sql , $params, $options );
												
												
										if( $stmt === false ) {
												
											$error_transaccion = 1;
												
											if( ($errors = sqlsrv_errors() ) != null) {
													
												foreach( $errors as $error ) {
														
													$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
												}
											}
											
										}	
									
										sqlsrv_free_stmt( $stmt);
										
										
										
										
										$sql_2 = ("	
					
													DECLARE @cad integer
													
										
													SELECT @cad = MAX(A110CONSACTU)+1 FROM T110DRACTUPROC WHERE a110Llavproc='$radicado' 
																		
													
													INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
													A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
													A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
													A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,A110RENUTERM) 
													VALUES('$radicado',@cad,'$sin','00','00000108','00000106','Fijacion estado','L','SI','C',1,
													convert(datetime, '$fi', 121),
													convert(datetime, '$fi', 121),
													GETDATE(),
													NULL,1,NULL,NULL,
													GETDATE(),
													'',NULL,NULL,'S','D',
													GETDATE(),
													NULL,NULL)
													
													
		
											");
											
											
			
										$params_2  = array();
										$options_2 =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
										$stmt_2    = sqlsrv_query( $conn, $sql_2 , $params_2, $options_2 );
												
												
										if( $stmt_2 === false ) {
												
											$error_transaccion = 1;
												
											if( ($errors = sqlsrv_errors() ) != null) {
													
												foreach( $errors as $error ) {
														
													$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
												}
											}
											
										}	
									
										sqlsrv_free_stmt( $stmt_2);
										
										
										
										
										$i = $i + 1;
									
									
									
								
								}//FIN WHILE
								
								
								if($error_transaccion) {
								
									//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
									$this->db->rollBack();
									
				
									//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
									sqlsrv_rollback( $conn );
								
									// Cerrar la conexiï¿½n.
									sqlsrv_close( $conn );
									
									
									echo $msgError;
									
								
								}
								else{
								
									//SE TERMINA LA TRANSACCION  
									$this->db->commit();
									
									//SE TERMINA LA TRANSACCION EN JUSTICIA XXI  
									sqlsrv_commit( $conn );	
									
									$msgError = "PROCESO SE REALIZA CORRECTAMENTE";
					
									echo $msgError;
										
								}
								
							 

					
					  
		} 
		catch (Exception $e) {
					
						//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
						$this->db->rollBack();
						
	
						//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
						sqlsrv_rollback( $conn );
					
						// Cerrar la conexiï¿½n.
						sqlsrv_close( $conn );
						
						$msgError = $e->getMessage();
						
						echo $msgError;
						
						
						
						
		}
				
		
		
		
		
  	}
	
	
	
	//********************************************************************************************
						
						//FIN PARA EL MANEJO PROGRAMADOR DE AUDIENCIAS
						
	//********************************************************************************************
	
	
	
	
	//********************************************************************************************
						//PARA EL ARCHIVADO DE UN PROCESO
						//ADICIONADO EL 11 DE SEPTIEMBRE 2019
	//********************************************************************************************
	
	public function archivar_proceso(){
	
	
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		setlocale(LC_TIME, "Spanish");
		//$fechaactual_2 = strftime('%d de %B de %Y', strtotime($fechalog));
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		
		//SE OBTIENEN LOS DATOS
		$idusuario = $_SESSION['idUsuario'];
		
		$id_radi  = trim($_GET['id_radi']);
		$radicado = trim($_GET['radi']);
		$archi_1  = trim($_GET['archi_1']);
		$archi_2  = trim($_GET['archi_2']);
		$archi_3  = trim($_GET['archi_3']);
		$archi_4  = trim($_GET['archi_4']);
		$archi_5  = trim($_GET['archi_5']);
		
		//PARA QUE LA OBSERVACION $archi_1 NO SE CONCATENE CON LA NUEVA
		//SI HAY QUE CAMBIAR FOLIOS O CUADERNOS
		$archi_1  = explode(",",trim($_GET['archi_1']));
		$archi_1B = trim($archi_1[0]);
		$observacion_archivo = $archi_1B.", FOLIOS: ".$archi_2.", CUADERNOS: ".$archi_3;
		
		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		
		$error_transaccion = 0; //variable para detectar error
		$msgError               = "";
		
		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
		
		//SE IDENTIFICA INFORMACION DEL PROCESO EN JUSTICIA XXI, 
	    //PARA NO VOLVER A INSERTAR LA ACTUACION Archivo definitivo EN JUSTICIA XXI Y SIEPRO
		$bactu = 0;
		$datos_ACTU_PROCESOX = $modelo->get_proceso_ACTU_JUSTICIAXXI($radicado);
		//NO EXISTE ACTUACION EN JUSTICIA XXI
		if($datos_ACTU_PROCESOX == 0){
			
			$bactu = 0;
		}
		else{
		
			$bactu = $datos_ACTU_PROCESOX;
		}
		//---------------------------------------------------------------------------------------
		
			
		try {  
					
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
						
						
						
								//*********************************NUEVA CONEXON**************************************************
					
								$serverName = $datosbd_1; //serverName\instanceName
								$connectionInfo = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
								$conn = sqlsrv_connect( $serverName, $connectionInfo);
									
									
								if( $conn === false ) {
										
										$error_transaccion = 1;
									
										if( ($errors = sqlsrv_errors() ) != null) {
										
											foreach( $errors as $error ) {
											
												$msgError .= "1.ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
											}
										}
										
										//echo "ENTRE 1";
										
								}
									
								//Iniciar la transacciï¿½n.
								if ( sqlsrv_begin_transaction( $conn ) === false ) {
										 
										$error_transaccion = 1;
									
										if( ($errors = sqlsrv_errors() ) != null) {
										
											foreach( $errors as $error ) {
											
												$msgError .= "2.ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
											}
										}
										 
										//echo "ENTRE 2";
										 
								}
						
								
								$this->db->exec("UPDATE ubicacion_expediente SET 
								
												 idusuario           = '$idusuario' ,
												 fecha               = '$fechalog',
												 posicion            = '$archi_4',
								                 observacion_archivo = '$observacion_archivo'
												 
												 WHERE id = '$id_radi'");
												 
												 
								//if($bactu == 0){
												 
									$this->db->exec("INSERT INTO detalle_correspondencia(idcorrespondencia,fecha,observacion,idusuario)
												 	 VALUES ('$id_radi','$fecharegistro','$observacion_archivo','$idusuario')");				 
								//}
					
										 
					
										
										//REGISTRAR ACTUACION EN JUSTICIA XXI
										
										$sininstancia = $radicado;
										$sin          = substr($sininstancia, 0, 21);
										
										//SE REALIZA LA PREGUNTA if($bactu == 0) PARA DETERMINAR, QUE 
										//YA EXISTA INFORMACION DE ARCHIVO DEL PROCESO Y SE DESEA ACTUALIZAR
										//FOLIOS, CUADERNOS O NUEVA UBICACION, IGUAL A CERO ES QUE NO TIENE
										//INFORMACION
										if($bactu == 0){
											
											$sql = ("	
						
														DECLARE @cad integer
														
											
														SELECT @cad = MAX(A110CONSACTU)+1 FROM T110DRACTUPROC WHERE a110Llavproc='$radicado' 
																			
														
														INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
														A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,
														A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,A110RENUTERM) 
														VALUES('$radicado',@cad,'$sin','00','30023363','30023138','Archivo definitivo','N','NO','N',0,
														NULL,NULL,GETDATE(),'$archi_2','$archi_3',NULL,NULL,NULL,
														'$archi_1B',NULL,NULL,'S','D',GETDATE(),'NO','NO')
													   
													   
														UPDATE T103DAINFOPROC SET 
														
														A103DESCACTS = 'Archivo definitivo', 
														A103CODIACTS = '30023363',
														A103CODIPADS = '30000123',
														A103FOLIPROS = '$archi_2', 
														A103CUADPROS = '$archi_3',
														A103ANOTACTS = '$archi_1B',
														A103FECHDESS = GETDATE(),
														A103CODIUBIC = '0015',
														A103FLAGVIGE = 'NO'
														
														WHERE A103LLAVPROC = '$radicado';	
														
														
													
														
												");
												
										}
										else{
										
											$sql = ("	
						 
																			
														
														UPDATE T110DRACTUPROC SET 
														
														A110FOLIPROC = '$archi_2',
														A110CUADPROC = '$archi_3',
														A110ANOTACTU = '$archi_1B'
														
														WHERE A110LLAVPROC = '$radicado' /*AND A110CONSACTU = '$bactu'*/
														AND A110DESCACTU   = 'Archivo definitivo';
													   
													   
														UPDATE T103DAINFOPROC SET 
														
														A103DESCACTS = 'Archivo definitivo', 
														A103CODIACTS = '30023363',
														A103CODIPADS = '30000123',
														A103FOLIPROS = '$archi_2', 
														A103CUADPROS = '$archi_3',
														A103ANOTACTS = '$archi_1B',
														/*A103FECHDESS = GETDATE(),*/
														A103CODIUBIC = '0015',
														A103FLAGVIGE = 'NO'
														
														WHERE A103LLAVPROC = '$radicado';	
														
														
													
														
												");
										
										
										}		
										
										$params  = array();
										$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
										$stmt = sqlsrv_query( $conn, $sql , $params, $options );
												
												
										if( $stmt === false ) {
												
											$error_transaccion = 1;
												
											if( ($errors = sqlsrv_errors() ) != null) {
													
												foreach( $errors as $error ) {
														
													$msgError .= "3.ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
												}
											}
											
										}	
									
										sqlsrv_free_stmt( $stmt);
										
										if($bactu == 0){
										
										
											//NO EXISTE INFORMACION EN JUSTICIA XXI
											$datos_T103DAFINAPROC = $modelo->get_T103DAFINAPROC($radicado);
											
											if($datos_T103DAFINAPROC == 0){
											
												$sql_2 = ("
															INSERT INTO T103DAFINAPROC(A103LLAVPROC,A103FECHFINA,A103CODIDECI,A103OBSEFINA,A103PROVFINA,A103ARCHIVAD) 
															VALUES('$radicado',GETDATE(),'$archi_5','$archi_1B','0020','SI')
														
														");
											}
											else{
										
												$sql_2 = ("	
							
															UPDATE T103DAFINAPROC SET 
															
															
															A103FECHFINA = GETDATE(),
															A103CODIDECI = '$archi_5',
															A103OBSEFINA = '$archi_1B',
															A103PROVFINA = '0020',
															A103ARCHIVAD = 'SI'
															
															WHERE A103LLAVPROC = '$radicado';
															
															
													");
													
											}
												
										}
										else{
										
										
											//NO EXISTE INFORMACION EN JUSTICIA XXI
											$datos_T103DAFINAPROC = $modelo->get_T103DAFINAPROC($radicado);
											
											if($datos_T103DAFINAPROC == 0){
											
												$sql_2 = ("
															INSERT INTO T103DAFINAPROC(A103LLAVPROC,A103FECHFINA,A103CODIDECI,A103OBSEFINA,A103PROVFINA,A103ARCHIVAD) 
															VALUES('$radicado',GETDATE(),'$archi_5','$archi_1B','0020','SI')
														
														");
											}
											else{
										
												$sql_2 = ("	
							
															UPDATE T103DAFINAPROC SET 
															
															
															/*A103FECHFINA = GETDATE(),*/
															A103CODIDECI = '$archi_5',
															A103OBSEFINA = '$archi_1B',
															A103PROVFINA = '0020',
															A103ARCHIVAD = 'SI'
															
															WHERE A103LLAVPROC = '$radicado';
															
															
													");
													
											}
											
										
										}	
											
											
			
										$params_2  = array();
										$options_2 =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
										$stmt_2    = sqlsrv_query( $conn, $sql_2 , $params_2, $options_2 );
												
												
										if( $stmt_2 === false ) {
												
											$error_transaccion = 1;
												
											if( ($errors = sqlsrv_errors() ) != null) {
													
												foreach( $errors as $error ) {
														
													$msgError .= "4.ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
												}
											}
											
										}	
									
										sqlsrv_free_stmt( $stmt_2);
										
										
							
								
								if($error_transaccion) {
								
									//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
									$this->db->rollBack();
									
				
									//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
									sqlsrv_rollback( $conn );
								
									// Cerrar la conexiï¿½n.
									sqlsrv_close( $conn );
									
									
									//echo $msgError;
									
									
									
									echo '<script languaje="JavaScript"> 
			
												var ERROR = "'.$msgError.'";
															
												alert("1.ERROR AL REALIZAR EL PROCESO: "+ERROR);
												
												location.href="index.php?controller=archivo&action=listarUbicacionExpediente";
															
										  </script>';
										  
										  
									
									  	  
									
								
								}
								else{
								
									//SE TERMINA LA TRANSACCION  
									$this->db->commit();
									
									//SE TERMINA LA TRANSACCION EN JUSTICIA XXI  
									sqlsrv_commit( $conn );	
									
									//$msgError = "PROCESO SE REALIZA CORRECTAMENTE";
					
									
									//echo $msgError;
									
									
									
									
									echo '<script languaje="JavaScript"> 
								
												alert("PROCESO SE REALIZA CORRECTAMENTE");
												
												location.href="index.php?controller=archivo&action=listarUbicacionExpediente";
														
										 </script>';
										
								}
								
							 

					
					  
		} 
		catch (Exception $e) {
					
						//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
						$this->db->rollBack();
						
	
						//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
						sqlsrv_rollback( $conn );
					
						// Cerrar la conexiï¿½n.
						sqlsrv_close( $conn );
						
						$msgError = $e->getMessage();
						
						//echo $msgError;
						
						
						
						
						echo '<script languaje="JavaScript"> 
			
									var ERROR = "'.$msgError.'";
												
									alert("2.ERROR AL REALIZAR EL PROCESO: "+ERROR);
									
									location.href="index.php?controller=archivo&action=listarUbicacionExpediente";
												
						     </script>';
						
						
						
						
		}
				
		
		
  	}
	
	
	//INFORMACION DEL PROCESO EN JUSTICIA XXI, 
	//PARA NO VOLVER A INSERTAR LA ACTUACION Archivo definitivo EN JUSTICIA XXI Y SIEPRO
	public function get_proceso_ACTU_JUSTICIAXXI($valorradicado){
	
		$modelo     = new archivoModel();
  
  		$error_transaccionX = 0;
		
  		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
			
		$serverNameX = $datosbd_1; //serverName\instanceName
		$connectionInfoX = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4 );
		$connX = sqlsrv_connect( $serverNameX, $connectionInfoX);
		
		
		if( $connX === false ) {
			
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
			
			echo "ENTRE 1";
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $connX ) === false ) {
			 
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
			 
			echo "ENTRE 2";
			 
		}
		

		$sqlX = ("	
			
			
					SELECT * FROM [$datosbd_2].[dbo].[T110DRACTUPROC] 
					WHERE [A110LLAVPROC] = '$valorradicado' 
					AND [A110DESCACTU]   = 'Archivo definitivo';
							
		");
			
		$paramsX  = array();
		$optionsX =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmtX    = sqlsrv_query( $connX, $sqlX , $paramsX, $optionsX );
			
			
		if( $stmtX === false ) {
			
			$error_transaccionX = 1;
			
			if( ($errors = sqlsrv_errors() ) != null) {
				
				foreach( $errors as $error ) {
					
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
				
			echo "ENTRE 3";
				
		}
		else{
		
			$row_count = sqlsrv_num_rows( $stmtX );
			
			//NO EXISTE
			//if ($row_count === false){
			if ($row_count == 0){
   		
				sqlsrv_free_stmt( $stmtX);
				sqlsrv_close( $connX );
				
				return 0;
				
				
				
				
			}
			//EXISTE
 			else{
			
				
				//while( $row = sqlsrv_fetch_array( $stmt)){
				
				//}
				
				$row          = sqlsrv_fetch_array($stmtX);
				$A110CONSACTU = $row['A110CONSACTU'];
				
				sqlsrv_free_stmt( $stmtX);
				sqlsrv_close( $connX );
					
				//return 1;
				
				return $A110CONSACTU;
				
				
			}	
			
		}	
		
		
  	}
	
	//IDENTIFICAR QUE EXISTE INFORMACION EN LA TABLA [T103DAFINAPROC]
	public function get_T103DAFINAPROC($valorradicado){
	
		$modelo     = new archivoModel();
  
  		$error_transaccionX = 0;
		
  		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
			
		$serverNameX = $datosbd_1; //serverName\instanceName
		$connectionInfoX = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4 );
		$connX = sqlsrv_connect( $serverNameX, $connectionInfoX);
		
		
		if( $connX === false ) {
			
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
			
			echo "ENTRE 1";
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $connX ) === false ) {
			 
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
			 
			echo "ENTRE 2";
			 
		}
		

		$sqlX = ("	
			
			
					SELECT * FROM [$datosbd_2].[dbo].[T103DAFINAPROC] 
					WHERE [A103LLAVPROC] = '$valorradicado';
							
		");
			
		$paramsX  = array();
		$optionsX =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmtX    = sqlsrv_query( $connX, $sqlX , $paramsX, $optionsX );
			
			
		if( $stmtX === false ) {
			
			$error_transaccionX = 1;
			
			if( ($errors = sqlsrv_errors() ) != null) {
				
				foreach( $errors as $error ) {
					
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
				
			echo "ENTRE 3";
				
		}
		else{
		
			$row_count = sqlsrv_num_rows( $stmtX );
			
			//NO EXISTE
			//if ($row_count === false){
			if ($row_count == 0){
   		
				sqlsrv_free_stmt( $stmtX);
				sqlsrv_close( $connX );
				
				return 0;
				
				
				
				
			}
			//EXISTE
 			else{
			
				sqlsrv_free_stmt( $stmtX);
				sqlsrv_close( $connX );
					
				return 1;
				
		
			}	
			
		}	
		
		
  	}
	
	//********************************************************************************************
						
						//FIN PARA EL ARCIVADO DE UN PROCESO
						
	//********************************************************************************************
	
	/*public function get_lista_incidentes($identrada){
	
		$idusuario  = $_SESSION['idUsuario'];
		
		if($identrada == 1){
		
			
			
			$sql = "SELECT t1.id,t1.fecha_registro,t1.radicado,t1.peticionario,t1.cedula,t1.telefono,t1.tipo_documento,
					t1.folios,t1.idjuzgado,t1.fecha_entrega,t1.fecha_devolucion,t3.nombre AS juz_destino,t5.empleado AS registra,t1.generado,
					t1.existe,t1.incorporaexpediente,t1.observacionesm,t1.fecha_incorpora,t1.ruta_local,t1.ruta_remota,
					t2.est_titulo,t1.sal_observaciones
					FROM ((((correspondencia t1
					INNER JOIN salud_estados t2 ON t1.sal_id_estado = t2.est_id)
					INNER JOIN juzgado_destino t3 ON t1.idjuzgadodestino = t3.id)
					INNER JOIN pa_solicitud t4 ON t1.idsolicitud = t4.id)
					INNER JOIN pa_usuario t5 ON t1.idusuario = t5.id)
					WHERE idsolicitud = 116
					ORDER BY id DESC";
			
											  
			$listar     = $this->db->prepare($sql);
											 
			
		}
		
		

  		$listar->execute();

  		return $listar;
	
  	}*/
	
	
	public function get_lista_incidentes($identrada){
	
		$idusuario  = $_SESSION['idUsuario'];
		
		$modelo     = new archivoModel();
		
		//SE REALIZA ESTA CONSULTA PARA DETERMINAR SI EL USUARIO EN SESION
		//TIENE ASIGNADO idjuzgadousuario, SI NO TIENE ASIGNADO
		//MUESTRA TODOS LOS INCIDENTES, Y SI TIENE ASIGNADO
		//SOLO LOS DE ESE JUZGADO
		$juzgado_usuario = $modelo->get_juzgado_usuario($idusuario);
		$nj_usuario_1    = $juzgado_usuario->fetch();
		$nj_usuario_2    = $nj_usuario_1['id_juzgado'];
		
		if($identrada == 1){
		
			
			/*if( is_null($nj_usuario_2) || $nj_usuario_2 == 18 ){*/
				
				
				$sql = "SELECT t1.id,t1.fecha_registro,t1.radicado,t1.peticionario,t1.cedula,t1.telefono,t1.tipo_documento,
						t1.folios,t1.idjuzgado,t1.fecha_entrega,t1.fecha_devolucion,t3.nombre AS juz_destino,t5.empleado AS registra,t1.generado,
						t1.existe,t1.incorporaexpediente,t1.observacionesm,t1.fecha_incorpora,t1.ruta_local,t1.ruta_remota,
						t2.est_titulo,t1.sal_observaciones,t6.des AS clase,t7.des AS subclase,t8.des AS eps
						
						FROM (((((((correspondencia t1
						
						INNER JOIN salud_estados t2 ON t1.sal_id_estado = t2.est_id)
						INNER JOIN juzgado_destino t3 ON t1.idjuzgadodestino = t3.id)
						INNER JOIN pa_solicitud t4 ON t1.idsolicitud = t4.id)
						INNER JOIN pa_usuario t5 ON t1.idusuario = t5.id)
						
						LEFT JOIN pa_clase_solicitud t6 ON t1.id_clasesalud = t6.id)
						LEFT JOIN pa_subclase_solicitud t7 ON t1.id_subclasesalud = t7.id)
						LEFT JOIN pa_eps_salud t8 ON t1.id_eps = t8.id)
						
						WHERE t1.idsolicitud = 116
						ORDER BY t1.id DESC";		

			/*}
			else{
			
				
						
						$sql = "SELECT t1.id,t1.fecha_registro,t1.radicado,t1.peticionario,t1.cedula,t1.telefono,t1.tipo_documento,
								t1.folios,t1.idjuzgado,t1.fecha_entrega,t1.fecha_devolucion,t3.nombre AS juz_destino,t5.empleado AS registra,t1.generado,
								t1.existe,t1.incorporaexpediente,t1.observacionesm,t1.fecha_incorpora,t1.ruta_local,t1.ruta_remota,
								t2.est_titulo,t1.sal_observaciones,t6.des AS clase,t7.des AS subclase,t8.des AS eps
								
								FROM (((((((correspondencia t1
								
								INNER JOIN salud_estados t2 ON t1.sal_id_estado = t2.est_id)
								INNER JOIN juzgado_destino t3 ON t1.idjuzgadodestino = t3.id)
								INNER JOIN pa_solicitud t4 ON t1.idsolicitud = t4.id)
								INNER JOIN pa_usuario t5 ON t1.idusuario = t5.id)
								
								LEFT JOIN pa_clase_solicitud t6 ON t1.id_clasesalud = t6.id)
								LEFT JOIN pa_subclase_solicitud t7 ON t1.id_subclasesalud = t7.id)
								LEFT JOIN pa_eps_salud t8 ON t1.id_eps = t8.id)
								
								WHERE t1.idsolicitud = 116
								AND t1.idjuzgado = (SELECT id_juzgado FROM pa_usuario WHERE id = '$idusuario')
								ORDER BY t1.id DESC";
			
			}*/
			
			
											  
			$listar     = $this->db->prepare($sql);
											 
			
		}
		
		

  		$listar->execute();

  		return $listar;
	
  	}
	
	public function get_juzgado_usuario($idusuario){
	
	
		$listar = $this->db->prepare("SELECT * FROM pa_usuario WHERE id= ".idusuario);
	
  		$listar->execute();

  		return $listar;
	
	}
	
	
	
	//PARTE AGREGADA EL 22 DE ABRIL DEL 2020 PARA EL MANEJO DE USUARIOS 
	//QUE PUEDEN VISUALIZAR ALERTA DE EN TITULOS
	public function registrar_anaquel_titulos(){
  

		$idusuario  = $_SESSION['idUsuario'];
		
		$id     	= trim($_GET['id']);
		$radicado   = trim($_GET['radicado']);
		$obseraditx = trim($_GET['obseraditx']);
		$enanaquel  = trim($_GET['enanaquel']);
		
	
		if($enanaquel == 1){
		
			$observacion = "PROCESO UBICADO EN ANAQUEL DE TITULOS, ".$obseraditx;
			
		}
		else{
		
			$observacion = "PROCESO SALE DE UBICACION DE ANAQUEL DE TITULOS, ".$obseraditx;
		
		}

		
		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
			
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
			
		//$tiporegistro = "TERMINOS";
		$accion  = $observacion." En el Sistema (SIEPRO)"." ID: ".$id."RADICADO: ".$radicado;
		$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
	
		//--------------------------------------------------------------------------------------------
		
		$error_transaccion = 0; //variable para detectar error
		

		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			  
					$this->db->exec("UPDATE ubicacion_expediente SET 
					                 fecha      = '$fechalog',
									 idusuario  = '$idusuario',
					                 en_titulos = '$enanaquel' 
									 WHERE id='$id'");
						
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$id','$fecharegistro','$observacion','$idusuario')");
						
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
					                 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
					
					
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				

				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		
		
  }
  
  
  public function correspondencia_sin_radicado_file(){
  
  
	
		$modelo     = new archivoModel();
		
		$idusuario   = $_SESSION['idUsuario'];
		
		
		$listasr1 	    = trim($_POST['listasr1']);
		$listasr2       = trim($_POST['listasr2']);
		$listasr3       = trim($_POST['listasr3']);
		$peticionariosr = trim($_POST['peticionariosr']);
		$foliossr       = trim($_POST['foliossr']);
		$observacionsr 	= trim($_POST['observacionsr']);
		
		
		$hora    = $modelo->get_hora_actual_24horas();
		
		$fecha_hora_mysql = $modelo->get_fecha_hora_mysql();
		

		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
		
		
		$accion  = "REGISTRA CORRESPONDENCIA SIN RADICADO ASOCIADO";
		
      	$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog = 1;
		
		
		
		//***********************************PARA EL ARCHIVO***************************************

		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "MEMORIALESSR";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		//$nom = trim($_SESSION['idUsuario'])."/".$idusuario;
		$nom = trim($_SESSION['idUsuario']);
		
		//AQUI SE CREA EL DIRECTORIO
		if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		else{mkdir($raiz.'/'.$nom, 0, true);}
		
		//datos del arhivo 
		$nombre_archivo = $_FILES['archivo']['name']; 
		//echo $nombre_archivo;
		$tipo_archivo   = $_FILES['archivo']['type'];
		//echo $tipo_archivo;
		$tamano_archivo = $_FILES['archivo']['size']; 
		//echo $tamano_archivo;
		

		$msg = " ";
					
		
		if ($nombre_archivo != "") {//IF QUE ME IDENTIFICA QUE SE SELECCIONO UN ARCHIVO
		
		
			if (! ( strpos($tipo_archivo, "vnd.ms-excel") //csv
				|| strpos($tipo_archivo, "vnd.openxmlformats-officedocument.spreadsheetml.sheet") //xlsx
				|| strpos($tipo_archivo, "vnd.openxmlformats-officedocument.wordprocessingml.document")//docx
				|| strpos($tipo_archivo, "pdf") //pdf
				) && ($tamano_archivo < 100000000) )  {			
				
				
				$msg = "LA EXTENSION O LA LONGITUD DEL ARCHIVO NO ES CORRECTA: ".$tipo_archivo;
				echo $msg;
		
			}
			else{//1 
					
				if ( file_exists($raiz.'/'.$nom.'/'.$nombre_archivo) ) {
						
						
					//OBTENGO UN ID PARA IDENTIFICAR UN ARCHIVO CON EL MISMO NOMBRE
					//PARA AGREGARLE EL ID A ESE NOMBRE Y QUE EL SISTEMA CONTINUE SIN AVISO DE YA EXISTE UN ARCHIVO CON ESE NOMBRE
					$idunico = time();
						
					$nombre_archivo = $idunico."_".$nombre_archivo;
						
						
				}
				
				if ( move_uploaded_file($_FILES['archivo']['tmp_name'], $raiz.'/'.$nom.'/'.$nombre_archivo) ){//3
							 
					//echo "EL ARCHIVO HA SUBIDO AL SERVIDOR CORRECTAMENTE."."\n"; 
					$rutaarchivo = utf8_decode($raiz.'/'.$nom.'/'.$nombre_archivo);		
					 
							
					try {  
									
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
										
											
											
							$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
											 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
								 
				
								 
									 
							$this->db->exec("INSERT INTO correspondencia (fecha_registro,radicado,peticionario,tipo_documento,
										     idjuzgado,idjuzgadodestino,idsolicitud,idusuario,folios,idubicacionexpediente,
											 observacionesm,ruta_local)
                                             VALUES ('$fecha_hora_mysql','0','$peticionariosr','$listasr1',
											 '23','$listasr2','$listasr3','$idusuario','$foliossr','33122',
											 '$observacionsr','$rutaarchivo')");
							
							
							
				
											
							$msg = "1.PROCESO SE REALIZA CORRECTAMENTE";
																		
							//SE TERMINA LA TRANSACCION  
							$this->db->commit();
															
							echo $msg;
											
									
									  
						} 
						catch (Exception $e) {
									
										
							$msg = "1.ERROR EN PROCESO: ".$e->getMessage();
										
										
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
										
									
							echo $msg;
										
							
										
						}
					
				}
				else{ 
							
					$msg = "Error al subir el fichero.";		 
					echo $msg;
				
																		
				}
				
			
			}//FIN ELSE 1	
			
	
		
		}//FIN if ($nombre_archivo != "") {//IF QUE ME IDENTIFICA QUE SE SELECCIONO UN ARCHIVO
		else{ 
							
			$msg = "NO SE SELECCIONO UN ARCHIVO";		 
			echo $msg;
				
																		
		}
		
		
		

		
  	}
	
	
	
	//********************************************************************************************
						//PARA EL MANEJO DE   HOJA CONTROL DE ENTREGA DE TITULOS
						//ADICIONADO EL 8 DE MAYO 2020
	//********************************************************************************************
	
	public function registrar_hoja_control_titulo(){
	
		
			$modelo     = new archivoModel();
					
			
			//DATOS PARA EL REGISTRO DEL LOG
			$fechahora  = $modelo->get_fecha_actual();
			$datosfecha = explode(" ",$fechahora);
			$fechalog   = $datosfecha[0];
			
			
			$horalog    = $modelo->get_hora_actual_24horas();
			
			date_default_timezone_set('America/Bogota'); 
			$fecharegistro = date('Y-m-d g:i');
			
			//SE OBTIENEN LOS DATOS
			$idusuario      = $_SESSION['idUsuario'];
			
			
			$datospartes = trim($_POST['datospartes']);
				
			$datospartes_1A = explode("//////",$datospartes); 
			
			$idradicado = $datospartes_1A[0];
			$capital    = $datospartes_1A[1];
			$ic         = $datospartes_1A[2];
			$im         = $datospartes_1A[3];
			$costas     = $datospartes_1A[4];
			
			$obs        = utf8_decode(trim($datospartes_1A[6]));
			
			$atp        = $datospartes_1A[7];
			
			//ID ENCABEZADO TABLA hcet_encabezado, ME INDICA QUE NO SE VA HACER UN INSERT SI NO UN UPDATE
			$idEhcet = $datospartes_1A[5];
				
			//SQL A EJECUTAR 
			if($idEhcet >= 1){
			
				$SQL_1 = "UPDATE hcet_encabezado SET 
				
							capital        = '$capital',
							ic             = '$ic',
							im             = '$im',
							costas         = '$costas',
							fechaedita     = '$fechalog',
							horaedita      = '$horalog',
							idusuarioedita = '$idusuario',
							obs            = '$obs',
							atp            = '$atp'
							
					  	  WHERE id = '$idEhcet'";
			
			}
			else{
			
				$SQL_1 = "INSERT INTO hcet_encabezado(idradicado,capital,ic,im,costas,fecha,hora,idusuario,obs,atp)
					  	  VALUES('$idradicado','$capital','$ic','$im','$costas','$fechalog','$horalog','$idusuario','$obs','$atp')";		
						  
						  
				$observacionhtd = "CON HOJA DE PAGO DE TITULOS DIGITALIZADA";
				
						
				$SQL_2 = "INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					      VALUES('$idradicado','$fecharegistro','$observacionhtd','$idusuario')";
						  
			}	
											
						
					
					
			$error_transaccion   = 0; //variable para detectar error
			$msg = " ";
					
			
			try {  
						
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
							
						
		
					//UPDATE	
					if($idEhcet >= 1){
					
						$this->db->exec($SQL_1);
					}
					//INSERT
					else{
					
						$this->db->exec($SQL_1);
					
						$this->db->exec($SQL_2);
					}
								
								
					//SE TERMINA LA TRANSACCION  
					$this->db->commit();
											
					
						
						  
			} 
			catch (Exception $e) {
						
							
				$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
							
						
				//echo $msg;
							
				$error_transaccion   = 1;
							
			}
						
				
			if($error_transaccion){
					
				echo $msg;
					
			}
			else{
						
				$msg = "PROCESO SE REALIZA CORRECTAMENTE";
						
				echo $msg;
					
			}
				
			
				
				
  	}
	
	//********************************************************************************************
						
						//FIN PARA EL MANEJO DE   HOJA CONTROL DE ENTREGA DE TITULOS
						
	//********************************************************************************************
	
	
	
	//********************************************************************************************
						//PARA EL MANEJO DE DETALLE TABLA ABONOS
						//ADICIONADO EL 9 DE MAYO 2020
	//********************************************************************************************
	
	public function registrar_detalle_control_titulo(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		//$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
		$idhcet	        = trim($_POST['idhcet']);
		$id_hoja        = trim($_POST['id_hoja']);
		
		$datospartes    = trim($_POST['datospartes']);
			
		$datospartes_1A = explode("******",$datospartes); 
		$longitud_1     = count($datospartes_1A);
		$i              = 0;
				
		while($i < $longitud_1 - 1){
				
				
			//2 EXPLODE
			$datospartes_1B = explode("//////",$datospartes_1A[$i]);
			
			
			$fecha        = trim($datospartes_1B[0]);
			$orderpago    = utf8_decode(trim($datospartes_1B[1]));
			$valor        = trim($datospartes_1B[2]);
			$fecha_entrga = trim($datospartes_1B[3]);
			$beneficiario = utf8_decode(trim($datospartes_1B[4]));
					
			
		
			//SQL A EJECUTAR 
			$SQL_1 = "INSERT INTO titulos(idubicacion_expediente,fecha,beneficiario,valor,fechapago,orderpago,idhoja)
					  VALUES('$idhcet','$fecha','$beneficiario','$valor','0000-00-00','$orderpago','$id_hoja')";			
											
						
					
					
			$error_transaccion   = 0; //variable para detectar error
			$msg = " ";
					
			//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
			//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
					
				
					
			try {  
						
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
							
								
								
					/*$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
									   VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");*/
								
								
		
					$this->db->exec($SQL_1);
								
								
								
					//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
					//SE TERMINA LA TRANSACCION  
					$this->db->commit();
											
					//echo $msg;
								
						
						  
			} 
			catch (Exception $e) {
						
							
				$i = $longitud_1 - 1;
							
	
				$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
							
						
				//echo $msg;
							
				$error_transaccion   = 1;
							
			}
						
			$i = $i + 1;
					
					
					
		}//FIN WHILE
				
		if($error_transaccion){
				
			echo $msg;
				
		}
		else{
					
			$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
			echo $msg;
				
		}
				
			
				
				
  	}
	
	//********************************************************************************************
						
						//FIN PARA EL MANEJO DE DETALLE TABLA ABONOS
						
	//********************************************************************************************
	
	
	
	//********************************************************************************************
						
						//PROCESOS MASIVOS 
						
						//Auto aprueba liquidaciï¿½n crï¿½dito
						//Auto modifica liquidacion presentada 
						//Fijacion estado
						
	//********************************************************************************************
	
	//PRIMERO SE REGISTRA LA ACTUACION Auto aprueba liquidaciï¿½n crï¿½dito Y LUEGO LA DE Fijacion estado
	
	
	//ACTUACION =  Auto aprueba liquidaciï¿½n crï¿½dito
	//AALC      = Auto aprueba liquidaciï¿½n crï¿½dito
  	public function Registrar_AALC(){
  

		$idusuario      = $_SESSION['idUsuario'];
		
		
		$cadenaradicados  = "41269"."******"."17001400300320180016200"."******"."2"."//////".
							"30644"."******"."17001400300420150021000"."******"."2"."//////".
							"42789"."******"."17001400300520190026600"."******"."2"."//////".
							"42935"."******"."17001400300520190030400"."******"."2"."//////".
							"40028"."******"."17001400300620180051700"."******"."2"."//////".
							"37299"."******"."17001400301020170082600"."******"."2"."//////".
							"41734"."******"."17001400301020180076600"."******"."2"."//////".
							"41162"."******"."17001400301020180080200"."******"."2"."//////".
							"31447"."******"."17001400301120150000500"."******"."2"."//////".
							"33767"."******"."17001400301220160012500"."******"."2"."//////".
							"34916"."******"."17001400301220160017500"."******"."2"."//////";


							
		$cadenaradicados_2 = explode("//////",$cadenaradicados);
		$i = 0;
		$cantidadid = count($cadenaradicados_2);
		
		//--------------------------------------------------------------------------------------------
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		$serverName     = "192.168.89.20"; //serverName\instanceName
		$connectionInfo = array( "Database"=>"ConsejoPN", "UID"=>"usuariooecm","PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		while($i < $cantidadid - 1){
		
		$cadenaradicados_3 = explode("******",$cadenaradicados_2[$i]);
		
		//SQL PARA PRUEBAS
		/*$sql = ("UPDATE info1 SET des = '$observaciondespacho'
			     WHERE radicado ='$cadenaradicados_3[$i]';");*/
		
		/*$sql = ("INSERT INTO info3(idradicados) 
		         values('$cadenaradicados_3[0]');"); */
		
				
			

		$sininstancia = $cadenaradicados_3[1];
	  	$sin = substr($sininstancia, 0, 21);
		
					
		
		
		$sql = ("
		
					
					DECLARE @cad integer
					 

					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$cadenaradicados_3[1]' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
				    A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
				    A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
				    A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
				    A110RENUTERM) 
				    values('$cadenaradicados_3[1]',@cad,'$sin','00','30023402','30023118','Auto aprueba liquidaciï¿½n crï¿½dito','N','NO','N',NULL,
					NULL,
					NULL,
					convert(datetime, '2020-05-27', 121),
					NULL,NULL,'0021',NULL,
					convert(datetime, '2020-05-27', 121),
				    NULL,NULL,NULL,'D','P',
					convert(datetime, '2020-05-27', 121),
					NULL,NULL)
					
					
			");
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			echo $conn."RADICADO".$cadenaradicados_3[1];
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
		}
		else{
		
			try {  
			

				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		}
		
		$i = $i + 1;
		
		}//FIN WHILE
		
 	 
	 
	 }
	
	
	
	
	
	//ACTUACION = Fijacion estado 
	//AALC      = Auto aprueba liquidaciï¿½n crï¿½dito
	public function Registrar_FE_AALC(){
  

		$idusuario      = $_SESSION['idUsuario'];
		
		
		$cadenaradicados  = "41269"."******"."17001400300320180016200"."******"."2"."//////".
							"30644"."******"."17001400300420150021000"."******"."2"."//////".
							"42789"."******"."17001400300520190026600"."******"."2"."//////".
							"42935"."******"."17001400300520190030400"."******"."2"."//////".
							"40028"."******"."17001400300620180051700"."******"."2"."//////".
							"37299"."******"."17001400301020170082600"."******"."2"."//////".
							"41734"."******"."17001400301020180076600"."******"."2"."//////".
							"41162"."******"."17001400301020180080200"."******"."2"."//////".
							"31447"."******"."17001400301120150000500"."******"."2"."//////".
							"33767"."******"."17001400301220160012500"."******"."2"."//////".
							"34916"."******"."17001400301220160017500"."******"."2"."//////";
							
			

		$cadenaradicados_2 = explode("//////",$cadenaradicados);
		$i = 0;
		$cantidadid = count($cadenaradicados_2);
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
			
		$tiporegistro = "Auto aprueba liquidacion credito";
		$accion       = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//--------------------------------------------------------------------------------------------
		
		
		$observaciondespacho   = 'Auto aprueba liquidacion credito';
		$observaciondespacho_2 = 'ESTADO DE 28 DE MAYO DE 2020';
		
		$OBST110 = "Actuaciï¿½n registrada el ".$fechalog." a las: ".$horalog;
		

		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		//--------------------------------------------------------------------------------------------
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		$serverName     = "192.168.89.20"; //serverName\instanceName
		$connectionInfo = array( "Database"=>"ConsejoPN", "UID"=>"usuariooecm","PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		while($i < $cantidadid - 1){
		
		$cadenaradicados_3 = explode("******",$cadenaradicados_2[$i]);
		
		//SQL PARA PRUEBAS
		/*$sql = ("UPDATE info1 SET des = '$observaciondespacho'
			     WHERE radicado ='$cadenaradicados_3[$i]';");*/
		
		/*$sql = ("INSERT INTO info3(idradicados) 
		         values('$cadenaradicados_3[0]');"); */
		
				
			
		$sininstancia = $cadenaradicados_3[1];
	  	$sin = substr($sininstancia, 0, 21);
		
					
		//PARA QUE EN SECRETRAIA (OECM) SE APLIQUE LA ACTUACION FIJE ESTADO Y EN DESPACHO LA ACTUACION Auto termina proceso por desistimiento tï¿½cito
		//EN LA TABLA t103dainfoproc ES DONDE SE ACTUALIZA LA ACTUACION TANTO DE DESPACHO COMO DE SECRETARIA
		//Y EN LA TABLA T110DRACTUPROC SE INSERTA LA ULTIMA ACTUACION DE DESPACHO
		
		//TABLA t103dainfoproc
		
		//FECHA SECRETARIA DESCRIPCION
		//a103fechdess = convert(datetime, '2016-03-15', 121),
		
		//FECHA DESPACHO DESCRIPCION
		//a103fechdesd = convert(datetime, '2016-03-15', 121), 
		
		//TABLA T110DRACTUPROC
		
		//FECHA INICIAL A110FECHINIC
		//convert(datetime, '2016-03-16', 121),
		
		//FECHA FINAL A110FECHFINA
		//convert(datetime, '2016-03-16', 121),
		
		//FECHA REGISTRO A110FECHREGI
		//convert(datetime, '2016-03-15', 121),
		
		//FECHA A110FECHPROV
		//convert(datetime, '2016-03-15', 121),
		
		//FECHA A110FECHDESA
		//convert(datetime, '2016-03-15', 121),
		
		
		//NOTA EJEMPLO: SI LAS FECHAS (a103fechdess , a103fechdesd) EN LA TABLA t103dainfoproc ES 2016-03-15 
		//LAS FECHAS INICAL Y FINAL EN T110DRACTUPROC SON 2016-03-16 
		//Y LAS OTRAS SON LAS MISMAS QUE t103dainfoproc
		
		$sql = ("	
					
					DECLARE @cad integer
					 
					UPDATE t103dainfoproc SET 
					a103descactd = 'Auto aprueba liquidaciï¿½n crï¿½dito', 
					a103codiactd = '30023402', 
					a103codipadd = '30023118', 
					a103fechdesd =  convert(datetime, '2020-05-27', 121),
					A103ANOTACTD = 'AUTO APRUEBA LIQUIDACION DE CREDITO'
	                WHERE a103llavproc = '$cadenaradicados_3[1]'
					
					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$cadenaradicados_3[1]' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
				    A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
				    A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
				    A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
				    A110RENUTERM) 
				    values('$cadenaradicados_3[1]',@cad,'$sin','00','00000108','00000106','Fijacion estado','L','SI','C',1,
					convert(datetime, '2020-05-28', 121),
					convert(datetime, '2020-05-28', 121),
					convert(datetime, '2020-05-27', 121),
					NULL,NULL,NULL,NULL,
					NULL,
				    '$OBST110',NULL,NULL,'S','D',
					convert(datetime, '2020-05-27', 121),
					NULL,NULL)
					
				");
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			echo $conn."RADICADO".$cadenaradicados_3[1];
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
		}
		else{
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			  
					//Auto resuelve sustituciï¿½n poder
			
					$this->db->exec("UPDATE ubicacion_expediente SET 
					                 fecha            ='2020-05-27',
									 idjuzgadodestino = '$cadenaradicados_3[2]',
					                 fechasalida      = NULL,
									 fechadevolucion  = '2020-05-27',
									 idusuario        = '$idusuario'
	  								 WHERE id='$cadenaradicados_3[0]'");
									 
					
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$cadenaradicados_3[0]','2020-05-27 00:00:00','$observaciondespacho','$idusuario')");
			
			
				  	$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$cadenaradicados_3[0]','2020-05-27 00:00:00','$observaciondespacho_2','$idusuario')");
					
					
					//LOG	
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
					                 VALUES ('2020-05-27', '$accion','$detalle','$idusuario','$tipolog')");
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		}
		
		$i = $i + 1;
		
		}//FIN WHILE
		
  }
  
  
  
  
  
  /***************Auto modifica liquidacion presentada***************/
  
  
  //AMLC      = Auto modifica liquidacion presentada
  public function Registrar_AMLC(){
  

		$idusuario      = $_SESSION['idUsuario'];
		
		
		$cadenaradicados  = "42443"."******"."17001400300120180065100"."******"."2"."//////".
							"42568"."******"."17001400300120190064500"."******"."2"."//////".
							"42497"."******"."17001400300320190062800"."******"."2"."//////".
							"38880"."******"."17001400300420180010800"."******"."2"."//////".
							"37148"."******"."17001400300520170060100"."******"."2"."//////".
							"39288"."******"."17001400300620180044600"."******"."2"."//////".
							"42877"."******"."17001400300620180075500"."******"."2"."//////".
							"24983"."******"."17001400300720130008700"."******"."2"."//////".
							"34014"."******"."17001400300720160005300"."******"."2"."//////".
							"28448"."******"."17001400300820110009400"."******"."2"."//////".
							"26081"."******"."17001400300820130063700"."******"."2"."//////".
							"38682"."******"."17001400300920180034900"."******"."2"."//////".
							"42900"."******"."17001400301020180051200"."******"."2"."//////".
							"42574"."******"."17001400301020180078100"."******"."2"."//////".
							"42164"."******"."17001400301020190010200"."******"."2"."//////".
							"36057"."******"."17001400301120160068700"."******"."2"."//////".
							"39578"."******"."17001400301120170002500"."******"."2"."//////".
							"41614"."******"."17001400301120190033300"."******"."2"."//////".
							"43095"."******"."17001400301120190080600"."******"."2"."//////".
							"43097"."******"."17001400301120190084000"."******"."2"."//////";

							
		$cadenaradicados_2 = explode("//////",$cadenaradicados);
		$i = 0;
		$cantidadid = count($cadenaradicados_2);
		
		//--------------------------------------------------------------------------------------------
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		$serverName     = "192.168.89.20"; //serverName\instanceName
		$connectionInfo = array( "Database"=>"ConsejoPN", "UID"=>"usuariooecm","PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		while($i < $cantidadid - 1){
		
		$cadenaradicados_3 = explode("******",$cadenaradicados_2[$i]);
		
		//SQL PARA PRUEBAS
		/*$sql = ("UPDATE info1 SET des = '$observaciondespacho'
			     WHERE radicado ='$cadenaradicados_3[$i]';");*/
		
		/*$sql = ("INSERT INTO info3(idradicados) 
		         values('$cadenaradicados_3[0]');"); */
		
				
			
		$sininstancia = $cadenaradicados_3[1];
	  	$sin = substr($sininstancia, 0, 21);
		
					
		
		
		$sql = ("
		
					
					DECLARE @cad integer
					 

					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$cadenaradicados_3[1]' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
				    A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
				    A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
				    A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
				    A110RENUTERM) 
				    values('$cadenaradicados_3[1]',@cad,'$sin','00','30023324','30023118','Auto modifica liquidacion presentada','N','NO','N',NULL,
					NULL,
					NULL,
					convert(datetime, '2020-05-27', 121),
					NULL,NULL,'0020',NULL,
					convert(datetime, '2020-05-27', 121),
				    NULL,NULL,NULL,'D','P',
					convert(datetime, '2020-05-27', 121),
					NULL,NULL)
					
					
			");
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			echo $conn."RADICADO".$cadenaradicados_3[1];
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
		}
		else{
		
			try {  
			

				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		}
		
		$i = $i + 1;
		
		}//FIN WHILE
		
 	 
	 
	 }
	
	
	
	
	
	//ACTUACION = Fijacion estado 
	//AMLC      = Auto modifica liquidacion presentada
	public function Registrar_FE_AMLC(){
  

		$idusuario      = $_SESSION['idUsuario'];
		
		
		$cadenaradicados  = "42443"."******"."17001400300120180065100"."******"."2"."//////".
							"42568"."******"."17001400300120190064500"."******"."2"."//////".
							"42497"."******"."17001400300320190062800"."******"."2"."//////".
							"38880"."******"."17001400300420180010800"."******"."2"."//////".
							"37148"."******"."17001400300520170060100"."******"."2"."//////".
							"39288"."******"."17001400300620180044600"."******"."2"."//////".
							"42877"."******"."17001400300620180075500"."******"."2"."//////".
							"24983"."******"."17001400300720130008700"."******"."2"."//////".
							"34014"."******"."17001400300720160005300"."******"."2"."//////".
							"28448"."******"."17001400300820110009400"."******"."2"."//////".
							"26081"."******"."17001400300820130063700"."******"."2"."//////".
							"38682"."******"."17001400300920180034900"."******"."2"."//////".
							"42900"."******"."17001400301020180051200"."******"."2"."//////".
							"42574"."******"."17001400301020180078100"."******"."2"."//////".
							"42164"."******"."17001400301020190010200"."******"."2"."//////".
							"36057"."******"."17001400301120160068700"."******"."2"."//////".
							"39578"."******"."17001400301120170002500"."******"."2"."//////".
							"41614"."******"."17001400301120190033300"."******"."2"."//////".
							"43095"."******"."17001400301120190080600"."******"."2"."//////".
							"43097"."******"."17001400301120190084000"."******"."2"."//////";
							
			

		$cadenaradicados_2 = explode("//////",$cadenaradicados);
		$i = 0;
		$cantidadid = count($cadenaradicados_2);
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
			
		$tiporegistro = "Auto modifica liquidacion presentada";
		$accion       = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//--------------------------------------------------------------------------------------------
		
		
		$observaciondespacho   = 'Auto modifica liquidacion presentada';
		$observaciondespacho_2 = 'ESTADO DE 28 DE MAYO DE 2020';
		
		$OBST110 = "Actuaciï¿½n registrada el ".$fechalog." a las: ".$horalog;
		

		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		//--------------------------------------------------------------------------------------------
		$error_transaccion = 0; //variable para detectar error
		
		//-----------------------EMPIEZA LA TRANSACCION SQLSERVER---------------------------------
		//SE DEFINO EN EL PRINCIPIO PARA QUE TOME TODAS LAS SENTENCIAS SQL
		//DE SQL SERVER QUE SEAN PROCESADAS, ES DECIR UN BLOQUE DE TRANSACCIONES
		//NO INDIVIDUALMENTE
		
		//CONEXION LOCAL PARA PRUEBAS
		/*$serverName   = "OECM-SISTE1\SQLEXPRESS";
		$connectionInfo = array( "Database"=>"prueba2", "UID"=>"sa", "PWD"=>"JAVO1978emmanuel08");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);*/
		
		//CONEXION A SIGLO XXI
		$serverName     = "192.168.89.20"; //serverName\instanceName
		$connectionInfo = array( "Database"=>"ConsejoPN", "UID"=>"usuariooecm","PWD"=>"OficinaECM");
		$conn           = sqlsrv_connect( $serverName, $connectionInfo);
		
		if( $conn === false ) {
			//die( print_r( sqlsrv_errors(), true ));
			$error_transaccion = 1;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $conn ) === false ) {
			 
			 $error_transaccion = 1;
			 
		}
				
		//--------------------------------------------------------------------------------------------------------------------------------------------
		//SQL 3 ACTUALIZACIONES A SIGLO XXI
		
		while($i < $cantidadid - 1){
		
		$cadenaradicados_3 = explode("******",$cadenaradicados_2[$i]);
		
		//SQL PARA PRUEBAS
		/*$sql = ("UPDATE info1 SET des = '$observaciondespacho'
			     WHERE radicado ='$cadenaradicados_3[$i]';");*/
		
		/*$sql = ("INSERT INTO info3(idradicados) 
		         values('$cadenaradicados_3[0]');"); */
		
				
			
		$sininstancia = $cadenaradicados_3[1];
	  	$sin = substr($sininstancia, 0, 21);
		
					
		//PARA QUE EN SECRETRAIA (OECM) SE APLIQUE LA ACTUACION FIJE ESTADO Y EN DESPACHO LA ACTUACION Auto termina proceso por desistimiento tï¿½cito
		//EN LA TABLA t103dainfoproc ES DONDE SE ACTUALIZA LA ACTUACION TANTO DE DESPACHO COMO DE SECRETARIA
		//Y EN LA TABLA T110DRACTUPROC SE INSERTA LA ULTIMA ACTUACION DE DESPACHO
		
		//TABLA t103dainfoproc
		
		//FECHA SECRETARIA DESCRIPCION
		//a103fechdess = convert(datetime, '2016-03-15', 121),
		
		//FECHA DESPACHO DESCRIPCION
		//a103fechdesd = convert(datetime, '2016-03-15', 121), 
		
		//TABLA T110DRACTUPROC
		
		//FECHA INICIAL A110FECHINIC
		//convert(datetime, '2016-03-16', 121),
		
		//FECHA FINAL A110FECHFINA
		//convert(datetime, '2016-03-16', 121),
		
		//FECHA REGISTRO A110FECHREGI
		//convert(datetime, '2016-03-15', 121),
		
		//FECHA A110FECHPROV
		//convert(datetime, '2016-03-15', 121),
		
		//FECHA A110FECHDESA
		//convert(datetime, '2016-03-15', 121),
		
		
		//NOTA EJEMPLO: SI LAS FECHAS (a103fechdess , a103fechdesd) EN LA TABLA t103dainfoproc ES 2016-03-15 
		//LAS FECHAS INICAL Y FINAL EN T110DRACTUPROC SON 2016-03-16 
		//Y LAS OTRAS SON LAS MISMAS QUE t103dainfoproc
		
		$sql = ("	
					
					DECLARE @cad integer
					 
					UPDATE t103dainfoproc SET 
					a103descactd = 'Auto modifica liquidacion presentada', 
					a103codiactd = '30023324', 
					a103codipadd = '30023118', 
					a103fechdesd =  convert(datetime, '2020-05-27', 121),
					A103ANOTACTD = 'AUTO MODIFICA LIQUIDACION DE CREDITO'
	                WHERE a103llavproc = '$cadenaradicados_3[1]'
					
					SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$cadenaradicados_3[1]' 
					
					INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
				    A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
				    A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
				    A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
				    A110RENUTERM) 
				    values('$cadenaradicados_3[1]',@cad,'$sin','00','00000108','00000106','Fijacion estado','L','SI','C',1,
					convert(datetime, '2020-05-28', 121),
					convert(datetime, '2020-05-28', 121),
					convert(datetime, '2020-05-27', 121),
					NULL,NULL,NULL,NULL,
					NULL,
				    '$OBST110',NULL,NULL,'S','D',
					convert(datetime, '2020-05-27', 121),
					NULL,NULL)
					
				");
				
		
		$params = array();
		$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmt = sqlsrv_query( $conn, $sql , $params, $options );
		
		
		//SI ES CORRECTO O NO, NO SE CONSOLIDA LA TRANSACCION O ES REVERTIDA
		//EN ESTA PARTE TODO SE MANEJA MAS ABAJO AL PREGUNTAR POR LA VARIABLE
		//$error_transaccion Y SE EJECUTA sqlsrv_rollback( $conn ) ï¿½ sqlsrv_commit( $conn )
		//IGUAL QUE EN MySQL
		if( $stmt ) {
			 //sqlsrv_commit( $conn );
			 //echo "Transaccion consolidada.<br />";
		} 
		else {
			//sqlsrv_rollback( $conn );
			//echo "Transaccion revertida.<br />";
			$error_transaccion = 1;
			
		}
		
		
		//--------------------------------------------------------------------------------------------------------------------------------------------

	
		if($error_transaccion) {
			
			//ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
			sqlsrv_rollback( $conn );
			echo $conn."RADICADO".$cadenaradicados_3[1];
			/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
		}
		else{
		
			try {  
			
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
				
			  
					//Auto resuelve sustituciï¿½n poder
			
					$this->db->exec("UPDATE ubicacion_expediente SET 
					                 fecha            ='2020-05-27',
									 idjuzgadodestino = '$cadenaradicados_3[2]',
					                 fechasalida      = NULL,
									 fechadevolucion  = '2020-05-27',
									 idusuario        = '$idusuario'
	  								 WHERE id='$cadenaradicados_3[0]'");
									 
					
					$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$cadenaradicados_3[0]','2020-05-27 00:00:00','$observaciondespacho','$idusuario')");
			
			
				  	$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
					                 VALUES('$cadenaradicados_3[0]','2020-05-27 00:00:00','$observaciondespacho_2','$idusuario')");
					
					
					//LOG	
					$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
					                 VALUES ('2020-05-27', '$accion','$detalle','$idusuario','$tipolog')");
					
				
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				//SE TERMINA LA TRANSACCION EN SIGLO XXI  
				sqlsrv_commit( $conn );
				
				print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2"</script>';
			  
			} 
			catch (Exception $e) {
			
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
				
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
				
				echo "Fallo: " . $e->getMessage();
				
				/*print'<script languaje="Javascript">location.href="index.php?controller=archivo&action=mensajes&nombre=2b"</script>';*/
			}
		
		}
		
		$i = $i + 1;
		
		}//FIN WHILE
		
  }
  
  //********************************************************************************************
						
						//FIN PROCESOS MASIVOS 
						//Auto aprueba liquidaciï¿½n crï¿½dito
						//Auto modifica liquidacion presentada 
						//Fijacion estado
						
	//********************************************************************************************
	
	
	
	//NUEVO ADICIONADO 29 DE MAYO 2020
	
	//********************************************************************************************
	
						
						//PROCESOS MASIVOS DESDE FORMUARIO SIEPRO OPCION ACTUACION JUSTICIA XXI MASIVA 
						//Auto aprueba liquidaciï¿½n crï¿½dito
						//Auto modifica liquidacion presentada 
						//Fijacion estado
						
	//********************************************************************************************
	
	
	//LISTA ACTUACIONES JUSTICIA XXI TABLA T054BAACTUGENE
	public function lista_T054BAACTUGENE(){
	
		$modelo     = new archivoModel();
		
		$cadena_lista = "";
  
  		$error_transaccionX = 0;
		
  		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
			
		$serverNameX = $datosbd_1; //serverName\instanceName
		$connectionInfoX = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4 );
		$connX = sqlsrv_connect( $serverNameX, $connectionInfoX);
		
		
		if( $connX === false ) {
			
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
			
			echo "ENTRE 1 (T054BAACTUGENE)";
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $connX ) === false ) {
			 
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
			 
			echo "ENTRE 2 (T054BAACTUGENE)";
			 
		}
		

		$sqlX = ("	
			
			
					SELECT [A054CODIACTU],[A054CODIPADR],[A054DESCACTU]
					FROM [$datosbd_2].[dbo].[T054BAACTUGENE]
					WHERE [A054CODIACTU] IN(30023402,30023324,30023388,00000108,30023317)
					ORDER BY [A054DESCACTU]
							
		");
			
		$paramsX  = array();
		$optionsX =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmtX    = sqlsrv_query( $connX, $sqlX , $paramsX, $optionsX );
			
			
		if( $stmtX === false ) {
			
			$error_transaccionX = 1;
			
			if( ($errors = sqlsrv_errors() ) != null) {
				
				foreach( $errors as $error ) {
					
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
				
			echo "ENTRE 3 (T054BAACTUGENE)";
				
		}
		else{
				
			//$row_count = sqlsrv_num_rows( $stmtX );
			
			

			
				 while( $row = sqlsrv_fetch_array( $stmtX) ){
				 
						$A054CODIACTU = $row['A054CODIACTU'];
						$A054CODIPADR = $row['A054CODIPADR'];
						$A054DESCACTU = $row['A054DESCACTU'];
						 
						$cadena_lista .= $A054CODIACTU."//////".$A054CODIPADR."//////".$A054DESCACTU."******";
				 
				 }//FIN WHILE	
					
		
	
		}	
		
		
		sqlsrv_free_stmt( $stmtX);
		sqlsrv_close( $connX );
		
		return $cadena_lista;
  	}
	
	
	
	public function Registrar_ACTUACION_MASIVO_JXXI(){


		$modelo    = new archivoModel();
		
		$idusuario = $_SESSION['idUsuario'];
		
		$fechae    = trim($_POST['fechae']);   //FECHA REGISTRO
		$fechae_2B = trim($_POST['fechae_2B']);//FECHA ESTADO
		
		$lactu     = explode("//////",trim($_POST['lactu']));    //ACTUACION
		$lactu_1   = trim($lactu[0]);  
		$lactu_2   = trim($lactu[1]);
		
		$lactutext = utf8_decode(trim($_POST['lactutext']));//PARTE TEXTO DE LA ACTUACION
		
		//Auto aprueba liquidaciï¿½n crï¿½dito
		if($lactu_1 == '30023402'){
		
			$A110CODIPROV = '0021';
		
		}
		//Auto modifica liquidacion presentada
		if($lactu_1 == '30023324'){
		
			$A110CODIPROV = '0020';
		}
		
	
		$carpeta   = "CARGAMASIVA";
	

		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE ES CON EL QUE SE LOGEA EL USUARIO  
		$nom = trim($_SESSION['idUsuario']);
		
	
		//AQUI SE CREA EL DIRECTORIO
		if(is_dir($carpeta."/".$nom)){$bandera=0;}
		else{mkdir($carpeta."/".$nom, 0, true);}
		
		//datos del arhivo 
		$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		//echo $tipo_archivo;
		$tamano_archivo = $_FILES['archivo']['size']; 
		
		
		if (! (strpos($tipo_archivo, "vnd.ms-excel")) && ($tamano_archivo < 100000000) )  { 
			
			//echo "EXTENSION"."**********";
			
			echo '<script languaje="JavaScript"> 
			
	
				alert("LA EXTENSION O LA LONGITUD DEL ARCHIVO NO ES CORRECTA");
				
				location.href="index.php?controller=archivo&action=Registrar_Actuacion_Masivo";
						
			</script>';
			
			
		}
		else{//1 
		
			
			
			if ( file_exists($carpeta."/".$nom.'/'.$nombre_archivo) ) {
				
				//echo "EXISTE"."**********";
				
				/*echo '<script languaje="JavaScript"> 
			
	
						alert("YA EXISTE UN ARCHIVO CON ESE NOMBRE EN EL SERVIDOR");
				
						location.href="index.php?controller=archivo&action=Registrar_A_Despacho_Masivo";
						
					</script>';*/
					
				
				//OBTENGO UN ID PARA IDENTIFICAR UN ARCHIVO CON EL MISMO NOMBRE
				//PARA AGREGARLE EL ID A ESE NOMBRE Y QUE EL SISTEMA CONTINUE SIN AVISO DE YA EXISTE UN ARCHIVO CON ESE NOMBRE EN EL SERVIDOR
				$idunico = time();
					
				$nombre_archivo = $idunico."_".$nombre_archivo;
				
				
			}
			
			
			if ( move_uploaded_file($_FILES['archivo']['tmp_name'], $carpeta."/".$nom.'/'.$nombre_archivo) ){
			
				$lineas = file( $carpeta."/".$nom.'/'.$nombre_archivo,FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
				$long   = count($lineas);
				
				//OBETNER SEPARAR DE LOS REGISTROS YA QUE EN UNOS EQUIPOS DE COMPUTO ES ---> COMA(,)
				//Y EN OTROS ---> PUNTO Y COMA (;)
				//$separador = $modelo->Obtener_Separador( trim($lineas[1]) );
				
				$error_transaccion   = 0; //variable para detectar error
				//$error_transaccion_2 = 0; //variable para detectar error
				//$error_transaccion_3 = 0; //variable para detectar error
				
				$msgError  = "";
				
				$datosbd   = $modelo->get_datos_basededatos(1);
				$datosbd_b = $datosbd->fetch();
				$datosbd_1 = $datosbd_b[ip];
				$datosbd_2 = $datosbd_b[bd];
				$datosbd_3 = $datosbd_b[usuario];
				$datosbd_4 = $datosbd_b[clave];
				
				
		
				try {  
					
						
								
								//*********************************NUEVA CONEXON**************************************************
					
								$serverName     = $datosbd_1; //serverName\instanceName
								$connectionInfo = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
								$conn           = sqlsrv_connect( $serverName, $connectionInfo);
									
									
								if( $conn === false ) {
										
										$error_transaccion = 1;
									
										if( ($errors = sqlsrv_errors() ) != null) {
										
											foreach( $errors as $error ) {
											
												$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
											}
										}
										
										//echo "ENTRE 1";
										
								}
									
								//Iniciar la transacciï¿½n.
								if ( sqlsrv_begin_transaction( $conn ) === false ) {
										 
										$error_transaccion = 1;
									
										if( ($errors = sqlsrv_errors() ) != null) {
										
											foreach( $errors as $error ) {
											
												$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
											}
										}
										 
										//echo "ENTRE 2";
										 
								}
								
								//ASI CUANDO EL ARCHIVO TIENE ENCABEZADOS
								$i=1;
								
								while($i < $long){
									
									//echo $lineas[$i]."\n";
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR COMAS
									//$fila = explode(",",$lineas[$i]);
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR PUNTO Y COMA
									//$fila = explode(";",$lineas[$i]);
									
									$fila = explode(";",$lineas[$i]);
									
									//$idradicado = trim($fila[0]);
									$radicado   = trim($fila[1]);
									
									
									$datos_ACTU110 = $modelo->get_datos_EXISTE_ACTUACION($radicado,$fechae,$lactutext);
									
									//$datos_ACTU110 = 0;
									
									
									//NO EXISTE ACTUACION EN JUSTICIA XXI Y EN LA BASE DE DATOS LOCAL EJECUCION
									//ESTO PERMITE NO REPETIR EL PROCESO DE UN RADICADO
									if ($datos_ACTU110 == 0){
													
										
										$sininstancia = $radicado;
										$sin          = substr($sininstancia, 0, 21);
										
										
										
										$sql = ("
		
					
													DECLARE @cad integer
													
													
													UPDATE t103dainfoproc SET 
													
													a103descactd = '$lactutext', 
													a103codiactd = '$lactu_1', 
													a103codipadd = '$lactu_2', 
													a103fechdesd =  convert(datetime, '$fechae', 121),
													A103ANOTACTD = '$lactutext'
													
													WHERE a103llavproc = '$radicado'
													 
								
													SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc = '$radicado' 
													
													INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
													A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
													A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
													A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
													A110RENUTERM) 
													values('$radicado',@cad,'$sin','00','$lactu_1','$lactu_2','$lactutext','N','NO','N',NULL,
													NULL,
													NULL,
													convert(datetime, '$fechae', 121),
													NULL,NULL,'$A110CODIPROV',NULL,
													convert(datetime, '$fechae', 121),
													NULL,NULL,NULL,'D','P',
													convert(datetime, '$fechae', 121),
													NULL,NULL)
													
													
											");
										
		
										$params  = array();
										$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
										$stmt    = sqlsrv_query( $conn, $sql , $params, $options );
											
											
										if( $stmt === false ) {
											
											$error_transaccion = 1;
											
											if( ($errors = sqlsrv_errors() ) != null) {
												
												foreach( $errors as $error ) {
													
													$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
												}
											}
												
											//echo "ENTRE 3";
												
										}
									
									
									}//FIN IF if ($datos_ACTU110 == 0)
									
			
									$i= $i + 1;
																 
								}//FIN WHILE while($i < $long){		
								
								
								if($error_transaccion) {
								
									
									//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
									sqlsrv_rollback( $conn );
									
									// Cerrar la conexiï¿½n.
									sqlsrv_close( $conn );
									
									
									echo '<script languaje="JavaScript"> 
				
							
											var ERROR = "'.$msgError.'";
						
											alert("ERROR 1: "+ERROR);
									
											location.href="index.php?controller=archivo&action=Registrar_Actuacion_Masivo";
											
										
										</script>';
								
								}
								else{
								
									
									
									//SE TERMINA LA TRANSACCION EN JUSTICIA XXI  
									sqlsrv_commit( $conn );	
									
									echo '<script languaje="JavaScript"> 
							
			
											alert("PROCESO SE REALIZA CORRECTAMENTE");
								
											location.href="index.php?controller=archivo&action=Registrar_Actuacion_Masivo";
										
									</script>';
								}
						
						
				}
				catch (Exception $e) {
			
					//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
					$this->db->rollBack();
					
					//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
					sqlsrv_rollback( $conn );
					
					// Cerrar la conexiï¿½n.
					sqlsrv_close( $conn );
					
					//echo "Fallo: " . $e->getMessage();
					
					
					echo '<script languaje="JavaScript"> 
				
							
							var ERROR = "'.$e->getMessage()." SEPARADOR: ".$separador.'";
		
							alert("ERROR 2: "+ERROR);
					
							location.href="index.php?controller=archivo&action=Registrar_Actuacion_Masivo";
							
						</script>';
			
					
				}		
						
						
				
				
			}
			
				
			
		
		}//FIN ELSE 1
			
		

	}//FIN FUNCION 
	
	
	
	public function Registrar_ActuacionFEJXXI_MASIVO(){


		$modelo    = new archivoModel();
		
		$idusuario = $_SESSION['idUsuario'];
	
		$fechae    = trim($_POST['fechae']);   //FECHA REGISTRO
		$fechae_2B = trim($_POST['fechae_2B']);//FECHA ESTADO
		
		$lactu     = explode("//////",trim($_POST['lactu']));    //ACTUACION
		$lactu_1   = trim($lactu[0]);  
		$lactu_2   = trim($lactu[1]);
		
		$lactutext = utf8_decode(trim($_POST['lactutext']));//PARTE TEXTO DE LA ACTUACION
		
	
		$carpeta   = "CARGAMASIVA";
	
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		$modelo     = new archivoModel();
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
			
		$tiporegistro = $lactutext;
		$accion       = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//--------------------------------------------------------------------------------------------
		
		
		$observaciondespacho   = $lactutext;
		setlocale(LC_TIME, "Spanish");
		$fecha_estado          = strftime('%d de %B del %Y', strtotime($fechae_2B));  
		//$observaciondespacho_2 = 'ESTADO DE 26 DE MAYO DE 2020';
		$observaciondespacho_2 = 'ESTADO '.strtoupper($fecha_estado);
		
		$OBST110 = "Actuaciï¿½n registrada el ".$fechalog." a las: ".$horalog;
		

		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		//--------------------------------------------------------------------------------------------
		

		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE ES CON EL QUE SE LOGEA EL USUARIO  
		//$nom = "jvalenciao";
		$nom = trim($_SESSION['idUsuario']);
		
	
		//AQUI SE CREA EL DIRECTORIO
		if(is_dir($carpeta."/".$nom)){$bandera=0;}
		else{mkdir($carpeta."/".$nom, 0, true);}
		
		//datos del arhivo 
		$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		//echo $tipo_archivo;
		$tamano_archivo = $_FILES['archivo']['size']; 
		
		
		if (! (strpos($tipo_archivo, "vnd.ms-excel")) && ($tamano_archivo < 100000000) )  { 
			
			//echo "EXTENSION"."**********";
			
			echo '<script languaje="JavaScript"> 
			
	
				alert("LA EXTENSION O LA LONGITUD DEL ARCHIVO NO ES CORRECTA");
				
				location.href="index.php?controller=archivo&action=Registrar_Actuacion_Masivo";
						
			</script>';
			
			
		}
		else{//1 
		
			
			
			if ( file_exists($carpeta."/".$nom.'/'.$nombre_archivo) ) {
				
				//echo "EXISTE"."**********";
				
				/*echo '<script languaje="JavaScript"> 
			
	
						alert("YA EXISTE UN ARCHIVO CON ESE NOMBRE EN EL SERVIDOR");
				
						location.href="index.php?controller=archivo&action=Registrar_A_Despacho_Masivo";
						
					</script>';*/
					
				
				//OBTENGO UN ID PARA IDENTIFICAR UN ARCHIVO CON EL MISMO NOMBRE
				//PARA AGREGARLE EL ID A ESE NOMBRE Y QUE EL SISTEMA CONTINUE SIN AVISO DE YA EXISTE UN ARCHIVO CON ESE NOMBRE EN EL SERVIDOR
				$idunico = time();
					
				$nombre_archivo = $idunico."_".$nombre_archivo;
				
				
			}
			
			
			if ( move_uploaded_file($_FILES['archivo']['tmp_name'], $carpeta."/".$nom.'/'.$nombre_archivo) ){
			
				$lineas = file( $carpeta."/".$nom.'/'.$nombre_archivo,FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
				$long   = count($lineas);
				
				//OBETNER SEPARAR DE LOS REGISTROS YA QUE EN UNOS EQUIPOS DE COMPUTO ES ---> COMA(,)
				//Y EN OTROS ---> PUNTO Y COMA (;)
				$separador = $modelo->Obtener_Separador( trim($lineas[1]) );
				
				$error_transaccion   = 0; //variable para detectar error
				//$error_transaccion_2 = 0; //variable para detectar error
				//$error_transaccion_3 = 0; //variable para detectar error
				
				$msgError  = "";
				
				$datosbd   = $modelo->get_datos_basededatos(1);
				$datosbd_b = $datosbd->fetch();
				$datosbd_1 = $datosbd_b[ip];
				$datosbd_2 = $datosbd_b[bd];
				$datosbd_3 = $datosbd_b[usuario];
				$datosbd_4 = $datosbd_b[clave];
				
				
		
				try {  
					
						$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
						
						//EMPIEZA LA TRANSACCION
						$this->db->beginTransaction();
						
						
								
								//*********************************NUEVA CONEXON**************************************************
					
								$serverName = $datosbd_1; //serverName\instanceName
								$connectionInfo = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
								$conn = sqlsrv_connect( $serverName, $connectionInfo);
									
									
								if( $conn === false ) {
										
										$error_transaccion = 1;
									
										if( ($errors = sqlsrv_errors() ) != null) {
										
											foreach( $errors as $error ) {
											
												$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
											}
										}
										
										//echo "ENTRE 1";
										
								}
									
								//Iniciar la transacciï¿½n.
								if ( sqlsrv_begin_transaction( $conn ) === false ) {
										 
										$error_transaccion = 1;
									
										if( ($errors = sqlsrv_errors() ) != null) {
										
											foreach( $errors as $error ) {
											
												$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
											}
										}
										 
										//echo "ENTRE 2";
										 
								}
								
								//ASI CUANDO EL ARCHIVO TIENE ENCABEZADOS
								$i=1;
								
								while($i < $long){
									
									//echo $lineas[$i]."\n";
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR COMAS
									//$fila = explode(",",$lineas[$i]);
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR PUNTO Y COMA
									//$fila = explode(";",$lineas[$i]);
									
									$fila = explode(";",$lineas[$i]);
									
									$idradicado = trim($fila[0]);
									$radicado   = trim($fila[1]);
									$juzd       = trim($fila[2]);
									
									
									$datos_ACTU110 = $modelo->get_datos_EXISTE_ACTUACION($radicado,$fechae,$lactutext);
									
									//$datos_ACTU110 = 0;
									//NO EXISTE ACTUACION EN JUSTICIA XXI Y EN LA BASE DE DATOS LOCAL EJECUCION
									//ESTO PERMITE NO REPETIR EL PROCESO DE UN RADICADO
									if ($datos_ACTU110 == 0){
									
													
										$this->db->exec("UPDATE ubicacion_expediente SET 
										
															 fecha            = '$fechae',
															 idjuzgadodestino = '$juzd',
															 fechasalida      = NULL,
															 fechadevolucion  = '$fechae',
															 idusuario        = '$idusuario'
															 
														 WHERE id ='$idradicado'");
														 
														 
										$fechae_2 = $fechae." 00:00:00";
										
										$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
														 VALUES('$idradicado','$fechae_2','$observaciondespacho','$idusuario')");
								
								
										$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
														 VALUES('$idradicado','$fechae_2','$observaciondespacho_2','$idusuario')");
										
										
										//LOG	
										$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
														 VALUES ('$fechae', '$accion','$detalle','$idusuario','$tipolog')");
													 
													 
		 
				
										$sininstancia = $radicado;
										$sin          = substr($sininstancia, 0, 21);
										
										$sql = ("	
													
													DECLARE @cad integer
													 
													
													SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$radicado' 
													
													INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
													A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
													A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
													A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
													A110RENUTERM) 
													values('$radicado',@cad,'$sin','00','$lactu_1','$lactu_2','$lactutext','L','SI','C',1,
													convert(datetime, '$fechae_2B', 121),
													convert(datetime, '$fechae_2B', 121),
													convert(datetime, '$fechae', 121),
													NULL,NULL,NULL,NULL,
													NULL,
													'$OBST110',NULL,NULL,'S','D',
													convert(datetime, '$fechae', 121),
													NULL,NULL)
													
												");
										
										
		
										$params  = array();
										$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
										$stmt = sqlsrv_query( $conn, $sql , $params, $options );
											
											
										if( $stmt === false ) {
											
											$error_transaccion = 1;
											
											if( ($errors = sqlsrv_errors() ) != null) {
												
												foreach( $errors as $error ) {
													
													$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
												}
											}
												
											//echo "ENTRE 3";
												
										}
									
									
									}//FIN IF if ($datos_ACTU110 == 0)
									
			
									$i= $i + 1;
																 
								}//FIN WHILE while($i < $long){		
								
								
								if($error_transaccion) {
								
									//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
									$this->db->rollBack();
					
									//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
									sqlsrv_rollback( $conn );
									
									// Cerrar la conexiï¿½n.
									sqlsrv_close( $conn );
									
									
									echo '<script languaje="JavaScript"> 
				
							
											var ERROR = "'.$msgError.'";
						
											alert("ERROR 1: "+ERROR);
									
											location.href="index.php?controller=archivo&action=Registrar_Actuacion_Masivo";
											
										
										</script>';
								
								}
								else{
								
									//SE TERMINA LA TRANSACCION  
									$this->db->commit();
									
									//SE TERMINA LA TRANSACCION EN JUSTICIA XXI  
									sqlsrv_commit( $conn );	
									
									echo '<script languaje="JavaScript"> 
							
			
											alert("PROCESO SE REALIZA CORRECTAMENTE");
								
											location.href="index.php?controller=archivo&action=Registrar_Actuacion_Masivo";
										
									</script>';
								}
						
						
				}
				catch (Exception $e) {
			
					//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
					$this->db->rollBack();
					
					//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
					sqlsrv_rollback( $conn );
					
					// Cerrar la conexiï¿½n.
					sqlsrv_close( $conn );
					
					//echo "Fallo: " . $e->getMessage();
					
					
					echo '<script languaje="JavaScript"> 
				
							
							var ERROR = "'.$e->getMessage().'";
		
							alert("ERROR 2: "+ERROR);
					
							location.href="index.php?controller=archivo&action=Registrar_Actuacion_Masivo";
							
						</script>';
			
					
				}		
						
						
				
				
			}
			
				
			
		
		}//FIN ELSE 1
			
		

	}//FIN FUNCION 
	
	
	
	
	
	//ESTA FUNCION PERMITE REGISTRAR LA ACTUACION Y FIJAR ESTADO EN UN SOLO
	//MOVIMIENTO, ES DECIR NO COMO ESTA ACTUALMENTE QUE PRIMERO SE REGISTRA
	//LA ACTUACION Y LUEGO SE FIJA ESTADO 
	//CAMBIO REALIZADO 3 DE JUNIO 2020
	//SE ESPECIFICA QUE LAS FUNCIONOES Registrar_ACTUACION_MASIVO_JXXI() Y Registrar_ActuacionFEJXXI_MASIVO()
	//FUNCIONAN PERFECTAMENTE, Y QUEDAN REEMPLAZADAS POR  Registrar_ACTUACION_MASIVO_JXXI_NV()
	public function Registrar_ACTUACION_MASIVO_JXXI_NV(){


		$modelo    = new archivoModel();
		
		$idusuario = $_SESSION['idUsuario'];
		
		$fechae    = trim($_POST['fechae']);   //FECHA REGISTRO
		$fechae_2B = trim($_POST['fechae_2B']);//FECHA ESTADO
		
		$lactu     = explode("//////",trim($_POST['lactu']));    //ACTUACION
		$lactu_1   = trim($lactu[0]);  
		$lactu_2   = trim($lactu[1]);
		
		$lactutext = utf8_decode(trim($_POST['lactutext']));//PARTE TEXTO DE LA ACTUACION
		
		//Auto aprueba liquidaciï¿½n crï¿½dito ï¿½ Auto aprueba liquidaciï¿½n de costas
		if($lactu_1 == '30023402' || $lactu_1 == '30023317'){
		
			$A110CODIPROV = '0021';
		
		}
		//Auto modifica liquidacion presentada ï¿½ Auto termina proceso por desistimiento tï¿½cito
		if($lactu_1 == '30023324' || $lactu_1 == '30023388'){
		
			$A110CODIPROV = '0020';
		}
		
	
		$carpeta   = "CARGAMASIVA";
		
	
		
		//--------------------------PARA LA TABLA LOG------------------------------------------------
		
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		$horalog    = $datosfecha[1];
			
			
		$tiporegistro = $lactutext;
		$accion       = "Registra ".$tiporegistro." En el Sistema (SIEPRO)";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//--------------------------------------------------------------------------------------------
		
		
		$observaciondespacho   = $lactutext;
		setlocale(LC_TIME, "Spanish");
		$fecha_estado          = strftime('%d de %B del %Y', strtotime($fechae_2B));  
		//$observaciondespacho_2 = 'ESTADO DE 26 DE MAYO DE 2020';
		$observaciondespacho_2 = 'ESTADO '.strtoupper($fecha_estado);
		
		$OBST110 = "Actuaciï¿½n registrada el ".$fechalog." a las: ".$horalog;
		

		date_default_timezone_set('America/Bogota'); 
		$fecharegistro = date('Y-m-d g:i');
		
		
		
	

		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE ES CON EL QUE SE LOGEA EL USUARIO  
		$nom = trim($_SESSION['idUsuario']);
		
	
		//AQUI SE CREA EL DIRECTORIO
		if(is_dir($carpeta."/".$nom)){$bandera=0;}
		else{mkdir($carpeta."/".$nom, 0, true);}
		
		//datos del arhivo 
		$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		//echo $tipo_archivo;
		$tamano_archivo = $_FILES['archivo']['size']; 
		
		
		if (! (strpos($tipo_archivo, "vnd.ms-excel")) && ($tamano_archivo < 100000000) )  { 
			
			//echo "EXTENSION"."**********";
			
			echo '<script languaje="JavaScript"> 
			
	
				alert("LA EXTENSION O LA LONGITUD DEL ARCHIVO NO ES CORRECTA");
				
				location.href="index.php?controller=archivo&action=Registrar_Actuacion_Masivo";
						
			</script>';
			
			
		}
		else{//1 
		
			
			
			if ( file_exists($carpeta."/".$nom.'/'.$nombre_archivo) ) {
				
				//echo "EXISTE"."**********";
				
				/*echo '<script languaje="JavaScript"> 
			
	
						alert("YA EXISTE UN ARCHIVO CON ESE NOMBRE EN EL SERVIDOR");
				
						location.href="index.php?controller=archivo&action=Registrar_A_Despacho_Masivo";
						
					</script>';*/
					
				
				//OBTENGO UN ID PARA IDENTIFICAR UN ARCHIVO CON EL MISMO NOMBRE
				//PARA AGREGARLE EL ID A ESE NOMBRE Y QUE EL SISTEMA CONTINUE SIN AVISO DE YA EXISTE UN ARCHIVO CON ESE NOMBRE EN EL SERVIDOR
				$idunico = time();
					
				$nombre_archivo = $idunico."_".$nombre_archivo;
				
				
			}
			
			
			if ( move_uploaded_file($_FILES['archivo']['tmp_name'], $carpeta."/".$nom.'/'.$nombre_archivo) ){
			
				$lineas = file( $carpeta."/".$nom.'/'.$nombre_archivo,FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
				$long   = count($lineas);
				
				//OBETNER SEPARAR DE LOS REGISTROS YA QUE EN UNOS EQUIPOS DE COMPUTO ES ---> COMA(,)
				//Y EN OTROS ---> PUNTO Y COMA (;)
				//$separador = $modelo->Obtener_Separador( trim($lineas[1]) );
				
				$error_transaccion   = 0; //variable para detectar error
				//$error_transaccion_2 = 0; //variable para detectar error
				//$error_transaccion_3 = 0; //variable para detectar error
				
				$msgError  = "";
				
				$datosbd   = $modelo->get_datos_basededatos(1);
				$datosbd_b = $datosbd->fetch();
				$datosbd_1 = $datosbd_b[ip];
				$datosbd_2 = $datosbd_b[bd];
				$datosbd_3 = $datosbd_b[usuario];
				$datosbd_4 = $datosbd_b[clave];
				
				
		
				try {  
					
								$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
								//EMPIEZA LA TRANSACCION
								$this->db->beginTransaction();
												
								//*********************************NUEVA CONEXON**************************************************
					
								$serverName     = $datosbd_1; //serverName\instanceName
								$connectionInfo = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
								$conn           = sqlsrv_connect( $serverName, $connectionInfo);
									
									
								if( $conn === false ) {
										
										$error_transaccion = 1;
									
										if( ($errors = sqlsrv_errors() ) != null) {
										
											foreach( $errors as $error ) {
											
												$msgError .= "1.ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
											}
										}
										
										//echo "ENTRE 1";
										
								}
									
								//Iniciar la transacciï¿½n.
								if ( sqlsrv_begin_transaction( $conn ) === false ) {
										 
										$error_transaccion = 1;
									
										if( ($errors = sqlsrv_errors() ) != null) {
										
											foreach( $errors as $error ) {
											
												$msgError .= "2.ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
											}
										}
										 
										//echo "ENTRE 2";
										 
								}
								
								//ASI CUANDO EL ARCHIVO TIENE ENCABEZADOS
								$i=1;
								
								while($i < $long){
									
									//echo $lineas[$i]."\n";
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR COMAS
									//$fila = explode(",",$lineas[$i]);
									
									//ASI CUANDO EL ARCHIVO ESTA SEPARADO POR PUNTO Y COMA
									//$fila = explode(";",$lineas[$i]);
									
									$fila = explode(";",$lineas[$i]);
									
									$idradicado = trim($fila[0]);
									$radicado   = trim($fila[1]);
									$juzd       = trim($fila[2]);
									
									
									$datos_ACTU110 = $modelo->get_datos_EXISTE_ACTUACION($radicado,$fechae,$lactutext);
									
									//$datos_ACTU110 = 0;
									
									
									//NO EXISTE ACTUACION EN JUSTICIA XXI Y EN LA BASE DE DATOS LOCAL EJECUCION
									//ESTO PERMITE NO REPETIR EL PROCESO A DESPACHO DE UN RADICADO
									if ($datos_ACTU110 == 0){
									
									
										//MySQL
										
										//--------PRIMERO A DESPACHO, SE ADICIONA EL 1 DE SEPTIEMBRE 2020------------------------------------------
										//YA QUE LOS PROCESOS PASADOS POR EL AREA DEL CONTADOR, PARA APROBAR O MODIFICAR LIQUIDACION
										//PRIMERO VAN A DESPACHO
										
										//Auto modifica liquidacion presentada ï¿½ Auto aprueba liquidaciï¿½n crï¿½dito
										//DESISTIMIENTO YA FUE ENVIADO ADESPACHO
										if($lactu_1 == '30023324' || $lactu_1 == '30023402'){
										
											$fechae_2BX = $fechae." 00:00:00";
											
											$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
															 VALUES('$idradicado','$fechae_2BX','A DESPACHO','$idusuario')");
															 
										}
										
										
										
										//---------------------------------------------------------------------------------------------------------
										
									
										$this->db->exec("UPDATE ubicacion_expediente SET 
										
															 fecha            = '$fechae',
															 idjuzgadodestino = '$juzd',
															 fechasalida      = NULL,
															 fechadevolucion  = '$fechae',
															 idusuario        = '$idusuario'
															 
														 WHERE id ='$idradicado'");
														 
														 
										$fechae_2 = $fechae." 00:00:00";
										
										$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
														 VALUES('$idradicado','$fechae_2','$observaciondespacho','$idusuario')");
								
								
										$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
														 VALUES('$idradicado','$fechae_2','$observaciondespacho_2','$idusuario')");
										
										
										//LOG	
									
										$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog.", ID RADICADO: ".$idradicado." RADICADO: ".$radicado;
										
										$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
														 VALUES ('$fechae', '$accion','$detalle','$idusuario','$tipolog')");
									
									
									
									
									
									
										//SQL SERVER			
										
										$sininstancia = $radicado;
										$sin          = substr($sininstancia, 0, 21);
										
										
										//--------PRIMERO A DESPACHO, SE ADICIONA EL 1 DE SEPTIEMBRE 2020------------------------------------------
										//YA QUE LOS PROCESOS PASADOS POR EL AREA DEL CONTADOR, PARA APROBAR O MODIFICAR LIQUIDACION
										//PRIMERO VAN A DESPACHO
										
										
										//Auto modifica liquidacion presentada ï¿½ Auto aprueba liquidaciï¿½n crï¿½dito
										//DESISTIMIENTO YA FUE ENVIADO ADESPACHO
										if($lactu_1 == '30023324' || $lactu_1 == '30023402'){
										
											//NOTA: SE CAMBIA GETDATE() A convert(datetime, '$fechae', 121)
											//YA QUE AL MOMENTO DE MOSTRAR EL ORDEN LAS ACTUACIONES LA ULTIMA QUE QUEDA
											//ES A DESPACHO POR QUE LA FECHA TOMA CON HORA,MINUTOS Y SEGUNDOS QUEDANDO
											//MAYO QUE LA DE Auto modifica liquidacion presentada ï¿½ Auto aprueba liquidaciï¿½n crï¿½dito
											//Y FIJA ESTADO 19 DE MAYO 2021
											$sql_300 = ("	
							
							
														UPDATE t103dainfoproc SET 
															
															a103descacts = 'A Despacho', 
															a103codiacts = '30023334', 
															a103codipads = '30023333', 
															a103fechdess =  convert(datetime, '$fechae', 121), 
															a103anotacts = 'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal'
															
														WHERE a103llavproc ='$radicado';
																				
																					
													");
																
																
								
											$params_300  = array();
											$options_300 =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
											$stmt_300    = sqlsrv_query( $conn, $sql_300 , $params_300, $options_300 );
																		
																		
											if( $stmt_300 === false ) {
																		
												$error_transaccion = 1;
																	
												$ENTRE7 = 300;
																		
												if( ($errors = sqlsrv_errors() ) != null) {
																			
													foreach( $errors as $error ) {
																				
														$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message']." - ".$ENTRE7;
													}
												}
																	
											}	
															
											sqlsrv_free_stmt( $stmt_300);
											
											
											
											$sql_400 = ("   
											
											
															DECLARE @cad_2 integer
																	 
																	
															SELECT @cad_2 = MAX(A110CONSACTU)+1 FROM T110DRACTUPROC WHERE a110Llavproc='$radicado' 
																	
															INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
															A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
															A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
															A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
															A110RENUTERM) 
															VALUES('$radicado',@cad_2,'$sin','00','30023334','30023333','A Despacho','N','NO','N',0,NULL,NULL,
															convert(datetime, '$fechae', 121),NULL,NULL,NULL,NULL,NULL,
															'Enviado por la Oficina de Ejecuciï¿½n Civil Municipal',NULL,NULL,'S','D',
															convert(datetime, '$fechae', 121),'NO','NO') ");
																
																
								
											$params_400  = array();
											$options_400 =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
											$stmt_400    = sqlsrv_query( $conn, $sql_400 , $params_400, $options_400 );
																		
																		
											if( $stmt_400 === false ) {
																		
												$error_transaccion = 1;
																	
												$ENTRE8 = 400;
																		
												if( ($errors = sqlsrv_errors() ) != null) {
																			
													foreach( $errors as $error ) {
																				
														$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message']." - ".$ENTRE8;
													}
												}
																	
											}	
															
											sqlsrv_free_stmt( $stmt_400 );
													
										
										}
										
										//---------------------------------------
										
										
										$sql = ("
		
					
													
													UPDATE t103dainfoproc SET 
													
														a103descactd = '$lactutext', 
														a103codiactd = '$lactu_1', 
														a103codipadd = '$lactu_2', 
														a103fechdesd =  convert(datetime, '$fechae', 121),
														A103ANOTACTD = '$lactutext'
													
													WHERE a103llavproc = '$radicado'
													 
						
											");
										
		
										$params  = array();
										$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
										$stmt    = sqlsrv_query( $conn, $sql , $params, $options );
											
											
										if( $stmt === false ) {
											
											$error_transaccion = 1;
											
											if( ($errors = sqlsrv_errors() ) != null) {
												
												foreach( $errors as $error ) {
													
													$msgError .= "3.ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
												}
											}
												
											
												
										}
										
										sqlsrv_free_stmt( $stmt);
										
										
										
										$sql_2 = ("
		
					
													DECLARE @cad integer
													
													
													SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc = '$radicado' 
													
													INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
													A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
													A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
													A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
													A110RENUTERM) 
													values('$radicado',@cad,'$sin','00','$lactu_1','$lactu_2','$lactutext','N','NO','N',NULL,
													NULL,
													NULL,
													convert(datetime, '$fechae', 121),
													NULL,NULL,'$A110CODIPROV',NULL,
													convert(datetime, '$fechae', 121),
													NULL,NULL,NULL,'D','P',
													convert(datetime, '$fechae', 121),
													NULL,NULL)
													
													
											");
										
		
										$params_2  = array();
										$options_2 =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
										$stmt_2    = sqlsrv_query( $conn, $sql_2 , $params_2, $options_2 );
																	
																	
										if( $stmt_2 === false ) {
																	
											$error_transaccion = 1;
																
											
											if( ($errors = sqlsrv_errors() ) != null) {
																		
												foreach( $errors as $error ) {
																			
													$msgError .= "4.ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
												}
											}
																
										}	
														
										sqlsrv_free_stmt( $stmt_2);
										
										
										
										$sql_3 = ("	
													
													DECLARE @cad_2 integer
													 
													
													SELECT @cad_2 =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$radicado' 
													
													INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,
													A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
													A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,
													A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
													A110RENUTERM) 
													values('$radicado',@cad_2,'$sin','00','00000108','00000106','Fijacion estado','L','SI','C',1,
													convert(datetime, '$fechae_2B', 121),
													convert(datetime, '$fechae_2B', 121),
													convert(datetime, '$fechae', 121),
													NULL,NULL,NULL,NULL,
													NULL,
													'$OBST110',NULL,NULL,'S','D',
													convert(datetime, '$fechae', 121),
													NULL,NULL)
													
													
												");
										
		
										$params_3  = array();
										$options_3 =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
										$stmt_3    = sqlsrv_query( $conn, $sql_3 , $params_3, $options_3 );
																	
																	
										if( $stmt_3 === false ) {
																	
											$error_transaccion = 1;
																
											
											if( ($errors = sqlsrv_errors() ) != null) {
																		
												foreach( $errors as $error ) {
																			
													$msgError .= "5.ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
												}
											}
																
										}	
														
										sqlsrv_free_stmt($stmt_3);
										
										
										
										
									
									
									}//FIN IF if ($datos_ACTU110 == 0)
									
			
									$i= $i + 1;
																
																 
								}//FIN WHILE while($i < $long){	
									
								
								
								if($error_transaccion) {
								
								
									
									//$msgError_2 = "ERROR EN LA OPERACION MYSQL ".mysql_errno($conexion). ": " . mysql_error($conexion)."<br>"."<br>"." ,ERROR JUSTICIA XXI: ".$msgError;
												
												
									//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
									$this->db->rollBack();
									
									
									//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
									sqlsrv_rollback( $conn );
									
									// Cerrar la conexiï¿½n.
									sqlsrv_close( $conn );
									
									
									echo '<script languaje="JavaScript"> 
				
							
											var ERROR = "'.$msgError.'";
						
											alert("ERROR 1: "+ERROR);
									
											location.href="index.php?controller=archivo&action=Registrar_Actuacion_Masivo";
											
										
										</script>';
								
								}
								else{
								
									//SE TERMINA LA TRANSACCION  
		  							$this->db->commit();
									
									
									//SE TERMINA LA TRANSACCION EN JUSTICIA XXI  
									sqlsrv_commit( $conn );	
									
									echo '<script languaje="JavaScript"> 
							
			
											alert("PROCESO SE REALIZA CORRECTAMENTE");
								
											location.href="index.php?controller=archivo&action=Registrar_Actuacion_Masivo";
										
									</script>';
								}
						
						
				}
				catch (Exception $e) {
			
					//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
					$this->db->rollBack();
					
					//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
					sqlsrv_rollback( $conn );
					
					// Cerrar la conexiï¿½n.
					sqlsrv_close( $conn );
					
					//echo "Fallo: " . $e->getMessage();
					
					
					echo '<script languaje="JavaScript"> 
				
							
							var ERROR = "'.$e->getMessage().'";
		
							alert("ERROR 2: "+ERROR);
					
							location.href="index.php?controller=archivo&action=Registrar_Actuacion_Masivo";
							
						</script>';
			
					
				}		
						
						
				
				
			}
			
				
			
		
		}//FIN ELSE 1
			
		

	}//FIN FUNCION
	
	
	
	
	
	
	//INFORMACION DE LA ACTUACION EN JUSTICIA XXI, PARA NO VOLVER A REGISTRARLA TABLA T110DRACTUPROC
	public function get_datos_EXISTE_ACTUACION($radicado,$fechae,$lactutext){
	
		$modelo    = new archivoModel();
		
		$msgError  = "";
  
  		$error_transaccionX = 0;
		
  		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
			
		$serverNameX = $datosbd_1; //serverName\instanceName
		$connectionInfoX = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
		$connX = sqlsrv_connect( $serverNameX, $connectionInfoX);
		
		
		if( $connX === false ) {
			
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					
					$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
				}
			}
			
			echo "ENTRE 1 (110): ".$msgError;
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $connX ) === false ) {
			 
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
				}
			}
			 
			echo "ENTRE 2 (110): ".$msgError;
			 
		}
		
		
		$fechae = $fechae." "."00:00:00.000";
		
		$sqlX = ("	
			
			
					SELECT * FROM [$datosbd_2].[dbo].[T110DRACTUPROC] 
 					WHERE [A110LLAVPROC] = '$radicado'
					AND   [A110DESCACTU] = '$lactutext' 
  				    AND   [A110FECHREGI] = '$fechae'
                    AND   [A110FECHDESA] = '$fechae'; 
							
		");
			
		$paramsX  = array();
		$optionsX =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmtX    = sqlsrv_query( $connX, $sqlX , $paramsX, $optionsX );
			
			
		if( $stmtX === false ) {
			
			$error_transaccionX = 1;
			
			if( ($errors = sqlsrv_errors() ) != null) {
				
				foreach( $errors as $error ) {
					
					$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];				}
			}
				
			echo "ENTRE 3 (110): ".$msgError;
				
		}
		else{
		
			$row_count = sqlsrv_num_rows( $stmtX );
			
			//NO EXISTE
			//if ($row_count === false){
			if ($row_count == 0){
   		
				sqlsrv_free_stmt( $stmtX);
				sqlsrv_close( $connX );
				
				return 0;
				
				
			}
			//EXISTE
 			else{
			
				sqlsrv_free_stmt( $stmtX);
				sqlsrv_close( $connX );
				
				return 1;
				
				
			}		
			
		}
		
		
  	}
	
	//********************************************************************************************
	
						
						//FIN PROCESOS MASIVOS DESDE FORMUARIO SIEPRO OPCION ACTUACION JUSTICIA XXI MASIVA 
						//Auto aprueba liquidaciï¿½n crï¿½dito
						//Auto modifica liquidacion presentada 
						//Fijacion estado
						
	//********************************************************************************************
	
	
	
	
	
	
	//-----------------------------------EXPEDIENTE DIGITAL---------------------------------------
	
	//********************************************************************************************
	
	//PROCESOS EXPEDIENTE DIGITAL, 13 DE JULIO 2020
	
	//********************************************************************************************
	
	
	public function nfolios_proceso($id_radi){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			
			$listar = $this->db->prepare("
			
										   SELECT SUM(folios) AS nfolios
										   FROM expe_digital WHERE idradicado = '$id_radi'
										   
										   
										  "
											
										);
										
			
										
			
			
			

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function ncuadernos_proceso($id_radi){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			
			$listar = $this->db->prepare("
			
										    SELECT cuaderno FROM expe_digital
											WHERE idradicado = '$id_radi'
											GROUP BY cuaderno
										   
										   
										  "
											
										);
										
			
										
			
			
			

  			$listar->execute();
			
			$ncuadernos = $listar->rowCount();

  			return $ncuadernos;
	
  	}
	
	
	
	
	public function listar_proceso_digital($id_radi){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$fecha_actual = $modelo->get_fecha_actual_amd();
			
			
			$idusuario     = $_SESSION['idUsuario'];
			
			
			/*$listar = $this->db->prepare("
			
										   SELECT * FROM expe_digital 
										   WHERE idradicado = '$id_radi'
										   AND estado != 3
										   ORDER BY folio_i"
											
										);*/
										
			$listar = $this->db->prepare("
			
										 	SELECT
											t1.id,t1.idradicado,t1.fecha,t1.hora,t1.folios,
											t1.folio_i,t1.folio_f,t1.cuaderno,
											t1.foto,t1.tipo,t1.ruta,t1.des,t1.idusuario,
											t2.empleado AS registra,
											CONCAT(t3.empleado,'/',t1.fechaedita,'/',t1.horaedita) AS edita,
											t4.des AS descuaderno,t4.orden,t1.idcorrespondencia,t5.id_memo_externo,t6.nombre AS dependencia,
											t1.fecha_creacion,t1.fecha_de,t1.fecha_a,t1.origen,t1.obs,t7.origen AS norigen,t1.orden_documento,
											t1.para_estado,t1.fecha_estado,t1.otra
											FROM ((((((expe_digital t1
											INNER JOIN pa_usuario     t2 ON t1.idusuario         = t2.id)
											LEFT JOIN pa_usuario      t3 ON t1.idusuarioedita    = t3.id)
											LEFT JOIN expe_cuaderno   t4 ON t1.cuaderno          = t4.id)
											LEFT JOIN correspondencia t5 ON t1.idcorrespondencia = t5.id)
											LEFT JOIN pa_juzgado      t6 ON t1.id_dependencia    = t6.id)
											LEFT JOIN expe_origen     t7 ON t1.origen            = t7.id)
											WHERE t1.idradicado = '$id_radi'
											AND t1.estado != 3
											ORDER BY t4.orden,t1.orden_documento"
											/*ORDER BY t1.cuaderno,folio_i*/
											
										);
										
										
										
			
			
			/*$SQL = "
			
										 	SELECT
											t1.id,t1.idradicado,t1.fecha,t1.hora,t1.folios,
											t1.folio_i,t1.folio_f,t1.cuaderno,
											t1.foto,t1.tipo,t1.ruta,t1.des,t1.idusuario,
											t2.empleado AS registra,
											CONCAT(t3.empleado,'/',t1.fechaedita,'/',t1.horaedita) AS edita
											FROM ((expe_digital t1
											INNER JOIN pa_usuario t2 ON t1.idusuario = t2.id)
											LEFT JOIN pa_usuario t3 ON t1.idusuarioedita = t3.id)
											WHERE t1.idradicado = '$id_radi'
											AND t1.estado != 3
											ORDER BY t1.cuaderno,t1.id";
											
											
			
			echo $SQL;*/

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function listar_proceso_digital_filtro($id_radi){
	
	
			set_time_limit (240000000);
	
			$idusuario  = $_SESSION['idUsuario'];
			
			
		
			$filtrox;
			
			$filtrof;
			$filtrof_2;
			
			$filtro1;
			$filtro4;
			$filtro5;
			$filtro6;
			$filtro7;
			
			
		
			$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			
			$datox1    = trim($_GET['datox1']);
			$datox2    = trim($_GET['datox2']);
			$datox3    = trim($_GET['datox3']);
			$datox4    = trim($_GET['datox4']);
			$datox5    = trim($_GET['datox5']);
			$datox6    = trim($_GET['datox6']);
			$datox7    = trim($_GET['datox7']);
			
			
			
			if ( !empty($fechad) && !empty($fechah) ) {
			
				
				//SE REALIZA ESTA PREGUNTA PARA DETERMINAR SI LA CONSULTA
				//A DEVOLVER ES LA DE ESTADO, Y SE TIENE ENCUENTA LA COLUMNA FECHA_ESTADO
				if ( !empty($datox7) ) {
				
					$filtrof   = " AND (t1.fecha_estado >= '$fechad' AND t1.fecha_estado <= '$fechah')";
				}
				else{
				
					$filtrof   = " AND (t1.fecha >= '$fechad' AND t1.fecha <= '$fechah')";
				
				}
				
				
			
			}
			
			
			if ( !empty($datox1) ) {
			
				
				
				$filtro1 = " AND t1.id = '$datox1' ";
			
			}
			if ( !empty($datox2) && !empty($datox3) ) {
			
				
				//$filtrof_2 = " AND (t1.folio_i >= '$datox2' AND t1.folio_f <= '$datox3')";
				
				$filtrof_2 = " AND (t1.folios >= '$datox2' AND t1.folios <= '$datox3')";
			
			}
			
			if ( !empty($datox4) ) {
			
				
				
				$filtro4 = " AND t1.cuaderno = '$datox4' ";
			
			}
			
			if ( !empty($datox5) ) {
			
				
				
				$filtro5 = " AND t1.idusuario = '$datox5' ";
			
			}
			
			if ( !empty($datox6) ) {
			
				
				
				$filtro6 = " AND t1.idusuarioedita = '$datox6' ";
			
			}
			
			if ( !empty($datox7) ) {
			
		
				$filtro7 = " AND t1.para_estado = 1 AND t1.idjuzgado = '$datox7' AND t1.tipo = 'application/pdf' ";
			
			}
			
			
		
			
			
			$filtrox = $filtro1." ".$filtro4." ".$filtro5." ".$filtro6." ".$filtro7." ".$filtrof." ".$filtrof_2;
		
			
			
			
			//SE REALIZA ESTA PREGUNTA PARA DETERMINAR SI LA CONSULTA
			//A DEVOLVER ES LA DE ESTADO, AGREGADNCO EL DATO RADICADO
			if ( !empty($datox7) ) {
			
		
				$listar = $this->db->prepare("
				
												SELECT
												t1.id,t1.idradicado,t1.fecha,t1.hora,t1.folios,
												t1.folio_i,t1.folio_f,t1.cuaderno,
												t1.foto,t1.tipo,t1.ruta,t1.des,t1.idusuario,
												t2.empleado AS registra,t4.id AS idradicadoestado,t4.radicado,
												CONCAT(t3.empleado,'/',t1.fechaedita,'/',t1.horaedita) AS edita,
												t5.des AS descuaderno,t5.orden,t1.fecha_estado,t1.orden_documento,t1.otra
												FROM ((((expe_digital t1
												INNER JOIN pa_usuario           t2 ON t1.idusuario      = t2.id)
												LEFT JOIN pa_usuario            t3 ON t1.idusuarioedita = t3.id)
												INNER JOIN ubicacion_expediente t4 ON t1.idradicado     = t4.id)
												LEFT JOIN expe_cuaderno t5 ON t1.cuaderno = t5.id)
												WHERE t1.id >= '1'" .$filtrox. "
												AND t1.estado != 3
												ORDER BY t5.orden,t1.orden_documento"
												
											);
			
			}
			else{
			
				$listar = $this->db->prepare("
				
												SELECT
												t1.id,t1.idradicado,t1.fecha,t1.hora,t1.folios,
												t1.folio_i,t1.folio_f,t1.cuaderno,
												t1.foto,t1.tipo,t1.ruta,t1.des,t1.idusuario,
												t2.empleado AS registra,
												CONCAT(t3.empleado,'/',t1.fechaedita,'/',t1.horaedita) AS edita,
												t4.des AS descuaderno,t4.orden,t1.idcorrespondencia,t5.id_memo_externo,t6.nombre AS dependencia,
												t1.fecha_creacion,t1.fecha_de,t1.fecha_a,t1.origen,t1.obs,t7.origen AS norigen,t1.orden_documento,
												t1.para_estado,t1.fecha_estado,t1.otra
												FROM ((((((expe_digital t1
												INNER JOIN pa_usuario     t2 ON t1.idusuario         = t2.id)
												LEFT JOIN pa_usuario      t3 ON t1.idusuarioedita    = t3.id)
												LEFT JOIN expe_cuaderno   t4 ON t1.cuaderno          = t4.id)
												LEFT JOIN correspondencia t5 ON t1.idcorrespondencia = t5.id)
												LEFT JOIN pa_juzgado      t6 ON t1.id_dependencia    = t6.id)
												LEFT JOIN expe_origen     t7 ON t1.origen            = t7.id)
												WHERE t1.id >= '1'" .$filtrox. "
												AND t1.idradicado = '$id_radi'
												AND t1.estado != 3
												ORDER BY t4.orden,t1.orden_documento"
												/*ORDER BY t1.cuaderno,folio_i*/
												
											);
											
			}
			
			/*$SQL = "SELECT
												t1.id,t1.idradicado,t1.fecha,t1.hora,t1.folios,
												t1.folio_i,t1.folio_f,t1.cuaderno,
												t1.foto,t1.tipo,t1.ruta,t1.des,t1.idusuario,
												t2.empleado AS registra,
												CONCAT(t3.empleado,'/',t1.fechaedita,'/',t1.horaedita) AS edita,
												t4.des AS descuaderno,t4.orden
												FROM (((expe_digital t1
												INNER JOIN pa_usuario t2 ON t1.idusuario      = t2.id)
												LEFT JOIN pa_usuario  t3 ON t1.idusuarioedita = t3.id)
												INNER JOIN expe_cuaderno t4 ON t1.cuaderno = t4.id)
												WHERE t1.id >= '1'" .$filtrox. "
												AND t1.idradicado = '$id_radi'
												AND t1.estado != 3
												ORDER BY t4.orden,t1.id";
												
			
			echo $SQL;*/ 									
			
			
  			$listar->execute();
			
			

  			return $listar;
	
  	}
	
	//Obtiene la IP del cliente
    function get_client_ip() {
	
        $ipaddress = '';
		
        if (getenv('HTTP_CLIENT_IP'))
            $ipaddress = getenv('HTTP_CLIENT_IP');
        else if(getenv('HTTP_X_FORWARDED_FOR'))
            $ipaddress = getenv('HTTP_X_FORWARDED_FOR');
        else if(getenv('HTTP_X_FORWARDED'))
            $ipaddress = getenv('HTTP_X_FORWARDED');
        else if(getenv('HTTP_FORWARDED_FOR'))
            $ipaddress = getenv('HTTP_FORWARDED_FOR');
        else if(getenv('HTTP_FORWARDED'))
           $ipaddress = getenv('HTTP_FORWARDED');
        else if(getenv('REMOTE_ADDR'))
            $ipaddress = getenv('REMOTE_ADDR');
        else
            $ipaddress = 'UNKNOWN';
			
        return $ipaddress;
    }
	
	public function adicionar_folios_proceso(){
	
		set_time_limit (240000000);
		
		$modelo = new archivoModel();
		
		//DATOS DE EQUIPO NOMBRE Y IP
		$nombre_equipo_registra = gethostbyaddr( $_SERVER['REMOTE_ADDR'] );
		//$nombre_equipo_registra = gethostbyaddr( $_SERVER['HTTP_CLIENT_IP'] );
		$ip_equipo_registra     = gethostbyname($nombre_equipo_registra);
		
		
		
		//-------------------------------------------------------------------------
		//IDENTIFICAR QUE EL USUARIO EN SESION, PERTENECE 
		//A JUZGADO 1 O 2 DE EJECUCION Y NO A LA OFICINA DE EJECUCION
		//CON EL OBJETO, QUE AL REGISTRAR EL FOLIO NUEVO
		//EL SISTEMA IDENTIFIQUE QUE ESTE REGISTRO Y AUTO
		//SALE PARA ESTADO EL DIA SIGUIENTE 
		$Jid_juzgado = $_SESSION['id_juzgado'];
		
		$para_estado = 0;
		
		if($Jid_juzgado == 15 || $Jid_juzgado == 16){
		
			$para_estado = 1;
			$idjuzgado   = $Jid_juzgado;
			
		}
		else{
		
			$para_estado = 0;
			$idjuzgado   = 0;
		}
		//-------------------------------------------------------------------------
		
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE***************
		$campos              = 'usuario';
		$nombrelista         = 'pa_usuario_acciones';
		$idaccion	         = '32';
		$campoordenar        = 'id';
		$datos_DES_1         = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
		$datos_DES_2         = $datos_DES_1->fetch();
		$datos_DES_3	     = explode("////",$datos_DES_2[usuario]);
				
		$bandera_DES_2       = 0;
				
		if ( in_array($_SESSION['idUsuario'],$datos_DES_3,true) ){
				
			$bandera_DES_2 = 1;
		}	
						
		//******************FIN ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE***************
		
		
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y AL CARGAR EL AUTO SE CIERRA LA TAREA AUTOMATICAMENTE***************
		$idaccion	         = '34';
		$campoordenar        = 'id';
		$datos_CERRAR_1      = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
		$datos_CERRAR_2      = $datos_CERRAR_1->fetch();
		$datos_CERRAR_3	     = explode("////",$datos_CERRAR_2[usuario]);
				
		$bandera_CERRAR      = 0;
				
		if ( in_array($_SESSION['idUsuario'],$datos_CERRAR_3,true) ){
				
			$bandera_CERRAR = 1;
		}	
						
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y AL CARGAR EL AUTO SE CIERRA LA TAREA AUTOMATICAMENTE***************
		
		

		
		//DATOS PARA EL REGISTRO DEL LOG
		/*$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];*/
		
		//$horalog    = $datosfecha[1];
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		//$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario     = $_SESSION['idUsuario'];
		
		$idradiX       = trim($_POST['idradiX']);
		$radiX         = trim($_POST['radiX']);
		
		$id_juzgadoX   = trim($_POST['id_juzgadoX']);
		
		$digitalizadoX = trim($_POST['digitalizadoX']);
		
		
		//-----------ARMAR DIRECTORIO RADICADO--------------
		
		//EJ: 17001400300220140017100 ---> 220140017100
		//EJ: 17001400301220140017100 ---> 1220140017100
		
		$valorradicado = $radiX;
		
		$cadena_juzgado;
		$valorradicado_8 = substr($valorradicado, 10, 2);
		$J;
		// Recorremos cada carï¿½cter de la cadena
		for($i=0; $i<strlen($valorradicado_8); $i++){
			
			if($valorradicado_8[0] == 0){
				
				$cadena_juzgado = substr($valorradicado, 11, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 11, 1);
			}
			
			if($valorradicado_8[0] == 1){
				
				$cadena_juzgado = substr($valorradicado, 10, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 10, 2);
			}
			
			
		}
		
		
		//-----------FIN ARMAR DIRECTORIO RADICADO---------
		
		
		
		
		$opcionX       = 1;
		
		
		/*$iddev_juzgado = $_SESSION['id_juzgado'];
		
		$Didentidad_user = $_SESSION['nomusu'];
		$Dnombre_user    = $_SESSION['nombre'];
		
		$devolucion      = "DEVOLUCION EXTERNA, REALIZADA POR: ".$Didentidad_user." - ".$Dnombre_user;
		
		$idevo           = trim($_POST['idevo']);*/
		
	
		
		//***********************************PARA EL ARCHIVO***************************************
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "EXPEDIENTE_DIGITAL_2";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		//$nom = trim($_SESSION['idUsuario']);
		//$nom = trim($idradi);
		$nom = trim($J."/".$cadena_juzgado);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//AQUI SE CREA EL DIRECTORIO
		//if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		//else{mkdir($raiz.'/'.$nom, 0, true);}
				
		//CUANDO SOLO SE SUBE UN ARCHIVOS
		/*$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		$tamano_archivo = $_FILES['archivo']['size'];*/ 
		
		
		//***********************************FIN PARA EL ARCHIVO***************************************
		
						$cadena_archivos = "";
					
						
						$error_transaccion   = 0; //variable para detectar error
						$msg = " ";
								
						//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
						//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
								
							
								
						try {  
									
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
									
									
									//for($i = 0; $i < count($_POST['idradicado']); $i++){
									
									
									
									//---------------VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									$error_nombre = 0;
									
							
									for($i = 0; $i < count($_POST['idradicado']); $i++){
									
						
											$nombre_archivo = $_FILES['Foto']['name'][$i];
											
											//LONGITUD ARCHIVO
											$ncaracteresX = $modelo->get_caracteres_archivo($nombre_archivo);
											
											if($ncaracteresX > 38){
											
												$x = strlen($nombre_archivo);
														
												$error_nombre = 1;
												
												$i = count($_POST['idradicado']);
												
												
												echo '<script languaje="JavaScript"> 
									
														var nombre_archivoX     = "'.$nombre_archivo.'";
														
														var caracteres_archivoX = "'.$ncaracteresX.'";
																	
													
														alert("EL NOMBRE DEL ARCHIVO NO DEBE TENER MAS DE 38 CARACTERES: "+nombre_archivoX+" CANTIDAD ACTUAL DE CARACTERES: "+caracteres_archivoX);
																	
																	
														var idradiX = "'.$idradiX.'";
														var radiX   = "'.$radiX.'";
																	
														location.href="index.php?controller=archivo&action=Registrar_Folio&datosexpF="+idradiX+"******"+radiX;
																						
																
													</script>';
											}
											
											//ESTRUCTURA NOMBRE ARCHIVO
											for($x = 0; $x < strlen($nombre_archivo); $x++) {
											
												//CAPTUTA ASCII CARACTER
												 //caracter = ord(x);
												 
												 //echo "<br>"."CARACTER: ".$nombre_archivo[$x]." ASCII: ".ord($nombre_archivo[$x]);
												 
												 $caracter = ord($nombre_archivo[$x]);
												 
												 if( 
																					
																					 
														/*($caracter >= 32  && $caracter <= 44)   ||
														($caracter >= 47  && $caracter <= 47)   || 
														($caracter >= 58  && $caracter <= 64)   || 
														($caracter >= 91  && $caracter <= 94)   || 
														($caracter >= 96  && $caracter <= 96)   ||
														($caracter >= 123 && $caracter <= 254) */ 
														
														($caracter >= 32  && $caracter <= 45)  ||
														($caracter >= 47  && $caracter <= 47)  ||
														($caracter >= 58  && $caracter <= 64)  || 
														($caracter >= 91  && $caracter <= 96)  || 
														($caracter >= 123 && $caracter <= 254)
																					 
												) {
														
														//echo "CARACTER NO VALIDO EN NOMBRE DE ARCHIVO:".$nombre_archivo[$x]."<br>"."<br>"." SOLO SE PERMITE EL CARACTER RAYA AL MEDIO (-) Y NOMBRES CONFORMADOS POR LETRAS, NUMEROS Y TODO PEGADO";
														
														$x = strlen($nombre_archivo);
														
														$error_nombre = 1;
														
														$i = count($_POST['idradicado']);
														
														$idcaracter = chr($caracter);
														
														echo '<script languaje="JavaScript"> 
									
																	var nombre_archivoX = "'.$nombre_archivo.'";
																	
																	var idcaracter      = "'.$idcaracter.'";
																	
																	alert("CARACTER NO VALIDO EN NOMBRE DE ARCHIVO: "+nombre_archivoX+" CARACTER: "+idcaracter+" SOLO NOMBRES CONFORMADOS POR LETRAS O NUMEROS Y TODO PEGADO");
																	
																	var idradiX = "'.$idradiX.'";
																	var radiX   = "'.$radiX.'";
																	
																	location.href="index.php?controller=archivo&action=Registrar_Folio&datosexpF="+idradiX+"******"+radiX;
																						
																
															</script>';
														
												
												}
												
												
												
											}
									
									
									
									}
									
									
									
									//---------------FIN VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									
							
									//REALIZA REGISTRO, NO EXISTE INCONSISTENCIAS EN NOMBRE DE ARCHIVO(S)
									if($error_nombre == 0){
									
										//SE USA EL FOR INVERSO, PARA QUE EN LA VISTA
										//expediente_folio_nuevo.php, CADA VEZ QUE SE ADICIONE UN NUEVO FORMULARIO 
										//PARA AGREGAR NUEVO FOLIO, EL FORMULARIO QUE SE DESPLAZA Y VA QUEDANDO
										//DE ULTIMO SEA EL PRIMERO EN EL REGISTRO EN LA TABLA expe_digital EN SU ID
										//AUTONUMERICO
										for($i = count($_POST['idradicado']) - 1; $i >= 0 ; $i--){
										
										
										
											$idradicado = trim($_POST['idradicado'][$i]);
											$fecha      = trim($_POST['fecha'][$i]);
											$hora       = $horalog;
											
											
											$folios     = trim($_POST['folios'][$i]);
											
											/*$folio_i  = trim($_POST['folio_i'][$i]);
											$folio_f    = trim($_POST['folio_f'][$i]);*/
											
											$cuaderno                 = trim($_POST['cuaderno'][$i]);
											
											//SE OBTIENE EL VALOR SI EL EXPEDIENTE TIENE
											//DOCUMENTOS CARGADOS EN expe_digital 
											$cantidad_documentos      = $modelo->get_cantidad_documentos($cuaderno,$idradicado);
											$filadoc                  = $cantidad_documentos->fetch();
											$cantidad_doc             = $filadoc[numero];
											
											//SI TIENE CARGADOS, Y SEGUN EL CUEADERNO SELECCIONADO
											//SE TRAE EL NUMERO SIGUIENTE DE LA COLUMNA orden_documento TABLA expe_digital 
											//PARA CONCATER CON EL NOMBRE DEL ARCHIVO QUE SE ESTA SUBIENDO
											//EJEMPLO: 01CONSTANCIAS.pdf
											if($cantidad_doc >= 1){
											
												$datos_orden_documento    = $modelo->get_orden_documento_siguente($cuaderno,$idradicado);
												$filaod                   = $datos_orden_documento->fetch();
												$orden_documento_siguente = $filaod[orden_documento_siguente];
											}
											//SI NO TIENE CARGADOS, SERIA EL PRIMERO,
											//INDEPENDIENTE DEL CUADERNO QUE SE SELECCIONE
											else{
											
												$orden_documento_siguente = 1;
											}
											//SI EL VALOR $orden_documento_siguente ESTA DENTRO DE 1 - 9
											//SE CONCATENA CON CERO EJEMPLO: 01CONSTANCIAS.pdf
											if($orden_documento_siguente >= 1 && $orden_documento_siguente <= 9){
											
												$orden_documento_siguente = "0".$orden_documento_siguente;
											}
											
											
											
											$des        = utf8_decode(trim($_POST['des'][$i]));	
											
											
											$dependencia = trim($_POST['dependencia'][$i]);
											
											
											if($dependencia == 19){
											
												$otra = utf8_decode(trim($_POST['otradep'][$i]));
											
											}
											else{
												
												$otra = trim('NINGUNA');
											}
											
											//SE DEFINE RANGO DE FECHAS DE CREACION DOCUMENTO
											if($digitalizadoX == 1){
											
												$fecha_de  = trim($_POST['fecha_de'][$i]);
												$fecha_a   = trim($_POST['fecha_a'][$i]);
												
												$fecha_cre = trim('0000-00-00');
												
											}
										    //SE DEFINE SOLO FECHA DE CREACION DOCUMENTO
											else{
											
												$digitalizadoX = 2;
												
												$fecha_cre = trim($_POST['fecha_cre'][$i]);
												
												$fecha_de  = trim('0000-00-00');
												$fecha_a   = trim('0000-00-00');
											}
								
								
											$obs = utf8_decode(trim($_POST['obs'][$i]));
											
											//DETERMINA QUE EL USUARIO EN SESION PERTENECE
											//ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE
											//$nombrelista = 'pa_usuario_acciones'; $idaccion = '32';
	
											$paraestado = trim($_POST['paraestado'][$i]);
											
											$fecha_estado = trim($_POST['fecha_estado'][$i]);
											
											if($bandera_DES_2 == 1){
											
												$digitalizadoX = 2;
												$fecha_de      = trim('0000-00-00');
												$fecha_a       = trim('0000-00-00');
												//$fecha_cre     = trim($fecha_estado);
												$fecha_cre     = trim($fecha);
											
												if($paraestado == 0 || $paraestado == 1){
												
													$para_estado = $paraestado;
												}
												
												if( $paraestado == 1 ){
												
													//PERMITE IDENTIFICAR USUARIO EN SESION, QUE PUEDE CERRAR LAS TAREAS ASIGNADAS A UN PROCESO A DESPACHO
													//AUTOMATICAMENTE, SIN NECESIDAD DE HACERLO EN LA VISTA DE LOS JUZGADOS
													if($bandera_CERRAR == 1){
													
														//CARGAR LOS ID ASOCIOADOS AL RADICADO DE LA TABLA detalle_correspondencia ENVIADOA A DESPACHO
														//PARA QUE LOS PROCESOS ASIGNADOS A UNA TAREA SE APLIQUE A UN MEMORIAL
														//O MEMORIALES SEGUN ESA EL CASO
														$datosMEMOS_2 = $modelo->listar_memoriales_proceso_2($idradiX);
														
														$contmemo = 0;
														while($filamemo_2 = $datosMEMOS_2->fetch()){
														
														
															$ID_MEMOS_2 = $filamemo_2[idactu].",".$ID_MEMOS_2;
															
															$contmemo = $contmemo + 1;
															
														}
														
														//SE RELIZA ESTA CPREGUNTA YA QUE EL USUARIO YA REALIZO EL PROCESO
														//Y LUEGO CANCELO Y AL VOLVERLO A REGISTRAR YA LA VARIABLE $ID_MEMOS_2
														// NO CARGA NADA Y EN LA SQL GENERA INCONSISTENCIA
														if($contmemo >= 1){
														
															$ID_MEMOS_2       = rtrim($ID_MEMOS_2,",");
															
															$idactuX_CERRAR   = "IN(".trim($ID_MEMOS_2).")";//IDSMEMO
															
															$SQL_CERRAR_TAREA = "UPDATE detalle_correspondencia SET
						
						
																					  estadoobs        = 3,
																					  tareacerrada     = 'OK',
																					  fechacerrar      = '$fechalog',
																					  horacerrar       = '$horalog'
																					 
																				 WHERE id ".$idactuX_CERRAR;
																				 
																				 
															
															$this->db->exec($SQL_CERRAR_TAREA);
															
														}
														
														//REINICAR VARIABLE
														//PARA QUE NO COCATENE LOS ID DE TODO EL FOR PRINCIPAL
														unset($ID_MEMOS_2);
														
														$contmemo = 0;
														
														
														
														
													}
												
													
												}
												
												
												//PARA QUE NO CIERRE LA TAREA Y QUEDE EN ESTADO REVISAR
												//YA QUE EN LA VISTA DEL JUEZ LOS IDENTIFICA COMO PROCESOS QUE LE ENTRARON MEMORIALES Y AUN SUS COSTAS NO ESTAN HECHAS
												if( $paraestado == 5 ){
												
													
														//CARGAR LOS ID ASOCIOADOS AL RADICADO DE LA TABLA detalle_correspondencia ENVIADOA A DESPACHO
														//PARA QUE LOS PROCESOS ASIGNADOS A UNA TAREA SE APLIQUE A UN MEMORIAL
														//O MEMORIALES SEGUN ESA EL CASO
														$datosMEMOS_2 = $modelo->listar_memoriales_proceso_2($idradiX);
														
														$contmemo = 0;
														while($filamemo_2 = $datosMEMOS_2->fetch()){
														
														
															$ID_MEMOS_2 = $filamemo_2[idactu].",".$ID_MEMOS_2;
															
															$contmemo = $contmemo + 1;
															
														}
														
														//SE RELIZA ESTA CPREGUNTA YA QUE EL USUARIO YA REALIZO EL PROCESO
														//Y LUEGO CANCELO Y AL VOLVERLO A REGISTRAR YA LA VARIABLE $ID_MEMOS_2
														// NO CARGA NADA Y EN LA SQL GENERA INCONSISTENCIA
														if($contmemo >= 1){
														
															$ID_MEMOS_2       = rtrim($ID_MEMOS_2,",");
															
															$idactuX_CERRAR   = "IN(".trim($ID_MEMOS_2).")";//IDSMEMO
															
															$SQL_CERRAR_TAREA = "UPDATE detalle_correspondencia SET
						
						
																					  estadoobs = 5
																					 
																				 WHERE id ".$idactuX_CERRAR;
																				 
																				 
															
															$this->db->exec($SQL_CERRAR_TAREA);
															
														}
														
														//REINICAR VARIABLE
														//PARA QUE NO COCATENE LOS ID DE TODO EL FOR PRINCIPAL
														unset($ID_MEMOS_2);
														
														$contmemo = 0;
														
													
												}
												
												
												
												
											}
											else{
											
												$fecha_estado = '0000-00-00';
											}
											
											
											if( !empty( $_FILES['Foto']['name'] ) ){
											
												
												//AQUI SE CREA EL DIRECTORIO
												//$dir_idradi = 'uploads/' .$_POST['idradicado'][$i];
												//$dir_idradi = $raiz.'/' .$_POST['idradicado'][$i];
												$dir_idradi = $raiz.'/' .$nom;
												
												if(is_dir($dir_idradi)){$bandera=0;}
												else{mkdir($dir_idradi, 0, true);}
											
												//$foto = date('ymdhis') . '-' . strtolower($_FILES['Foto']['name'][$i]);
												$foto = date('ymdhis') . '-' . $orden_documento_siguente.$_FILES['Foto']['name'][$i];
												$tipo = $_FILES['Foto']['type'][$i];
												$ruta = utf8_decode($dir_idradi.'/'.$foto);
												
												//move_uploaded_file ($_FILES['Foto']['tmp_name'][$i], 'uploads/' . $foto);
												//move_uploaded_file ($_FILES['Foto']['tmp_name'][$i], utf8_decode($ruta));
												move_uploaded_file ($_FILES['Foto']['tmp_name'][$i],$ruta);
												
												
							
												
											}
											
											//SE CIERRAN LOS FOLIOS Y SE UBICA DONDE
											//SE CARGA EL ARCHIVO, YA QUE SE CALCULAN
											//AUTOMATICAMENTE SEGUN EL NUMERO DE PAGINAS DEL ARCHIVO
											//$folios = $modelo->numeroPaginasPdf($ruta);
											
											echo '<script languaje="JavaScript"> 
										
														var ruta = "'.$ruta.'";
														var dat_3 = "'.$folios.'";
														
														alert("FOLIOS: "+dat_3+" RUTA:"+ruta);
														
											
												</script>';
											
											$this->db->exec("INSERT INTO expe_digital (idradicado,fecha,hora,folios,cuaderno,tipo,ruta,des,idusuario,estado,para_estado,idjuzgado,fecha_estado,
											                 ip_equipo_registra,nombre_equipo_registra,id_dependencia,
															 fecha_creacion,fecha_de,fecha_a,origen,obs,orden_documento,otra) 
															 VALUES ('$idradicado','$fecha','$hora','$folios','$cuaderno','$tipo','$ruta','$des','$idusuario',1,'$para_estado','$id_juzgadoX','$fecha_estado',
															 '$ip_equipo_registra','$nombre_equipo_registra','$dependencia',
															 '$fecha_cre','$fecha_de','$fecha_a','$digitalizadoX','$obs','$orden_documento_siguente','$otra')");
															 
											
											//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
											$last_id = $this->db->lastInsertId();
										
											 
											
											//HISTORIAL
											$actuacion = 'REGISTRO FOLIO(S)';
											$tablas    = 'expe_digital';
											$tipo      = 'RF';
											$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo,idexpdigi,
											                 ip_equipo_registra,nombre_equipo_registra,id_dependencia,
															 fecha_creacion,fecha_de,fecha_a,origen,obs,orden_documento,otra)
															 VALUES('$idradiX','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$ruta','$tipo','$last_id',
															 '$ip_equipo_registra','$nombre_equipo_registra','$dependencia',
															 '$fecha_cre','$fecha_de','$fecha_a','$digitalizadoX','$obs','$orden_documento_siguente','$otra')");
															 
										}
										
										
										
										
													
										//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
																				
										//SE TERMINA LA TRANSACCION  
										$this->db->commit();
																
										//echo $msg;
									
									
									
									}//FIN if($error_nombre == 0){
									else{
									
										$error_transaccion = 1;
									}
											
									
									  
						} 
						catch (Exception $e) {
									
							$msg = "ERROR EN PROCESO: ".$e->getMessage();			
						
							
										
										
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
							
					
							//echo $msg;
										
							$error_transaccion   = 1;
							
							
						}
							
										
							
						if($error_transaccion){
								
							//echo $msg;
							
							//SE ADIICONA ESTA PARTE PARA QUE SE QUEDE EN REGISTRAR FOLIO
							//Y SEA POSIBLE ORGANIZAR EL NOMBRE ARCHIVO CON LA INCOSISTENCIA
							if($error_nombre == 1){
							
								$error_nombre = 1;
							
							}
							else{
							
								//PARA QUE EN LA VISTA EXPEDIENTE_DIGITALNO ENTRE
								//CUANDO LOS PROCESOS SON CORRECTOS
								$opcionX = 0;
								
								echo '<script languaje="JavaScript"> 
										
					
										var msg = "'.$msg.'";	
										
										var idradiX = "'.$idradiX.'";
										var radiX   = "'.$radiX.'";
										var opcionX = "'.$opcionX.'";
										
										
										alert(msg);
										
										location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
										
										
									  </script>';
									  
									  
							}
							
							
								
						}
						else{
						
						
					
							header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX);
		
								
						}
					
					

				
  	}
	
	public function adicionar_folios_procesoANTERIOR_210421(){
	
		set_time_limit (240000000);
		
		$modelo = new archivoModel();
		
		//DATOS DE EQUIPO NOMBRE Y IP
		$nombre_equipo_registra = gethostbyaddr( $_SERVER['REMOTE_ADDR'] );
		//$nombre_equipo_registra = gethostbyaddr( $_SERVER['HTTP_CLIENT_IP'] );
		$ip_equipo_registra     = gethostbyname($nombre_equipo_registra);
		
		
		
		//-------------------------------------------------------------------------
		//IDENTIFICAR QUE EL USUARIO EN SESION, PERTENECE 
		//A JUZGADO 1 O 2 DE EJECUCION Y NO A LA OFICINA DE EJECUCION
		//CON EL OBJETO, QUE AL REGISTRAR EL FOLIO NUEVO
		//EL SISTEMA IDENTIFIQUE QUE ESTE REGISTRO Y AUTO
		//SALE PARA ESTADO EL DIA SIGUIENTE 
		$Jid_juzgado = $_SESSION['id_juzgado'];
		
		$para_estado = 0;
		
		if($Jid_juzgado == 15 || $Jid_juzgado == 16){
		
			$para_estado = 1;
			$idjuzgado   = $Jid_juzgado;
			
		}
		else{
		
			$para_estado = 0;
			$idjuzgado   = 0;
		}
		//-------------------------------------------------------------------------
		
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE***************
		$campos              = 'usuario';
		$nombrelista         = 'pa_usuario_acciones';
		$idaccion	         = '32';
		$campoordenar        = 'id';
		$datos_DES_1         = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
		$datos_DES_2         = $datos_DES_1->fetch();
		$datos_DES_3	     = explode("////",$datos_DES_2[usuario]);
				
		$bandera_DES_2       = 0;
				
		if ( in_array($_SESSION['idUsuario'],$datos_DES_3,true) ){
				
			$bandera_DES_2 = 1;
		}	
						
		//******************FIN ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE***************
		
		
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y AL CARGAR EL AUTO SE CIERRA LA TAREA AUTOMATICAMENTE***************
		$idaccion	         = '34';
		$campoordenar        = 'id';
		$datos_CERRAR_1      = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
		$datos_CERRAR_2      = $datos_CERRAR_1->fetch();
		$datos_CERRAR_3	     = explode("////",$datos_CERRAR_2[usuario]);
				
		$bandera_CERRAR      = 0;
				
		if ( in_array($_SESSION['idUsuario'],$datos_CERRAR_3,true) ){
				
			$bandera_CERRAR = 1;
		}	
						
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y AL CARGAR EL AUTO SE CIERRA LA TAREA AUTOMATICAMENTE***************
		
		

		
		//DATOS PARA EL REGISTRO DEL LOG
		/*$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];*/
		
		//$horalog    = $datosfecha[1];
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		//$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario     = $_SESSION['idUsuario'];
		
		$idradiX       = trim($_POST['idradiX']);
		$radiX         = trim($_POST['radiX']);
		
		$id_juzgadoX   = trim($_POST['id_juzgadoX']);
		
		$digitalizadoX = trim($_POST['digitalizadoX']);
		
		
		//-----------ARMAR DIRECTORIO RADICADO--------------
		
		//EJ: 17001400300220140017100 ---> 220140017100
		//EJ: 17001400301220140017100 ---> 1220140017100
		
		$valorradicado = $radiX;
		
		$cadena_juzgado;
		$valorradicado_8 = substr($valorradicado, 10, 2);
		$J;
		// Recorremos cada carï¿½cter de la cadena
		for($i=0; $i<strlen($valorradicado_8); $i++){
			
			if($valorradicado_8[0] == 0){
				
				$cadena_juzgado = substr($valorradicado, 11, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 11, 1);
			}
			
			if($valorradicado_8[0] == 1){
				
				$cadena_juzgado = substr($valorradicado, 10, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 10, 2);
			}
			
			
		}
		
		
		//-----------FIN ARMAR DIRECTORIO RADICADO---------
		
		
		
		
		$opcionX       = 1;
		
		
		/*$iddev_juzgado = $_SESSION['id_juzgado'];
		
		$Didentidad_user = $_SESSION['nomusu'];
		$Dnombre_user    = $_SESSION['nombre'];
		
		$devolucion      = "DEVOLUCION EXTERNA, REALIZADA POR: ".$Didentidad_user." - ".$Dnombre_user;
		
		$idevo           = trim($_POST['idevo']);*/
		
	
		
		//***********************************PARA EL ARCHIVO***************************************
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "EXPEDIENTE_DIGITAL_2";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		//$nom = trim($_SESSION['idUsuario']);
		//$nom = trim($idradi);
		$nom = trim($J."/".$cadena_juzgado);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//AQUI SE CREA EL DIRECTORIO
		//if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		//else{mkdir($raiz.'/'.$nom, 0, true);}
				
		//CUANDO SOLO SE SUBE UN ARCHIVOS
		/*$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		$tamano_archivo = $_FILES['archivo']['size'];*/ 
		
		
		//***********************************FIN PARA EL ARCHIVO***************************************
		
						$cadena_archivos = "";
					
						
						$error_transaccion   = 0; //variable para detectar error
						$msg = " ";
								
						//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
						//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
								
							
								
						try {  
									
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
									
									
									//for($i = 0; $i < count($_POST['idradicado']); $i++){
									
									
									
									//---------------VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									$error_nombre = 0;
									
									for($i = 0; $i < count($_POST['idradicado']); $i++){
									
									
				
											$nombre_archivo = $_FILES['Foto']['name'][$i];
											
											
											//LONGITUD ARCHIVO
											$ncaracteresX = $modelo->get_caracteres_archivo($nombre_archivo);
											
											if($ncaracteresX > 38){
											
												$x = strlen($nombre_archivo);
														
												$error_nombre = 1;
												
												$i = count($_POST['idradicado']);
												
												
												echo '<script languaje="JavaScript"> 
									
														var nombre_archivoX     = "'.$nombre_archivo.'";
														
														var caracteres_archivoX = "'.$ncaracteresX.'";
																	
													
														alert("EL NOMBRE DEL ARCHIVO NO DEBE TENER MAS DE 38 CARACTERES: "+nombre_archivoX+" CANTIDAD ACTUAL DE CARACTERES: "+caracteres_archivoX);
																	
																	
														var idradiX = "'.$idradiX.'";
														var radiX   = "'.$radiX.'";
																	
														location.href="index.php?controller=archivo&action=Registrar_Folio&datosexpF="+idradiX+"******"+radiX;
																						
																
													</script>';
											}
											
											
											
											//ESTRUCTURA ARCHIVO
											for($x = 0; $x < strlen($nombre_archivo); $x++) {
											
												//CAPTUTA ASCII CARACTER
												 //caracter = ord(x);
												 
												 //echo "<br>"."CARACTER: ".$nombre_archivo[$x]." ASCII: ".ord($nombre_archivo[$x]);
												 
												 $caracter = ord($nombre_archivo[$x]);
												 
												 if( 
																					
																					 
														($caracter >= 32  && $caracter <= 44)   ||
														($caracter >= 47  && $caracter <= 47)   || 
														($caracter >= 58  && $caracter <= 64)   || 
														($caracter >= 91  && $caracter <= 94)   || 
														($caracter >= 96  && $caracter <= 96)   ||
														($caracter >= 123 && $caracter <= 254)  
																					 
												) {
														
														//echo "CARACTER NO VALIDO EN NOMBRE DE ARCHIVO:".$nombre_archivo[$x]."<br>"."<br>"." SOLO SE PERMITE EL CARACTER RAYA AL MEDIO (-) Y NOMBRES CONFORMADOS POR LETRAS, NUMEROS Y TODO PEGADO";
														
														$x = strlen($nombre_archivo);
														
														$error_nombre = 1;
														
														$i = count($_POST['idradicado']);
														
														$idcaracter = chr($caracter);
														
														echo '<script languaje="JavaScript"> 
									
																	var nombre_archivoX = "'.$nombre_archivo.'";
																	
																	var idcaracter      = "'.$idcaracter.'";
																	
																	
																	alert("CARACTER NO VALIDO EN NOMBRE DE ARCHIVO: "+nombre_archivoX+" CARACTER: "+idcaracter+" SOLO SE PERMITE EL CARACTER RAYA AL MEDIO (-), RAYA AL PISO (_) Y NOMBRES CONFORMADOS POR LETRAS O NUMEROS Y TODO PEGADO");
																	

																	
																	var idradiX = "'.$idradiX.'";
																	var radiX   = "'.$radiX.'";
																	
																	location.href="index.php?controller=archivo&action=Registrar_Folio&datosexpF="+idradiX+"******"+radiX;
																						
																
															</script>';
														
												
												}
												
												
												
											}
									
									
									
									}
									
									
									
									//---------------FIN VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									
									//REALIZA REGISTRO, NO EXISTE INCONSISTENCIAS EN NOMBRE DE ARCHIVO(S)
									if($error_nombre == 0){
									
										//SE USA EL FOR INVERSO, PARA QUE EN LA VISTA
										//expediente_folio_nuevo.php, CADA VEZ QUE SE ADICIONE UN NUEVO FORMULARIO 
										//PARA AGREGAR NUEVO FOLIO, EL FORMULARIO QUE SE DESPLAZA Y VA QUEDANDO
										//DE ULTIMO SEA EL PRIMERO EN EL REGISTRO EN LA TABLA expe_digital EN SU ID
										//AUTONUMERICO
										for($i = count($_POST['idradicado']) - 1; $i >= 0 ; $i--){
										
										
										
											$idradicado = trim($_POST['idradicado'][$i]);
											$fecha      = trim($_POST['fecha'][$i]);
											$hora       = $horalog;
											
											
											$folios     = trim($_POST['folios'][$i]);
											
											/*$folio_i  = trim($_POST['folio_i'][$i]);
											$folio_f    = trim($_POST['folio_f'][$i]);*/
											
											$cuaderno   = trim($_POST['cuaderno'][$i]);
											$des        = utf8_decode(trim($_POST['des'][$i]));	
											
											
											$dependencia = trim($_POST['dependencia'][$i]);
											
											//SE DEFINE RANGO DE FECHAS DE CREACION DOCUMENTO
											if($digitalizadoX == 1){
											
												$fecha_de  = trim($_POST['fecha_de'][$i]);
												$fecha_a   = trim($_POST['fecha_a'][$i]);
												
												$fecha_cre = trim('0000-00-00');
												
											}
										    //SE DEFINE SOLO FECHA DE CREACION DOCUMENTO
											else{
											
												$digitalizadoX = 2;
												
												$fecha_cre = trim($_POST['fecha_cre'][$i]);
												
												$fecha_de  = trim('0000-00-00');
												$fecha_a   = trim('0000-00-00');
											}
								
								
											$obs = utf8_decode(trim($_POST['obs'][$i]));
											
											//DETERMINA QUE EL USUARIO EN SESION PERTENECE
											//ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE
											//$nombrelista = 'pa_usuario_acciones'; $idaccion = '32';
	
											$paraestado = trim($_POST['paraestado'][$i]);
											
											$fecha_estado = trim($_POST['fecha_estado'][$i]);
											
											if($bandera_DES_2 == 1){
											
												$digitalizadoX = 2;
												$fecha_de      = trim('0000-00-00');
												$fecha_a       = trim('0000-00-00');
												$fecha_cre     = trim($fecha_estado);
											
												if($paraestado == 0 || $paraestado == 1){
												
													$para_estado = $paraestado;
												}
												
												if( $paraestado == 1 ){
												
													//PERMITE IDENTIFICAR USUARIO EN SESION, QUE PUEDE CERRAR LAS TAREAS ASIGNADAS A UN PROCESO A DESPACHO
													//AUTOMATICAMENTE, SIN NECESIDAD DE HACERLO EN LA VISTA DE LOS JUZGADOS
													if($bandera_CERRAR == 1){
													
														//CARGAR LOS ID ASOCIOADOS AL RADICADO DE LA TABLA detalle_correspondencia ENVIADOA A DESPACHO
														//PARA QUE LOS PROCESOS ASIGNADOS A UNA TAREA SE APLIQUE A UN MEMORIAL
														//O MEMORIALES SEGUN ESA EL CASO
														$datosMEMOS_2 = $modelo->listar_memoriales_proceso_2($idradiX);
														
														$contmemo = 0;
														while($filamemo_2 = $datosMEMOS_2->fetch()){
														
														
															$ID_MEMOS_2 = $filamemo_2[idactu].",".$ID_MEMOS_2;
															
															$contmemo = $contmemo + 1;
															
														}
														
														//SE RELIZA ESTA CPREGUNTA YA QUE EL USUARIO YA REALIZO EL PROCESO
														//Y LUEGO CANCELO Y AL VOLVERLO A REGISTRAR YA LA VARIABLE $ID_MEMOS_2
														// NO CARGA NADA Y EN LA SQL GENERA INCONSISTENCIA
														if($contmemo >= 1){
														
															$ID_MEMOS_2       = rtrim($ID_MEMOS_2,",");
															
															$idactuX_CERRAR   = "IN(".trim($ID_MEMOS_2).")";//IDSMEMO
															
															$SQL_CERRAR_TAREA = "UPDATE detalle_correspondencia SET
						
						
																					  estadoobs        = 3,
																					  tareacerrada     = 'OK',
																					  fechacerrar      = '$fechalog',
																					  horacerrar       = '$horalog'
																					 
																				 WHERE id ".$idactuX_CERRAR;
																				 
																				 
															
															$this->db->exec($SQL_CERRAR_TAREA);
															
														}
														
														//REINICAR VARIABLE
														//PARA QUE NO COCATENE LOS ID DE TODO EL FOR PRINCIPAL
														unset($ID_MEMOS_2);
														
														$contmemo = 0;
														
														
														
														
													}
												
													
												}
												
												
												//PARA QUE NO CIERRE LA TAREA Y QUEDE EN ESTADO REVISAR
												//YA QUE EN LA VISTA DEL JUEZ LOS IDENTIFICA COMO PROCESOS QUE LE ENTRARON MEMORIALES Y AUN SUS COSTAS NO ESTAN HECHAS
												if( $paraestado == 5 ){
												
													
														//CARGAR LOS ID ASOCIOADOS AL RADICADO DE LA TABLA detalle_correspondencia ENVIADOA A DESPACHO
														//PARA QUE LOS PROCESOS ASIGNADOS A UNA TAREA SE APLIQUE A UN MEMORIAL
														//O MEMORIALES SEGUN ESA EL CASO
														$datosMEMOS_2 = $modelo->listar_memoriales_proceso_2($idradiX);
														
														$contmemo = 0;
														while($filamemo_2 = $datosMEMOS_2->fetch()){
														
														
															$ID_MEMOS_2 = $filamemo_2[idactu].",".$ID_MEMOS_2;
															
															$contmemo = $contmemo + 1;
															
														}
														
														//SE RELIZA ESTA CPREGUNTA YA QUE EL USUARIO YA REALIZO EL PROCESO
														//Y LUEGO CANCELO Y AL VOLVERLO A REGISTRAR YA LA VARIABLE $ID_MEMOS_2
														// NO CARGA NADA Y EN LA SQL GENERA INCONSISTENCIA
														if($contmemo >= 1){
														
															$ID_MEMOS_2       = rtrim($ID_MEMOS_2,",");
															
															$idactuX_CERRAR   = "IN(".trim($ID_MEMOS_2).")";//IDSMEMO
															
															$SQL_CERRAR_TAREA = "UPDATE detalle_correspondencia SET
						
						
																					  estadoobs = 5
																					 
																				 WHERE id ".$idactuX_CERRAR;
																				 
																				 
															
															$this->db->exec($SQL_CERRAR_TAREA);
															
														}
														
														//REINICAR VARIABLE
														//PARA QUE NO COCATENE LOS ID DE TODO EL FOR PRINCIPAL
														unset($ID_MEMOS_2);
														
														$contmemo = 0;
														
													
												}
												
												
												
												
											}
											else{
											
												$fecha_estado = '0000-00-00';
											}
											
											
											if( !empty( $_FILES['Foto']['name'] ) ){
											
												
												//AQUI SE CREA EL DIRECTORIO
												//$dir_idradi = 'uploads/' .$_POST['idradicado'][$i];
												//$dir_idradi = $raiz.'/' .$_POST['idradicado'][$i];
												$dir_idradi = $raiz.'/' .$nom;
												
												if(is_dir($dir_idradi)){$bandera=0;}
												else{mkdir($dir_idradi, 0, true);}
											
												//$foto = date('ymdhis') . '-' . strtolower($_FILES['Foto']['name'][$i]);
												$foto = date('ymdhis') . '-' . $_FILES['Foto']['name'][$i];
												$tipo = $_FILES['Foto']['type'][$i];
												$ruta = utf8_decode($dir_idradi.'/'.$foto);
												
												//move_uploaded_file ($_FILES['Foto']['tmp_name'][$i], 'uploads/' . $foto);
												//move_uploaded_file ($_FILES['Foto']['tmp_name'][$i], utf8_decode($ruta));
												move_uploaded_file ($_FILES['Foto']['tmp_name'][$i],$ruta);
												
												
							
												
											}
											
											//SE CIERRAN LOS FOLIOS Y SE UBICA DONDE
											//SE CARGA EL ARCHIVO, YA QUE SE CALCULAN
											//AUTOMATICAMENTE SEGUN EL NUMERO DE PAGINAS DEL ARCHIVO
											//$folios = $modelo->numeroPaginasPdf($ruta);
											
											echo '<script languaje="JavaScript"> 
										
														var ruta = "'.$ruta.'";
														var dat_3 = "'.$folios.'";
														
														alert("FOLIOS: "+dat_3+" RUTA:"+ruta);
														
											
												</script>';
											
											$this->db->exec("INSERT INTO expe_digital (idradicado,fecha,hora,folios,cuaderno,tipo,ruta,des,idusuario,estado,para_estado,idjuzgado,fecha_estado,
											                 ip_equipo_registra,nombre_equipo_registra,id_dependencia,
															 fecha_creacion,fecha_de,fecha_a,origen,obs) 
															 VALUES ('$idradicado','$fecha','$hora','$folios','$cuaderno','$tipo','$ruta','$des','$idusuario',1,'$para_estado','$id_juzgadoX','$fecha_estado',
															 '$ip_equipo_registra','$nombre_equipo_registra','$dependencia',
															 '$fecha_cre','$fecha_de','$fecha_a','$digitalizadoX','$obs')");
															 
											
											//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
											$last_id = $this->db->lastInsertId();
										
											 
											
											//HISTORIAL
											$actuacion = 'REGISTRO FOLIO(S)';
											$tablas    = 'expe_digital';
											$tipo      = 'RF';
											$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo,idexpdigi,
											                 ip_equipo_registra,nombre_equipo_registra,id_dependencia,
															 fecha_creacion,fecha_de,fecha_a,origen,obs)
															 VALUES('$idradiX','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$ruta','$tipo','$last_id',
															 '$ip_equipo_registra','$nombre_equipo_registra','$dependencia',
															 '$fecha_cre','$fecha_de','$fecha_a','$digitalizadoX','$obs')");
															 
										}
										
										
										
										
													
										//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
																				
										//SE TERMINA LA TRANSACCION  
										$this->db->commit();
																
										//echo $msg;
									
									
									
									}//FIN if($error_nombre == 0){
									else{
									
										$error_transaccion = 1;
									}
											
									
									  
						} 
						catch (Exception $e) {
									
							$msg = "ERROR EN PROCESO: ".$e->getMessage();			
						
							
										
										
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
							
					
							//echo $msg;
										
							$error_transaccion   = 1;
							
							
						}
							
										
							
						if($error_transaccion){
								
							//echo $msg;
							
							//SE ADIICONA ESTA PARTE PARA QUE SE QUEDE EN REGISTRAR FOLIO
							//Y SEA POSIBLE ORGANIZAR EL NOMBRE ARCHIVO CON LA INCOSISTENCIA
							if($error_nombre == 1){
							
								$error_nombre = 1;
							
							}
							else{
							
								//PARA QUE EN LA VISTA EXPEDIENTE_DIGITALNO ENTRE
								//CUANDO LOS PROCESOS SON CORRECTOS
								$opcionX = 0;
								
								echo '<script languaje="JavaScript"> 
										
					
										var msg = "'.$msg.'";	
										
										var idradiX = "'.$idradiX.'";
										var radiX   = "'.$radiX.'";
										var opcionX = "'.$opcionX.'";
										
										
										alert(msg);
										
										location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
										
										
									  </script>';
									  
									  
							}
							
							
								
						}
						else{
						
						
					
							header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX);
		
								
						}
					
					

				
  	}
	
	
	public function adicionar_folios_proceso_ANTERIOR(){
	
		set_time_limit (240000000);
		
		$modelo = new archivoModel();
		
		//-------------------------------------------------------------------------
		//IDENTIFICAR QUE EL USUARIO EN SESION, PERTENECE 
		//A JUZGADO 1 O 2 DE EJECUCION Y NO A LA OFICINA DE EJECUCION
		//CON EL OBJETO, QUE AL REGISTRAR EL FOLIO NUEVO
		//EL SISTEMA IDENTIFIQUE QUE ESTE REGISTRO Y AUTO
		//SALE PARA ESTADO EL DIA SIGUIENTE 
		$Jid_juzgado = $_SESSION['id_juzgado'];
		
		$para_estado = 0;
		
		if($Jid_juzgado == 15 || $Jid_juzgado == 16){
		
			$para_estado = 1;
			$idjuzgado   = $Jid_juzgado;
		}
		else{
		
			$para_estado = 0;
			$idjuzgado   = 0;
		}
		//-------------------------------------------------------------------------
		
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE***************
		$campos              = 'usuario';
		$nombrelista         = 'pa_usuario_acciones';
		$idaccion	         = '32';
		$campoordenar        = 'id';
		$datos_DES_1         = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
		$datos_DES_2         = $datos_DES_1->fetch();
		$datos_DES_3	     = explode("////",$datos_DES_2[usuario]);
				
		$bandera_DES_2       = 0;
				
		if ( in_array($_SESSION['idUsuario'],$datos_DES_3,true) ){
				
			$bandera_DES_2 = 1;
		}	
						
		//******************FIN ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE***************
		
		

		
		//DATOS PARA EL REGISTRO DEL LOG
		/*$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];*/
		
		//$horalog    = $datosfecha[1];
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		//$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario     = $_SESSION['idUsuario'];
		
		$idradiX       = trim($_POST['idradiX']);
		$radiX         = trim($_POST['radiX']);
		
		$id_juzgadoX   = trim($_POST['id_juzgadoX']);
		
		
		//-----------ARMAR DIRECTORIO RADICADO--------------
		
		//EJ: 17001400300220140017100 ---> 220140017100
		//EJ: 17001400301220140017100 ---> 1220140017100
		
		$valorradicado = $radiX;
		
		$cadena_juzgado;
		$valorradicado_8 = substr($valorradicado, 10, 2);
		$J;
		// Recorremos cada carï¿½cter de la cadena
		for($i=0; $i<strlen($valorradicado_8); $i++){
			
			if($valorradicado_8[0] == 0){
				
				$cadena_juzgado = substr($valorradicado, 11, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 11, 1);
			}
			
			if($valorradicado_8[0] == 1){
				
				$cadena_juzgado = substr($valorradicado, 10, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 10, 2);
			}
			
			
		}
		
		
		//-----------FIN ARMAR DIRECTORIO RADICADO---------
		
		
		
		
		$opcionX       = 1;
		
		
		/*$iddev_juzgado = $_SESSION['id_juzgado'];
		
		$Didentidad_user = $_SESSION['nomusu'];
		$Dnombre_user    = $_SESSION['nombre'];
		
		$devolucion      = "DEVOLUCION EXTERNA, REALIZADA POR: ".$Didentidad_user." - ".$Dnombre_user;
		
		$idevo           = trim($_POST['idevo']);*/
		
	
		
		//***********************************PARA EL ARCHIVO***************************************
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "EXPEDIENTE_DIGITAL_2";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		//$nom = trim($_SESSION['idUsuario']);
		//$nom = trim($idradi);
		$nom = trim($J."/".$cadena_juzgado);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//AQUI SE CREA EL DIRECTORIO
		//if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		//else{mkdir($raiz.'/'.$nom, 0, true);}
				
		//CUANDO SOLO SE SUBE UN ARCHIVOS
		/*$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		$tamano_archivo = $_FILES['archivo']['size'];*/ 
		
		
		//***********************************FIN PARA EL ARCHIVO***************************************
		
						$cadena_archivos = "";
					
						
						$error_transaccion   = 0; //variable para detectar error
						$msg = " ";
								
						//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
						//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
								
							
								
						try {  
									
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
									
									
									//for($i = 0; $i < count($_POST['idradicado']); $i++){
									
									//SE USA EL FOR INVERSO, PARA QUE EN LA VISTA
									//expediente_folio_nuevo.php, CADA VEZ QUE SE ADICIONE UN NUEVO FORMULARIO 
									//PARA AGREGAR NUEVO FOLIO, EL FORMULARIO QUE SE DESPLAZA Y VA QUEDANDO
									//DE ULTIMO SEA EL PRIMERO EN EL REGISTRO EN LA TABLA expe_digital EN SU ID
									//AUTONUMERICO
									for($i = count($_POST['idradicado']) - 1; $i >= 0 ; $i--){
									
									
									
										$idradicado = trim($_POST['idradicado'][$i]);
										$fecha      = trim($_POST['fecha'][$i]);
										$hora       = $horalog;
										
										
										$folios     = trim($_POST['folios'][$i]);
										
										/*$folio_i  = trim($_POST['folio_i'][$i]);
										$folio_f    = trim($_POST['folio_f'][$i]);*/
										
										$cuaderno   = trim($_POST['cuaderno'][$i]);
										$des        = utf8_decode(trim($_POST['des'][$i]));	
										
										
										//DETERMINA QUE EL USUARIO EN SESION PERTENECE
										//ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE
										//$nombrelista = 'pa_usuario_acciones'; $idaccion = '32';

										$paraestado = trim($_POST['paraestado'][$i]);
										
										$fecha_estado = trim($_POST['fecha_estado'][$i]);
										
										if($bandera_DES_2 == 1){
										
											if($paraestado == 0 || $paraestado == 1){
											
												$para_estado = $paraestado;
											}
										}
										else{
										
											$fecha_estado = '0000-00-00';
										}
										
										if( !empty( $_FILES['Foto']['name'] ) ){
					
											//AQUI SE CREA EL DIRECTORIO
											//$dir_idradi = 'uploads/' .$_POST['idradicado'][$i];
											//$dir_idradi = $raiz.'/' .$_POST['idradicado'][$i];
											$dir_idradi = $raiz.'/' .$nom;
											
											if(is_dir($dir_idradi)){$bandera=0;}
											else{mkdir($dir_idradi, 0, true);}
										
											//$foto = date('ymdhis') . '-' . strtolower($_FILES['Foto']['name'][$i]);
											$foto = date('ymdhis') . '-' . $_FILES['Foto']['name'][$i];
											$tipo = $_FILES['Foto']['type'][$i];
											$ruta = utf8_decode($dir_idradi.'/'.$foto);
											
											//move_uploaded_file ($_FILES['Foto']['tmp_name'][$i], 'uploads/' . $foto);
											//move_uploaded_file ($_FILES['Foto']['tmp_name'][$i], utf8_decode($ruta));
											move_uploaded_file ($_FILES['Foto']['tmp_name'][$i],$ruta);
											
											
						
											
										}
										
										//SE CIERRAN LOS FOLIOS Y SE UBICA DONDE
										//SE CARGA EL ARCHIVO, YA QUE SE CALCULAN
										//AUTOMATICAMENTE SEGUN EL NUMERO DE PAGINAS DEL ARCHIVO
										//$folios = $modelo->numeroPaginasPdf($ruta);
										
										echo '<script languaje="JavaScript"> 
									
													var ruta = "'.$ruta.'";
													var dat_3 = "'.$folios.'";
													
													alert("FOLIOS: "+dat_3+" RUTA:"+ruta);
													
										
											</script>';
										
										$this->db->exec("INSERT INTO expe_digital (idradicado,fecha,hora,folios,cuaderno,tipo,ruta,des,idusuario,estado,para_estado,idjuzgado,fecha_estado) 
														 VALUES ('$idradicado','$fecha','$hora','$folios','$cuaderno','$tipo','$ruta','$des','$idusuario',1,'$para_estado','$id_juzgadoX','$fecha_estado')");
														 
										
										//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
										$last_id = $this->db->lastInsertId();
									
										 
										
										//HISTORIAL
										$actuacion = 'REGISTRO FOLIO(S)';
										$tablas    = 'expe_digital';
										$tipo      = 'RF';
										$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo,idexpdigi)
														 VALUES('$idradiX','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$ruta','$tipo','$last_id')");
														 
									}
									
									//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
									//$last_id = $this->db->lastInsertId();
									
									//$last_id = $idradiX;
									
						
									//------------------------------------SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
									
									//AQUI SE CREA EL DIRECTORIO, CON EL ID ASIGNADO A LA DEMANDA
									/*if(is_dir($raiz.'/'.$nom.'/'.$last_id)){$bandera=0;}
									else{mkdir($raiz.'/'.$nom.'/'.$last_id, 0, true);}

									$mensage       = '';//Declaramos una variable mensaje quue almacenara el resultado de las operaciones.
									$archivo_error = 0;
									
									foreach ($_FILES as $key) //Iteramos el arreglo de archivos
									{
										if($key['error'] == UPLOAD_ERR_OK )//Si el archivo se paso correctamente Ccontinuamos 
											{
											
												$nombre_archivo = $key['name'];//Obtenemos el nombre original del archivo
												$temporal       = $key['tmp_name']; //Obtenemos la ruta Original del archivo
												//$Destino        = $ruta.$NombreOriginal;//Creamos una ruta de destino con la variable ruta y el nombre original del archivo	
												//$ruta           = $raiz.'/'.$nom.'/'.$despacho.'/'.$last_id.'/'.$nombre_archivo;
												$ruta           = $raiz.'/'.$nom.'/'.$last_id.'/'.$nombre_archivo;
												
												move_uploaded_file($temporal, utf8_decode($ruta)); //Movemos el archivo temporal a la ruta especificada		
												
											}
									
										if ($key['error']=='') //Si no existio ningun error, retornamos un mensaje por cada archivo subido
											{
												//$mensage .= '-> Archivo <b>'.$NombreOriginal.'</b> Subido correctamente. <br>';
												
												$rutaarchivo = utf8_decode($raiz.'/'.$nom.'/'.$last_id.'/'.$nombre_archivo);
												
												//TABLA dda_archivos, QUEDA LA RUTA DE LOS ARCHIVOS DE LA DEMANDA
												$this->db->exec("INSERT INTO dda_archivos(idda,ruta,tipo,actuacion,fecha,hora)
												VALUES('$last_id','$rutaarchivo','DEX','$devolucion','$fechalog','$horalog')");
												
												$cadena_archivos .= $rutaarchivo."******";
												
											}
										if ($key['error']!='')//Si existio algï¿½n error retornamos un el error por cada archivo.
											{
												$mensage .= '-> No se pudo subir el archivo <b>'.$nombre_archivo.'</b> debido al siguiente Error: n'.$key['error']; 
												
												$archivo_error = 1;
											}
										
									}*/
									
									//echo $mensage;// Regresamos los mensajes generados al cliente
									
									//------------------------------------FIN SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
									
									
									//HISTORIAL
									/*$actuacion = 'REGISTRO FOLIO(S)';
									$tablas    = 'expe_digital';
									$tipo      = 'RF';
									$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo)
													 VALUES('$last_id','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$ruta','$tipo')");*/
									
									
									
											
											
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
																		
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
														
								//echo $msg;
											
									
									  
						} 
						catch (Exception $e) {
									
							$msg = "ERROR EN PROCESO: ".$e->getMessage();			
						
							//IDENTIFICA QUE OCURIIO UN ERROR,CON ALGUN ARCHIVO QUE SE DESEA CARGAR
							/*if($archivo_error == 1){
							
								$msg = "ERROR EN PROCESO: ".$e->getMessage()." ERROR EN ARCHIVO: ".$mensage;
							}
							else{
							
								$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							}*/
										
										
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
							//SE ELIMINA EL DIRECTORIO Y EL ARCHIVO(S) SUBIDOS
							/*$ruta_borrar = $raiz.'/'.$nom.'/'.$last_id;
							$files       = array_diff(scandir($ruta_borrar), array('.','..')); 

							foreach ($files as $file) { 
							
								//(is_dir("$ruta_borrar/$file")) ? delTree("$ruta_borrar/$file") : unlink("$ruta_borrar/$file"); 
								
								if( is_dir("$ruta_borrar/$file") ){ 
									
									 unlink("$ruta_borrar/$file"); 
								}
								  
							} */
					
							//echo $msg;
										
							$error_transaccion   = 1;
							
							
						}
							
										
							
						if($error_transaccion){
								
							//echo $msg;
							
							
							
							//PARA QUE EM LA VISTA EXPEDIENTE_DIGITALNO ENTRE
							//CUANDO LOS PROCESOS SON CORRECTOS
							$opcionX = 0;
							
							echo '<script languaje="JavaScript"> 
									
				
									var msg = "'.$msg.'";	
									
									var idradiX = "'.$idradiX.'";
									var radiX   = "'.$radiX.'";
									var opcionX = "'.$opcionX.'";
									
									
									alert(msg);
									
									location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
									
									
								  </script>';
								
						}
						else{
						
						
					
							//SE TERMINA LA TRANSACCION  
							//$this->db->commit();
										
							//$msg = "1-PROCESO SE REALIZA CORRECTAMENTE";
									
							//echo $msg;
							
							/*echo '<script languaje="JavaScript"> 
							
									
									var idradi = "'.$idradiX.'";	
									var radi   = "'.$radiX.'";	
				
									
									alert("1-PROCESO SE REALIZA CORRECTAMENTE: "+idradiX+" "+radiX);
									
									
									//location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradi+"******"+radi;
			
						
								  </script>';*/
								  
							
							//$idradicado_h = trim($_REQUEST['idradi']);
							//$radicado_h   = trim($_REQUEST['radi']);
							
							//header('Location: index.php?idradi='.$idradicado_h.'&radi='.$radicado_h);
							
							header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX);
		
								
						}
					
					

				
  	}
	
	
	public function obtener_folio($idfolio){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$fecha_actual = $modelo->get_fecha_actual_amd();
			
			
			$idusuario     = $_SESSION['idUsuario'];
			
			
			$listar = $this->db->prepare("
			
										   SELECT * FROM expe_digital 
										   WHERE id = '$idfolio'
										  
										 "
											
										);
			
			
											
											
			

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function editar_folio_proceso(){
	
		set_time_limit (240000000);
		
		$modelo = new archivoModel();
		
		//DATOS DE EQUIPO NOMBRE Y IP
		$nombre_equipo_edita = gethostbyaddr( $_SERVER['REMOTE_ADDR'] );
		$ip_equipo_edita     = gethostbyname($nombre_equipo_edita);		
		
		//DATOS PARA EL REGISTRO DEL LOG
		/*$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];*/
		
		//$horalog    = $datosfecha[1];
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		//$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario     = $_SESSION['idUsuario'];
		$nombre_user   = $_SESSION['nombre'];
		
		$idradiX       = trim($_POST['idradiX']);
		$radiX         = trim($_POST['radiX']);
		
		$idfolioX      = trim($_POST['idfolioX']);
		
		$id_juzgadoX   = trim($_POST['id_juzgadoX']);
		
		$opcionX       = 2;
		
		$no_edita_archivo = 0;
		
		$digitalizadoX = trim($_POST['digitalizadoX']);
		
		
		$cuadernoX        = trim($_POST['cuadernoX']);
		$rutaX            = trim($_POST['rutaX']);
		$orden_documentoX = trim($_POST['orden_documentoX']);
		$tipoX            = trim($_POST['tipoX']);
		
		$fechacreX        = trim($_POST['fechacreX']);
		
		//-----------ARMAR DIRECTORIO RADICADO--------------
		
		//EJ: 17001400300220140017100 ---> 220140017100
		//EJ: 17001400301220140017100 ---> 1220140017100
		
		$valorradicado = $radiX;
		
		$cadena_juzgado;
		$valorradicado_8 = substr($valorradicado, 10, 2);
		$J;
		// Recorremos cada carï¿½cter de la cadena
		for($i=0; $i<strlen($valorradicado_8); $i++){
			
			if($valorradicado_8[0] == 0){
				
				$cadena_juzgado = substr($valorradicado, 11, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 11, 1);
			}
			
			if($valorradicado_8[0] == 1){
				
				$cadena_juzgado = substr($valorradicado, 10, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 10, 2);
			}
			
			
		}
		
		
		//-----------FIN ARMAR DIRECTORIO RADICADO---------
		
		
		//-------------------------------------------------------------------------
		//IDENTIFICAR QUE EL USUARIO EN SESION, PERTENECE 
		//A JUZGADO 1 O 2 DE EJECUCION Y NO A LA OFICINA DE EJECUCION
		//CON EL OBJETO, QUE AL REGISTRAR EL FOLIO NUEVO
		//EL SISTEMA IDENTIFIQUE QUE ESTE REGISTRO Y AUTO
		//SALE PARA ESTADO EL DIA SIGUIENTE 
		$Jid_juzgado = $_SESSION['id_juzgado'];
		
		$para_estado = 0;
		
		if($Jid_juzgado == 15 || $Jid_juzgado == 16){
		
			$para_estado = 1;
			$idjuzgado   = $Jid_juzgado;
		}
		else{
		
			$para_estado = 0;
			$idjuzgado   = 0;
		}
		//-------------------------------------------------------------------------
		
		
		
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE***************
		$campos              = 'usuario';
		$nombrelista         = 'pa_usuario_acciones';
		$idaccion	         = '32';
		$campoordenar        = 'id';
		$datos_DES_1X         = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
		$datos_DES_2X         = $datos_DES_1X->fetch();
		$datos_DES_3X	     = explode("////",$datos_DES_2X[usuario]);
				
		$bandera_DES_2       = 0;
				
		if ( in_array($_SESSION['idUsuario'],$datos_DES_3X,true) ){
				
			$bandera_DES_2 = 1;
		}	
						
		//******************FIN ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE***************
		
		
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y AL CARGAR EL AUTO SE CIERRA LA TAREA AUTOMATICAMENTE***************
		$idaccion	         = '34';
		$campoordenar        = 'id';
		$datos_CERRAR_1      = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
		$datos_CERRAR_2      = $datos_CERRAR_1->fetch();
		$datos_CERRAR_3	     = explode("////",$datos_CERRAR_2[usuario]);
				
		$bandera_CERRAR      = 0;
				
		if ( in_array($_SESSION['idUsuario'],$datos_CERRAR_3,true) ){
				
			$bandera_CERRAR = 1;
		}	
						
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y AL CARGAR EL AUTO SE CIERRA LA TAREA AUTOMATICAMENTE***************
		
		
		
		
		
		/*$iddev_juzgado = $_SESSION['id_juzgado'];
		
		$Didentidad_user = $_SESSION['nomusu'];
		$Dnombre_user    = $_SESSION['nombre'];
		
		$devolucion      = "DEVOLUCION EXTERNA, REALIZADA POR: ".$Didentidad_user." - ".$Dnombre_user;
		
		$idevo           = trim($_POST['idevo']);*/
		
	
		
		//***********************************PARA EL ARCHIVO***************************************
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "EXPEDIENTE_DIGITAL_2";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		//$nom = trim($_SESSION['idUsuario']);
		//$nom = trim($idradi);
		$nom = trim($J."/".$cadena_juzgado);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//AQUI SE CREA EL DIRECTORIO
		//if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		//else{mkdir($raiz.'/'.$nom, 0, true);}
				
		//CUANDO SOLO SE SUBE UN ARCHIVOS
		/*$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		$tamano_archivo = $_FILES['archivo']['size'];*/ 
		
		
		//***********************************FIN PARA EL ARCHIVO***************************************
		
						$cadena_archivos = "";
					
						
						$error_transaccion   = 0; //variable para detectar error
						$msg = " ";
								
						//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
						//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
								
							
								
						try {  
									
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
									
									
									//for($i = 0; $i < count($_POST['idradicado']); $i++){
									
									
									//---------------VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									$error_nombre = 0;
									
									for($i = 0; $i < count($_POST['idradicado']); $i++){
									
									
						
											$nombre_archivo = $_FILES['Foto']['name'];
											
											
											//LONGITUD ARCHIVO
											$ncaracteresX = $modelo->get_caracteres_archivo($nombre_archivo);
											
											if($ncaracteresX > 38){
											
												$x = strlen($nombre_archivo);
														
												$error_nombre = 1;
												
												$i = count($_POST['idradicado']);
												
												
												echo '<script languaje="JavaScript"> 
									
														var nombre_archivoX     = "'.$nombre_archivo.'";
														
														var caracteres_archivoX = "'.$ncaracteresX.'";
																	
													
														alert("EL NOMBRE DEL ARCHIVO NO DEBE TENER MAS DE 38 CARACTERES: "+nombre_archivoX+" CANTIDAD ACTUAL DE CARACTERES: "+caracteres_archivoX);
																	
																	
														var idradiX     = "'.$idradiX.'";
														var radiX       = "'.$radiX.'";
														var idfolioX    = "'.$idfolioX.'";
														var idusuario   = "'.$idusuario.'";
														var nombre_user = "'.$nombre_user.'";
																	
														location.href="index.php?controller=archivo&action=Editar_Folio&datosexpEF="+idradiX+"******"+radiX+"******"+idfolioX+"******"+idusuario+"******"+nombre_user;
																						
																
													</script>';
											}
											
											//ESTRUCTURA DEL ARCHIVO
											for($x = 0; $x < strlen($nombre_archivo); $x++) {
											
												//CAPTUTA ASCII CARACTER
												 //caracter = ord(x);
												 
												 //echo "<br>"."CARACTER: ".$nombre_archivo[$x]." ASCII: ".ord($nombre_archivo[$x]);
												 
												 $caracter = ord($nombre_archivo[$x]);
												 
												 if( 
																					
																					 
														/*($caracter >= 32  && $caracter <= 44)   ||
														($caracter >= 47  && $caracter <= 47)   || 
														($caracter >= 58  && $caracter <= 64)   || 
														($caracter >= 91  && $caracter <= 94)   || 
														($caracter >= 96  && $caracter <= 96)   ||
														($caracter >= 123 && $caracter <= 254)*/
														
														($caracter >= 32  && $caracter <= 45)  ||
														($caracter >= 47  && $caracter <= 47)  ||
														($caracter >= 58  && $caracter <= 64)  || 
														($caracter >= 91  && $caracter <= 96)  || 
														($caracter >= 123 && $caracter <= 254)  
																					 
												) {
														
														//echo "CARACTER NO VALIDO EN NOMBRE DE ARCHIVO:".$nombre_archivo[$x]."<br>"."<br>"." SOLO SE PERMITE EL CARACTER RAYA AL MEDIO (-) Y NOMBRES CONFORMADOS POR LETRAS, NUMEROS Y TODO PEGADO";
														
														$x = strlen($nombre_archivo);
														
														$error_nombre = 1;
														
														$i = count($_POST['idradicado']);
														
														$idcaracter = chr($caracter);
														
														
														
														echo '<script languaje="JavaScript"> 
									
																	
																	var nombre_archivoX = "'.$nombre_archivo.'";
																	
																	var idcaracter      = "'.$idcaracter.'";
																	
																	alert("CARACTER NO VALIDO EN NOMBRE DE ARCHIVO: "+nombre_archivoX+" CARACTER: "+idcaracter+" SOLO NOMBRES CONFORMADOS POR LETRAS O NUMEROS Y TODO PEGADO");
																	
																	
																	var idradiX     = "'.$idradiX.'";
																	var radiX       = "'.$radiX.'";
																	var idfolioX    = "'.$idfolioX.'";
																	var idusuario   = "'.$idusuario.'";
																	var nombre_user = "'.$nombre_user.'";
																	
																	location.href="index.php?controller=archivo&action=Editar_Folio&datosexpEF="+idradiX+"******"+radiX+"******"+idfolioX+"******"+idusuario+"******"+nombre_user;
																						
																
															</script>';
														
												
												}
												
												
												
											}
									
									
									
									}
									
									
									
									//---------------FIN VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									
									//REALIZA REGISTRO, NO EXISTE INCONSISTENCIAS EN NOMBRE DE ARCHIVO(S)
									if($error_nombre == 0){
									
									
												$idradicado = trim($_POST['idradicado']);
												$fecha      = $fechalog;
												$hora       = $horalog;
												$folios     = trim($_POST['folios']);
												/*$folio_i  = trim($_POST['folio_i']);
												$folio_f    = trim($_POST['folio_f']);*/
												
												$cuaderno   = trim($_POST['cuaderno']);
												
												$des        = utf8_decode(trim($_POST['des']));	
												
												$dependencia = trim($_POST['dependencia']);
												
												if($dependencia == 19){
											
													$otra = utf8_decode(trim($_POST['otradep']));
												
												}
												else{
													
													$otra = trim('NINGUNA');
												}

												
											//SE DEFINE RANGO DE FECHAS DE CREACION DOCUMENTO
											if($digitalizadoX == 1){
											
												$fecha_de  = trim($_POST['fecha_de']);
												$fecha_a   = trim($_POST['fecha_a']);
												
												$fecha_cre = trim('0000-00-00');
												
											}
										    //SE DEFINE SOLO FECHA DE CREACION DOCUMENTO
											else{
											
												$digitalizadoX = 2;
												
												$fecha_cre = trim($_POST['fecha_cre']);
												
												$fecha_de  = trim('0000-00-00');
												$fecha_a   = trim('0000-00-00');
											}
								
								
											$obs = utf8_decode(trim($_POST['obs']));
												
												
												//DETERMINA QUE EL USUARIO EN SESION PERTENECE
												//ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE
												//$nombrelista = 'pa_usuario_acciones'; $idaccion = '32';
		
												$paraestado = trim($_POST['paraestado']);
												
												$fecha_estado = trim($_POST['fecha_estado']);
												
												if($bandera_DES_2 == 1){
												
												
													$digitalizadoX = 2;
													$fecha_de      = trim('0000-00-00');
													$fecha_a       = trim('0000-00-00');
													//$fecha_cre     = trim($fecha_estado);
													$fecha_cre     = trim($fechacreX);
												
													if($paraestado == 0 || $paraestado == 1){
													
														$para_estado = $paraestado;
													}
													
													if( $paraestado == 1 ){
												
														//PERMITE IDENTIFICAR USUARIO EN SESION, QUE PUEDE CERRAR LAS TAREAS ASIGNADAS A UN PROCESO A DESPACHO
														//AUTOMATICAMENTE, SIN NECESIDAD DE HACERLO EN LA VISTA DE LOS JUZGADOS
														if($bandera_CERRAR == 1){
														
															//CARGAR LOS ID ASOCIOADOS AL RADICADO DE LA TABLA detalle_correspondencia ENVIADOA A DESPACHO
															//PARA QUE LOS PROCESOS ASIGNADOS A UNA TAREA SE APLIQUE A UN MEMORIAL
															//O MEMORIALES SEGUN ESA EL CASO
															$datosMEMOS_2 = $modelo->listar_memoriales_proceso_2($idradiX);
															
															$contmemo = 0;
															while($filamemo_2 = $datosMEMOS_2->fetch()){
															
															
																$ID_MEMOS_2 = $filamemo_2[idactu].",".$ID_MEMOS_2;
																
																$contmemo = $contmemo + 1;
																
															}
															
															//Y LUEGO CANCELO Y AL VOLVERLO A REGISTRAR YA LA VARIABLE $ID_MEMOS_2
															// NO CARGA NADA Y EN LA SQL GENERA INCONSISTENCIA
															if($contmemo >= 1){
														
																$ID_MEMOS_2       = rtrim($ID_MEMOS_2,",");
																
																$idactuX_CERRAR   = "IN(".trim($ID_MEMOS_2).")";//IDSMEMO
																
																$SQL_CERRAR_TAREA = "UPDATE detalle_correspondencia SET
							
							
																						  estadoobs        = 3,
																						  tareacerrada     = 'OK',
																						  fechacerrar      = '$fechalog',
																						  horacerrar       = '$horalog'
																						 
																					 WHERE id ".$idactuX_CERRAR;
																					 
																					 
																
																$this->db->exec($SQL_CERRAR_TAREA);
															
															}
															
															//REINICAR VARIABLE
															//PARA QUE NO COCATENE LOS ID DE TODO EL FOR PRINCIPAL
															unset($ID_MEMOS_2);
															
															$contmemo = 0;
															
															
															
															
														}
												
													
													}
													
													
													//PARA QUE NO CIERRE LA TAREA Y QUEDE EN ESTADO REVISAR
													//YA QUE EN LA VISTA DEL JUEZ LOS IDENTIFICA COMO PROCESOS QUE LE ENTRARON MEMORIALES Y AUN SUS COSTAS NO ESTAN HECHAS
													if( $paraestado == 5 ){
													
														
															//CARGAR LOS ID ASOCIOADOS AL RADICADO DE LA TABLA detalle_correspondencia ENVIADOA A DESPACHO
															//PARA QUE LOS PROCESOS ASIGNADOS A UNA TAREA SE APLIQUE A UN MEMORIAL
															//O MEMORIALES SEGUN ESA EL CASO
															$datosMEMOS_2 = $modelo->listar_memoriales_proceso_2($idradiX);
															
															$contmemo = 0;
															while($filamemo_2 = $datosMEMOS_2->fetch()){
															
															
																$ID_MEMOS_2 = $filamemo_2[idactu].",".$ID_MEMOS_2;
																
																$contmemo = $contmemo + 1;
																
															}
															
															//SE RELIZA ESTA CPREGUNTA YA QUE EL USUARIO YA REALIZO EL PROCESO
															//Y LUEGO CANCELO Y AL VOLVERLO A REGISTRAR YA LA VARIABLE $ID_MEMOS_2

															// NO CARGA NADA Y EN LA SQL GENERA INCONSISTENCIA
															if($contmemo >= 1){
															
																$ID_MEMOS_2       = rtrim($ID_MEMOS_2,",");
																
																$idactuX_CERRAR   = "IN(".trim($ID_MEMOS_2).")";//IDSMEMO
																
																$SQL_CERRAR_TAREA = "UPDATE detalle_correspondencia SET
							
							
																						  estadoobs = 5
																						 
																					 WHERE id ".$idactuX_CERRAR;
																					 
																					 
																
																$this->db->exec($SQL_CERRAR_TAREA);
																
															}
															
															//REINICAR VARIABLE
															//PARA QUE NO COCATENE LOS ID DE TODO EL FOR PRINCIPAL
															unset($ID_MEMOS_2);
															
															$contmemo = 0;
															
														
													}
													
			
													
												}
												else{
												
													$para_estado  = 0;
													$idjuzgado    = 0;
													$fecha_estado = '0000-00-00';
												}
												
												
												//SE SELECCIONO ARCHIVO
												if( !empty( $_FILES['Foto']['name'] ) ){
							
													//AQUI SE CREA EL DIRECTORIO
													$dir_idradi = $raiz.'/' .$nom;
													if(is_dir($dir_idradi)){$bandera=0;}
													else{mkdir($dir_idradi, 0, true);}
												
													//CUADERNO ANTERIOR == CUADERNO SELECCIONADO
													if($cuadernoX == $cuaderno){
													
														$orden_documento_siguente = $orden_documentoX;
														
														if($orden_documento_siguente >= 1 && $orden_documento_siguente <= 9){												
		
															$orden_documento_siguente = "0".$orden_documento_siguente;
														}
														
									
														//$foto = date('ymdhis') . '-' . $_FILES['Foto']['name'];
														$foto = date('ymdhis') . '-' . $orden_documento_siguente.$_FILES['Foto']['name'];
														$tipo = $_FILES['Foto']['type'];
														$ruta = utf8_decode($dir_idradi.'/'.$foto);
														
														move_uploaded_file ($_FILES['Foto']['tmp_name'],$ruta);
														
														//NOMBRE ARCHIVO
														/*$ruta_memo_1 = explode("/",$ruta);
														$ruta_memo_2 = trim($ruta_memo_1[3]);
														
														//NUEVO NOMBRE ARCHIVO
														$nuevo_nombre_archivo = $modelo->get_nuevo_nombre($ruta_memo_2,$orden_documento_siguente);
														
														
														//EJEMPLO: 
														//200816114310-3201900683.pdf
														//SEGUN EL EJEMPLO = .pdf
														$nombre_archivo_tipo   = explode(".",$ruta_memo_2);
														
														$nueva_ruta_expediente = "EXPEDIENTE_DIGITAL_2/".$nom."/".date('ymdhis') . '-' .$nuevo_nombre_archivo.".".$nombre_archivo_tipo[1];
														
														$antigua_ruta_expediente = $ruta;
														
														//RENOMBRAMOS EL ARCHIVO
														rename($antigua_ruta_expediente,$nueva_ruta_expediente);
														
														$ruta = $nueva_ruta_expediente;*/
														
														
													
													}
													
													
													//EL CUADERNO ANTERIOR ES DIFERENTE AL CUADERNO SELECCIONADO
													//ENTONCES, SE DEBE CALCULAR DE NUEVO EL $orden_documento_siguente
													//PARA EL FOLIO YA QUE SE UBICARA EN UN CUADERNO DIFERENTE
													if($cuadernoX != $cuaderno){
													
														//DOCUMENTOS CARGADOS EN expe_digital 
														$cantidad_documentos      = $modelo->get_cantidad_documentos($cuaderno,$idradicado);
														$filadoc                  = $cantidad_documentos->fetch();
														$cantidad_doc             = $filadoc[numero];
														
														//SI TIENE CARGADOS, Y SEGUN EL CUEADERNO SELECCIONADO
														//SE TRAE EL NUMERO SIGUIENTE DE LA COLUMNA orden_documento TABLA expe_digital 
														//PARA CONCATER CON EL NOMBRE DEL ARCHIVO QUE SE ESTA SUBIENDO
														//EJEMPLO: 01CONSTANCIAS.pdf
														if($cantidad_doc >= 1){
													
															$datos_orden_documento    = $modelo->get_orden_documento_siguente($cuaderno,$idradicado);
															$filaod                   = $datos_orden_documento->fetch();
															$orden_documento_siguente = $filaod[orden_documento_siguente];
														
														}
														//SI NO TIENE CARGADOS, SERIA EL PRIMERO,
														//INDEPENDIENTE DEL CUADERNO QUE SE SELECCIONE
														else{
														
															$orden_documento_siguente = 1;
														}
														
														if($orden_documento_siguente >= 1 && $orden_documento_siguente <= 9){												
		
															$orden_documento_siguente = "0".$orden_documento_siguente;
														}
									
														//$foto = date('ymdhis') . '-' . $_FILES['Foto']['name'];
														$foto = date('ymdhis') . '-' . $orden_documento_siguente.$_FILES['Foto']['name'];
														$tipo = $_FILES['Foto']['type'];
														$ruta = utf8_decode($dir_idradi.'/'.$foto);
														
														move_uploaded_file ($_FILES['Foto']['tmp_name'],$ruta);
														
														//NOMBRE ARCHIVO
														/*$ruta_memo_1 = explode("/",$ruta);
														$ruta_memo_2 = trim($ruta_memo_1[3]);
														
														//NUEVO NOMBRE ARCHIVO
														$nuevo_nombre_archivo = $modelo->get_nuevo_nombre($ruta_memo_2,$orden_documento_siguente);
														
														
														//EJEMPLO: 
														//200816114310-3201900683.pdf
														//SEGUN EL EJEMPLO = .pdf
														$nombre_archivo_tipo   = explode(".",$ruta_memo_2);
														
														$nueva_ruta_expediente = "EXPEDIENTE_DIGITAL_2/".$nom."/".date('ymdhis') . '-' .$nuevo_nombre_archivo.".".$nombre_archivo_tipo[1];
														
														$antigua_ruta_expediente = $ruta;
														
														//RENOMBRAMOS EL ARCHIVO
														rename($antigua_ruta_expediente,$nueva_ruta_expediente);
														
														$ruta = $nueva_ruta_expediente;*/
														
														
													
													}
													
								
													$no_edita_archivo = 1;
													
													//ELIMINA DEL DIRECTORIA EL ARCHIVO, 
													//QUE ESTA SIENDO REEMPLAZADO EN LA EDICION
													//SE CIERRA ESTA LINEA PARA EVITAR INCONSISTENCIAS 4 DE JUNIO 2021
													//SE ABRE ESTA LINEA DE NUEVO, YA QUE LA INCOSISTENCIA ERA OTRA 22 DE JUNIO 2021
													//ALGUNOS ARCHIVOS SE CONSTRUIAN CON EL MISMO ID 210622082410-NOMBREARCHIVO
													unlink($rutaX);
													
												}
												//NO SE SELECCIONO ARCHIVO
												else{
												
													//CUADERNO ANTERIOR == CUADERNO SELECCIONADO
													if($cuadernoX == $cuaderno){
													
														$orden_documento_siguente = $orden_documentoX;
														$ruta                     = $rutaX;
														$tipo                     = $tipoX;
													
													}
													//EL CUADERNO ANTERIOR ES DIFERENTE AL CUADERNO SELECCIONADO
													//ENTONCES, SE DEBE CALCULAR DE NUEVO EL $orden_documento_siguente
													//PARA EL FOLIO YA QUE SE UBICARA EN UN CUADERNO DIFERENTE
													if($cuadernoX != $cuaderno){
													
														//DOCUMENTOS CARGADOS EN expe_digital 
														$cantidad_documentos      = $modelo->get_cantidad_documentos($cuaderno,$idradicado);
														$filadoc                  = $cantidad_documentos->fetch();
														$cantidad_doc             = $filadoc[numero];
														
														//SI TIENE CARGADOS, Y SEGUN EL CUADERNO SELECCIONADO
														//SE TRAE EL NUMERO SIGUIENTE DE LA COLUMNA orden_documento TABLA expe_digital 
														//PARA CONCATER CON EL NOMBRE DEL ARCHIVO QUE SE ESTA SUBIENDO
														//EJEMPLO: 01CONSTANCIAS.pdf
														if($cantidad_doc >= 1){
													
															$datos_orden_documento    = $modelo->get_orden_documento_siguente($cuaderno,$idradicado);
															$filaod                   = $datos_orden_documento->fetch();
															$orden_documento_siguente = $filaod[orden_documento_siguente];
														
														}
														//SI NO TIENE CARGADOS, SERIA EL PRIMERO,
														//INDEPENDIENTE DEL CUADERNO QUE SE SELECCIONE
														else{
														
															$orden_documento_siguente = 1;
														}
														
														//NOMBRE ARCHIVO
														$ruta_memo_1 = explode("/",$rutaX);
														$ruta_memo_2 = trim($ruta_memo_1[3]);
														
														//NUEVO NOMBRE ARCHIVO
														$nuevo_nombre_archivo = $modelo->get_nuevo_nombre($ruta_memo_2,$orden_documento_siguente);
														
														//EJEMPLO: 
														//200816114310-3201900683.pdf
														//SEGUN EL EJEMPLO = .pdf
														$nombre_archivo_tipo   = explode(".",$ruta_memo_2);
														
														$nueva_ruta_expediente = "EXPEDIENTE_DIGITAL_2/".$nom."/".date('ymdhis') . '-' .$nuevo_nombre_archivo.".".$nombre_archivo_tipo[1];
														
														$antigua_ruta_expediente = $rutaX;
														
														//RENOMBRAMOS EL ARCHIVO
														rename($antigua_ruta_expediente,$nueva_ruta_expediente);
														
														$ruta = $nueva_ruta_expediente;
														
														$tipo = $tipoX;
														
													
													}
													
												
												}
												
												
												
												/*$this->db->exec("INSERT INTO expe_digital (idradicado,fecha,hora,folio_i,folio_f,cuaderno,Foto,tipo,ruta,des,idusuario) 
																 VALUES ('$idradicado','$fecha','$hora','$folio_i','$folio_f','$cuaderno','$foto','$tipo','$ruta','$des','$idusuario')");*/
												
												
												//EDITA CON ARCHIVO SELECCIONADO
												if($no_edita_archivo == 1){
																 
													$this->db->exec("
																		UPDATE expe_digital SET 
																		
							
																			folios              = '$folios',
																			cuaderno            = '$cuaderno',
																			tipo                = '$tipo',
																			ruta                = '$ruta',
																			des                 = '$des',
																			idusuarioedita      = '$idusuario',
																			fechaedita          = '$fecha',
																			horaedita           = '$hora',
																			para_estado         = '$para_estado',
																			idjuzgado           = '$id_juzgadoX',
																			fecha_estado        = '$fecha_estado',
																			ip_equipo_edita     = '$ip_equipo_edita',
																			nombre_equipo_edita = '$nombre_equipo_edita',
																			id_dependencia      = '$dependencia',
																			fecha_creacion      = '$fecha_cre',
																			fecha_de            = '$fecha_de',
																			fecha_a             = '$fecha_a',
																			origen              = '$digitalizadoX',
																			obs                 = '$obs',
																			orden_documento     = '$orden_documento_siguente',
																			otra                = '$otra'
																
																		WHERE id = '$idfolioX' 
																		
																		
																	");
																	
												}
												//NO EDITA NO SE SELECCIONO ARCHIVO
												else{
											
											
													$this->db->exec("
																		UPDATE expe_digital SET 
																		
							
																			folios              = '$folios',
																			cuaderno            = '$cuaderno',
																			tipo                = '$tipo',
																			ruta                = '$ruta',
																			des                 = '$des',
																			idusuarioedita      = '$idusuario',
																			fechaedita          = '$fecha',
																			horaedita           = '$hora',
																			para_estado         = '$para_estado',
																			idjuzgado           = '$id_juzgadoX',
																			fecha_estado        = '$fecha_estado',
																			ip_equipo_edita     = '$ip_equipo_edita',
																			nombre_equipo_edita = '$nombre_equipo_edita',
																			id_dependencia      = '$dependencia',
																			fecha_creacion      = '$fecha_cre',
																			fecha_de            = '$fecha_de',
																			fecha_a             = '$fecha_a',
																			origen              = '$digitalizadoX',
																			obs                 = '$obs',
																			orden_documento     = '$orden_documento_siguente',
																			otra                = '$otra'
																
																		WHERE id = '$idfolioX' 
																		
																		
																	");
											
											
												}
																	
																	
																 
											//}
											
											//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
											//$last_id = $this->db->lastInsertId();
											
											$last_id = $idradiX;
											
											
											//HISTORIAL
											$actuacion = 'EDITAR FOLIO';
											$tablas    = 'expe_digital';
											$tipo      = 'EF';
											$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo,idexpdigi,
											                 ip_equipo_edita,nombre_equipo_edita,id_dependencia,
															 fecha_creacion,fecha_de,fecha_a,origen,obs,orden_documento,otra)
															 VALUES('$last_id','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$ruta','$tipo','$idfolioX',
															 '$ip_equipo_edita','$nombre_equipo_edita','$dependencia',
															 '$fecha_cre','$fecha_de','$fecha_a','$digitalizadoX','$obs','$orden_documento_siguente','$otra')");
											
											
													
										//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
																				
										//SE TERMINA LA TRANSACCION  
										$this->db->commit();
																
										//echo $msg;
										
										
									}//FIN if($error_nombre == 0){
									else{
											
										$error_transaccion = 1;
									}
											
									
									  
						} 
						catch (Exception $e) {
									
							$msg = "ERROR EN PROCESO: ".$e->getMessage();			
						
							
										
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
							
							//echo $msg;
							
							
							
							$error_transaccion   = 1;
							
							
						}
							
										
							
						if($error_transaccion){
								
							//echo $msg;
							
							//SE ADICIONA ESTA PARTE PARA QUE SE QUEDE EN REGISTRAR FOLIO
							//Y SEA POSIBLE ORGANIZAR EL NOMBRE ARCHIVO CON LA INCOSISTENCIA
							if($error_nombre == 1){
							
								$error_nombre = 1;
							
							}
							else{
							
								//PARA QUE EN LA VISTA EXPEDIENTE_DIGITALNO ENTRE
								//CUANDO LOS PROCESOS SON CORRECTOS
								$opcionX = 0;
								
								echo '<script languaje="JavaScript"> 
										
					
										var msg = "'.$msg.'";	
										
										var ruta_borrar = "'.$ruta_borrar.'";	
										
										var idradiX = "'.$idradiX.'";
										var radiX   = "'.$radiX.'";
										var opcionX = "'.$opcionX.'";
										
										
										alert(msg+" - "+ruta_borrar);
										
										location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
										
										
									  </script>';
									  
									  
							}
								  
								 
								
						}
						else{
						
							//CUADERNO ANTERIOR == CUADERNO SELECCIONADO
							//NO APLICA FUNCION get_renombrar_cuaderno
							if($cuadernoX == $cuaderno){
							
								header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX.'******'.$idfolioX);
							}
							else{
							
								//RENOMBRAR TODOS LOS ARCHIVOS 
								//DEL CUADERNO ORIGEN ($cuadernoX) 
								//Y EL CUADERNO DESTINO ($cuaderno)
														
								$renombrar_cuaderno = $modelo->get_renombrar_cuaderno($idradiX,$cuadernoX,$cuaderno,$nom);
								
								$renombrar_cuaderno_1 = explode("******",$renombrar_cuaderno);
								$renombrar_cuaderno_2 = $renombrar_cuaderno_1[0];
								$renombrar_cuaderno_3 = $renombrar_cuaderno_1[1];
								
								/*echo '<script languaje="JavaScript"> 
										
											var renombrar_cuaderno = "'.$renombrar_cuaderno.'";	
											alert(renombrar_cuaderno);
											
									</script>';*/
								
								//SE PRESENTO UN ERROR
								if($renombrar_cuaderno_2 == 1){
															
									
									//$msg = "2.ERC ERROR AL RENOMBRAR CUADERNO";
									$msg = $renombrar_cuaderno_3;
									
									//PARA QUE EM LA VISTA EXPEDIENTE_DIGITALNO ENTRE
									//CUANDO LOS PROCESOS SON CORRECTOS
									$opcionX = 0;
									
									echo '<script languaje="JavaScript"> 
											
						
											var msg = "'.$msg.'";	
											
											var idradiX = "'.$idradiX.'";
											var radiX   = "'.$radiX.'";
											var opcionX = "'.$opcionX.'";
											
											alert(msg);
											
											location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
											
											
										  </script>';
									
								}
								else{
						
								
									header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX.'******'.$idfolioX);
			
								}
								
								
							}
							
								
						}
					
					

				
  	}
	
	
	public function editar_folio_procesoANTERIOR_20210507(){
	
		set_time_limit (240000000);
		
		$modelo = new archivoModel();
		
		//DATOS DE EQUIPO NOMBRE Y IP
		$nombre_equipo_edita = gethostbyaddr( $_SERVER['REMOTE_ADDR'] );
		$ip_equipo_edita     = gethostbyname($nombre_equipo_edita);		
		
		//DATOS PARA EL REGISTRO DEL LOG
		/*$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];*/
		
		//$horalog    = $datosfecha[1];
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		//$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario     = $_SESSION['idUsuario'];
		$nombre_user   = $_SESSION['nombre'];
		
		$idradiX       = trim($_POST['idradiX']);
		$radiX         = trim($_POST['radiX']);
		
		$idfolioX      = trim($_POST['idfolioX']);
		
		$id_juzgadoX   = trim($_POST['id_juzgadoX']);
		
		$opcionX       = 2;
		
		$no_edita_archivo = 0;
		
		$digitalizadoX = trim($_POST['digitalizadoX']);
		
		
		$cuadernoX        = trim($_POST['cuadernoX']);
		$rutaX            = trim($_POST['rutaX']);
		$orden_documentoX = trim($_POST['orden_documentoX']);
		$tipoX            = trim($_POST['tipoX']);
		
		
		$fechacreX        = trim($_POST['fechacreX']);
		
		//-----------ARMAR DIRECTORIO RADICADO--------------
		
		//EJ: 17001400300220140017100 ---> 220140017100
		//EJ: 17001400301220140017100 ---> 1220140017100
		
		$valorradicado = $radiX;
		
		$cadena_juzgado;
		$valorradicado_8 = substr($valorradicado, 10, 2);
		$J;
		// Recorremos cada carï¿½cter de la cadena
		for($i=0; $i<strlen($valorradicado_8); $i++){
			
			if($valorradicado_8[0] == 0){
				
				$cadena_juzgado = substr($valorradicado, 11, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 11, 1);
			}
			
			if($valorradicado_8[0] == 1){
				
				$cadena_juzgado = substr($valorradicado, 10, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 10, 2);
			}
			
			
		}
		
		
		//-----------FIN ARMAR DIRECTORIO RADICADO---------
		
		
		//-------------------------------------------------------------------------
		//IDENTIFICAR QUE EL USUARIO EN SESION, PERTENECE 
		//A JUZGADO 1 O 2 DE EJECUCION Y NO A LA OFICINA DE EJECUCION
		//CON EL OBJETO, QUE AL REGISTRAR EL FOLIO NUEVO
		//EL SISTEMA IDENTIFIQUE QUE ESTE REGISTRO Y AUTO
		//SALE PARA ESTADO EL DIA SIGUIENTE 
		$Jid_juzgado = $_SESSION['id_juzgado'];
		
		$para_estado = 0;
		
		if($Jid_juzgado == 15 || $Jid_juzgado == 16){
		
			$para_estado = 1;
			$idjuzgado   = $Jid_juzgado;
		}
		else{
		
			$para_estado = 0;
			$idjuzgado   = 0;
		}
		//-------------------------------------------------------------------------
		
		
		
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE***************
		$campos              = 'usuario';
		$nombrelista         = 'pa_usuario_acciones';
		$idaccion	         = '32';
		$campoordenar        = 'id';
		$datos_DES_1X         = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
		$datos_DES_2X         = $datos_DES_1X->fetch();
		$datos_DES_3X	     = explode("////",$datos_DES_2X[usuario]);
				
		$bandera_DES_2       = 0;
				
		if ( in_array($_SESSION['idUsuario'],$datos_DES_3X,true) ){
				
			$bandera_DES_2 = 1;
		}	
						
		//******************FIN ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE***************
		
		
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y AL CARGAR EL AUTO SE CIERRA LA TAREA AUTOMATICAMENTE***************
		$idaccion	         = '34';
		$campoordenar        = 'id';
		$datos_CERRAR_1      = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
		$datos_CERRAR_2      = $datos_CERRAR_1->fetch();
		$datos_CERRAR_3	     = explode("////",$datos_CERRAR_2[usuario]);
				
		$bandera_CERRAR      = 0;
				
		if ( in_array($_SESSION['idUsuario'],$datos_CERRAR_3,true) ){
				
			$bandera_CERRAR = 1;
		}	
						
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y AL CARGAR EL AUTO SE CIERRA LA TAREA AUTOMATICAMENTE***************
		
		
		
		
		
		/*$iddev_juzgado = $_SESSION['id_juzgado'];
		
		$Didentidad_user = $_SESSION['nomusu'];
		$Dnombre_user    = $_SESSION['nombre'];
		
		$devolucion      = "DEVOLUCION EXTERNA, REALIZADA POR: ".$Didentidad_user." - ".$Dnombre_user;
		
		$idevo           = trim($_POST['idevo']);*/
		
	
		
		//***********************************PARA EL ARCHIVO***************************************
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "EXPEDIENTE_DIGITAL_2";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		//$nom = trim($_SESSION['idUsuario']);
		//$nom = trim($idradi);
		$nom = trim($J."/".$cadena_juzgado);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//AQUI SE CREA EL DIRECTORIO
		//if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		//else{mkdir($raiz.'/'.$nom, 0, true);}
				
		//CUANDO SOLO SE SUBE UN ARCHIVOS
		/*$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		$tamano_archivo = $_FILES['archivo']['size'];*/ 
		
		
		//***********************************FIN PARA EL ARCHIVO***************************************
		
						$cadena_archivos = "";
					
						
						$error_transaccion   = 0; //variable para detectar error
						$msg = " ";
								
						//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
						//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
								
							
								
						try {  
									
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
									
									
									//for($i = 0; $i < count($_POST['idradicado']); $i++){
									
									
									//---------------VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									$error_nombre = 0;
									
									for($i = 0; $i < count($_POST['idradicado']); $i++){
									
									
						
											$nombre_archivo = $_FILES['Foto']['name'];
											
											
											//LONGITUD ARCHIVO
											$ncaracteresX = $modelo->get_caracteres_archivo($nombre_archivo);
											
											if($ncaracteresX > 38){
											
												$x = strlen($nombre_archivo);
														
												$error_nombre = 1;
												
												$i = count($_POST['idradicado']);
												
												
												echo '<script languaje="JavaScript"> 
									
														var nombre_archivoX     = "'.$nombre_archivo.'";
														
														var caracteres_archivoX = "'.$ncaracteresX.'";
																	
													
														alert("EL NOMBRE DEL ARCHIVO NO DEBE TENER MAS DE 38 CARACTERES: "+nombre_archivoX+" CANTIDAD ACTUAL DE CARACTERES: "+caracteres_archivoX);
																	
																	
														var idradiX     = "'.$idradiX.'";
														var radiX       = "'.$radiX.'";
														var idfolioX    = "'.$idfolioX.'";
														var idusuario   = "'.$idusuario.'";
														var nombre_user = "'.$nombre_user.'";
																	
														location.href="index.php?controller=archivo&action=Editar_Folio&datosexpEF="+idradiX+"******"+radiX+"******"+idfolioX+"******"+idusuario+"******"+nombre_user;
																						
																
													</script>';
											}
											
											//ESTRUCTURA DEL ARCHIVO
											for($x = 0; $x < strlen($nombre_archivo); $x++) {
											
												//CAPTUTA ASCII CARACTER
												 //caracter = ord(x);
												 
												 //echo "<br>"."CARACTER: ".$nombre_archivo[$x]." ASCII: ".ord($nombre_archivo[$x]);
												 
												 $caracter = ord($nombre_archivo[$x]);
												 
												 if( 
																					
																					 
														/*($caracter >= 32  && $caracter <= 44)   ||
														($caracter >= 47  && $caracter <= 47)   || 
														($caracter >= 58  && $caracter <= 64)   || 
														($caracter >= 91  && $caracter <= 94)   || 
														($caracter >= 96  && $caracter <= 96)   ||
														($caracter >= 123 && $caracter <= 254)*/
														
														($caracter >= 32  && $caracter <= 45)  ||
														($caracter >= 47  && $caracter <= 47)  ||
														($caracter >= 58  && $caracter <= 64)  || 
														($caracter >= 91  && $caracter <= 96)  || 
														($caracter >= 123 && $caracter <= 254)  
																					 
												) {
														
														//echo "CARACTER NO VALIDO EN NOMBRE DE ARCHIVO:".$nombre_archivo[$x]."<br>"."<br>"." SOLO SE PERMITE EL CARACTER RAYA AL MEDIO (-) Y NOMBRES CONFORMADOS POR LETRAS, NUMEROS Y TODO PEGADO";
														
														$x = strlen($nombre_archivo);
														
														$error_nombre = 1;
														
														$i = count($_POST['idradicado']);
														
														$idcaracter = chr($caracter);
														
														
														
														echo '<script languaje="JavaScript"> 
									
																	
																	var nombre_archivoX = "'.$nombre_archivo.'";
																	
																	var idcaracter      = "'.$idcaracter.'";
																	
																	alert("CARACTER NO VALIDO EN NOMBRE DE ARCHIVO: "+nombre_archivoX+" CARACTER: "+idcaracter+" SOLO NOMBRES CONFORMADOS POR LETRAS O NUMEROS Y TODO PEGADO");
																	
																	
																	var idradiX     = "'.$idradiX.'";
																	var radiX       = "'.$radiX.'";
																	var idfolioX    = "'.$idfolioX.'";
																	var idusuario   = "'.$idusuario.'";
																	var nombre_user = "'.$nombre_user.'";
																	
																	location.href="index.php?controller=archivo&action=Editar_Folio&datosexpEF="+idradiX+"******"+radiX+"******"+idfolioX+"******"+idusuario+"******"+nombre_user;
																						
																
															</script>';
														
												
												}
												
												
												
											}
									
									
									
									}
									
									
									
									//---------------FIN VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									
									//REALIZA REGISTRO, NO EXISTE INCONSISTENCIAS EN NOMBRE DE ARCHIVO(S)
									if($error_nombre == 0){
									
									
												$idradicado = trim($_POST['idradicado']);
												$fecha      = $fechalog;
												$hora       = $horalog;
												$folios     = trim($_POST['folios']);
												/*$folio_i  = trim($_POST['folio_i']);
												$folio_f    = trim($_POST['folio_f']);*/
												
												$cuaderno   = trim($_POST['cuaderno']);
												
												$des        = utf8_decode(trim($_POST['des']));	
												
												$dependencia = trim($_POST['dependencia']);

												
											//SE DEFINE RANGO DE FECHAS DE CREACION DOCUMENTO
											if($digitalizadoX == 1){
											
												$fecha_de  = trim($_POST['fecha_de']);
												$fecha_a   = trim($_POST['fecha_a']);
												
												$fecha_cre = trim('0000-00-00');
												
											}
										    //SE DEFINE SOLO FECHA DE CREACION DOCUMENTO
											else{
											
												$digitalizadoX = 2;
												
												$fecha_cre = trim($_POST['fecha_cre']);
												
												$fecha_de  = trim('0000-00-00');
												$fecha_a   = trim('0000-00-00');
											}
								
								
											$obs = utf8_decode(trim($_POST['obs']));
												
												
												//DETERMINA QUE EL USUARIO EN SESION PERTENECE
												//ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE
												//$nombrelista = 'pa_usuario_acciones'; $idaccion = '32';
		
												$paraestado = trim($_POST['paraestado']);
												
												$fecha_estado = trim($_POST['fecha_estado']);
												
												if($bandera_DES_2 == 1){
												
												
													$digitalizadoX = 2;
													$fecha_de      = trim('0000-00-00');
													$fecha_a       = trim('0000-00-00');
													//$fecha_cre     = trim($fecha_estado);
													$fecha_cre     = trim($fechacreX);
												
													if($paraestado == 0 || $paraestado == 1){
													
														$para_estado = $paraestado;
													}
													
													if( $paraestado == 1 ){
												
														//PERMITE IDENTIFICAR USUARIO EN SESION, QUE PUEDE CERRAR LAS TAREAS ASIGNADAS A UN PROCESO A DESPACHO
														//AUTOMATICAMENTE, SIN NECESIDAD DE HACERLO EN LA VISTA DE LOS JUZGADOS
														if($bandera_CERRAR == 1){
														
															//CARGAR LOS ID ASOCIOADOS AL RADICADO DE LA TABLA detalle_correspondencia ENVIADOA A DESPACHO
															//PARA QUE LOS PROCESOS ASIGNADOS A UNA TAREA SE APLIQUE A UN MEMORIAL
															//O MEMORIALES SEGUN ESA EL CASO
															$datosMEMOS_2 = $modelo->listar_memoriales_proceso_2($idradiX);
															
															$contmemo = 0;
															while($filamemo_2 = $datosMEMOS_2->fetch()){
															
															
																$ID_MEMOS_2 = $filamemo_2[idactu].",".$ID_MEMOS_2;
																
																$contmemo = $contmemo + 1;
																
															}
															
															//Y LUEGO CANCELO Y AL VOLVERLO A REGISTRAR YA LA VARIABLE $ID_MEMOS_2
															// NO CARGA NADA Y EN LA SQL GENERA INCONSISTENCIA
															if($contmemo >= 1){
														
																$ID_MEMOS_2       = rtrim($ID_MEMOS_2,",");
																
																$idactuX_CERRAR   = "IN(".trim($ID_MEMOS_2).")";//IDSMEMO
																
																$SQL_CERRAR_TAREA = "UPDATE detalle_correspondencia SET
							
							
																						  estadoobs        = 3,
																						  tareacerrada     = 'OK',
																						  fechacerrar      = '$fechalog',
																						  horacerrar       = '$horalog'
																						 
																					 WHERE id ".$idactuX_CERRAR;
																					 
																					 
																
																$this->db->exec($SQL_CERRAR_TAREA);
															
															}
															
															//REINICAR VARIABLE
															//PARA QUE NO COCATENE LOS ID DE TODO EL FOR PRINCIPAL
															unset($ID_MEMOS_2);
															
															$contmemo = 0;
															
															
															
															
														}
												
													
													}
													
													
													//PARA QUE NO CIERRE LA TAREA Y QUEDE EN ESTADO REVISAR
													//YA QUE EN LA VISTA DEL JUEZ LOS IDENTIFICA COMO PROCESOS QUE LE ENTRARON MEMORIALES Y AUN SUS COSTAS NO ESTAN HECHAS
													if( $paraestado == 5 ){
													
														
															//CARGAR LOS ID ASOCIOADOS AL RADICADO DE LA TABLA detalle_correspondencia ENVIADOA A DESPACHO
															//PARA QUE LOS PROCESOS ASIGNADOS A UNA TAREA SE APLIQUE A UN MEMORIAL
															//O MEMORIALES SEGUN ESA EL CASO
															$datosMEMOS_2 = $modelo->listar_memoriales_proceso_2($idradiX);
															
															$contmemo = 0;
															while($filamemo_2 = $datosMEMOS_2->fetch()){
															
															
																$ID_MEMOS_2 = $filamemo_2[idactu].",".$ID_MEMOS_2;
																
																$contmemo = $contmemo + 1;
																
															}
															
															//SE RELIZA ESTA CPREGUNTA YA QUE EL USUARIO YA REALIZO EL PROCESO
															//Y LUEGO CANCELO Y AL VOLVERLO A REGISTRAR YA LA VARIABLE $ID_MEMOS_2
															// NO CARGA NADA Y EN LA SQL GENERA INCONSISTENCIA
															if($contmemo >= 1){
															
																$ID_MEMOS_2       = rtrim($ID_MEMOS_2,",");
																
																$idactuX_CERRAR   = "IN(".trim($ID_MEMOS_2).")";//IDSMEMO
																
																$SQL_CERRAR_TAREA = "UPDATE detalle_correspondencia SET
							
							
																						  estadoobs = 5
																						 
																					 WHERE id ".$idactuX_CERRAR;
																					 
																					 
																
																$this->db->exec($SQL_CERRAR_TAREA);
																
															}
															
															//REINICAR VARIABLE
															//PARA QUE NO COCATENE LOS ID DE TODO EL FOR PRINCIPAL
															unset($ID_MEMOS_2);
															
															$contmemo = 0;
															
														
													}
													
			
													
												}
												else{
												
													$para_estado  = 0;
													$idjuzgado    = 0;
													$fecha_estado = '0000-00-00';
												}
												
												
												//SE SELECCIONO ARCHIVO
												if( !empty( $_FILES['Foto']['name'] ) ){
							
													//AQUI SE CREA EL DIRECTORIO
													$dir_idradi = $raiz.'/' .$nom;
													if(is_dir($dir_idradi)){$bandera=0;}
													else{mkdir($dir_idradi, 0, true);}
												
													//CUADERNO ANTERIOR == CUADERNO SELECCIONADO
													if($cuadernoX == $cuaderno){
													
														$orden_documento_siguente = $orden_documentoX;
									
														$foto = date('ymdhis') . '-' . $_FILES['Foto']['name'];
														$tipo = $_FILES['Foto']['type'];
														$ruta = utf8_decode($dir_idradi.'/'.$foto);
														
														move_uploaded_file ($_FILES['Foto']['tmp_name'],$ruta);
														
														//NOMBRE ARCHIVO
														$ruta_memo_1 = explode("/",$ruta);
														$ruta_memo_2 = trim($ruta_memo_1[3]);
														
														//NUEVO NOMBRE ARCHIVO
														$nuevo_nombre_archivo = $modelo->get_nuevo_nombre($ruta_memo_2,$orden_documento_siguente);
														
														
														//EJEMPLO: 
														//200816114310-3201900683.pdf
														//SEGUN EL EJEMPLO = .pdf
														$nombre_archivo_tipo   = explode(".",$ruta_memo_2);
														
														$nueva_ruta_expediente = "EXPEDIENTE_DIGITAL_2/".$nom."/".date('ymdhis') . '-' .$nuevo_nombre_archivo.".".$nombre_archivo_tipo[1];
														
														$antigua_ruta_expediente = $ruta;
														
														//RENOMBRAMOS EL ARCHIVO
														rename($antigua_ruta_expediente,$nueva_ruta_expediente);
														
														$ruta = $nueva_ruta_expediente;
														
														
													
													}
													
													
													//EL CUADERNO ANTERIOR ES DIFERENTE AL CUADERNO SELECCIONADO
													//ENTONCES, SE DEBE CALCULAR DE NUEVO EL $orden_documento_siguente
													//PARA EL FOLIO YA QUE SE UBICARA EN UN CUADERNO DIFERENTE
													if($cuadernoX != $cuaderno){
													
														//DOCUMENTOS CARGADOS EN expe_digital 
														$cantidad_documentos      = $modelo->get_cantidad_documentos($cuaderno,$idradicado);
														$filadoc                  = $cantidad_documentos->fetch();
														$cantidad_doc             = $filadoc[numero];
														
														//SI TIENE CARGADOS, Y SEGUN EL CUEADERNO SELECCIONADO
														//SE TRAE EL NUMERO SIGUIENTE DE LA COLUMNA orden_documento TABLA expe_digital 
														//PARA CONCATER CON EL NOMBRE DEL ARCHIVO QUE SE ESTA SUBIENDO
														//EJEMPLO: 01CONSTANCIAS.pdf
														if($cantidad_doc >= 1){
													
															$datos_orden_documento    = $modelo->get_orden_documento_siguente($cuaderno,$idradicado);
															$filaod                   = $datos_orden_documento->fetch();
															$orden_documento_siguente = $filaod[orden_documento_siguente];
														
														}
														//SI NO TIENE CARGADOS, SERIA EL PRIMERO,
														//INDEPENDIENTE DEL CUADERNO QUE SE SELECCIONE
														else{
														
															$orden_documento_siguente = 1;
														}
									
														$foto = date('ymdhis') . '-' . $_FILES['Foto']['name'];
														$tipo = $_FILES['Foto']['type'];
														$ruta = utf8_decode($dir_idradi.'/'.$foto);
														
														move_uploaded_file ($_FILES['Foto']['tmp_name'],$ruta);
														
														//NOMBRE ARCHIVO
														$ruta_memo_1 = explode("/",$ruta);
														$ruta_memo_2 = trim($ruta_memo_1[3]);
														
														//NUEVO NOMBRE ARCHIVO
														$nuevo_nombre_archivo = $modelo->get_nuevo_nombre($ruta_memo_2,$orden_documento_siguente);
														
														
														//EJEMPLO: 
														//200816114310-3201900683.pdf
														//SEGUN EL EJEMPLO = .pdf
														$nombre_archivo_tipo   = explode(".",$ruta_memo_2);
														
														$nueva_ruta_expediente = "EXPEDIENTE_DIGITAL_2/".$nom."/".date('ymdhis') . '-' .$nuevo_nombre_archivo.".".$nombre_archivo_tipo[1];
														
														$antigua_ruta_expediente = $ruta;
														
														//RENOMBRAMOS EL ARCHIVO
														rename($antigua_ruta_expediente,$nueva_ruta_expediente);
														
														$ruta = $nueva_ruta_expediente;
														
														
													
													}
													
								
													$no_edita_archivo = 1;
													
												}
												//NO SE SELECCIONO ARCHIVO
												else{
												
													//CUADERNO ANTERIOR == CUADERNO SELECCIONADO
													if($cuadernoX == $cuaderno){
													
														$orden_documento_siguente = $orden_documentoX;
														$ruta                     = $rutaX;
														$tipo                     = $tipoX;
													
													}
													//EL CUADERNO ANTERIOR ES DIFERENTE AL CUADERNO SELECCIONADO
													//ENTONCES, SE DEBE CALCULAR DE NUEVO EL $orden_documento_siguente
													//PARA EL FOLIO YA QUE SE UBICARA EN UN CUADERNO DIFERENTE
													if($cuadernoX != $cuaderno){
													
														//DOCUMENTOS CARGADOS EN expe_digital 
														$cantidad_documentos      = $modelo->get_cantidad_documentos($cuaderno,$idradicado);
														$filadoc                  = $cantidad_documentos->fetch();
														$cantidad_doc             = $filadoc[numero];
														
														//SI TIENE CARGADOS, Y SEGUN EL CUEADERNO SELECCIONADO
														//SE TRAE EL NUMERO SIGUIENTE DE LA COLUMNA orden_documento TABLA expe_digital 
														//PARA CONCATER CON EL NOMBRE DEL ARCHIVO QUE SE ESTA SUBIENDO
														//EJEMPLO: 01CONSTANCIAS.pdf
														if($cantidad_doc >= 1){
													
															$datos_orden_documento    = $modelo->get_orden_documento_siguente($cuaderno,$idradicado);
															$filaod                   = $datos_orden_documento->fetch();
															$orden_documento_siguente = $filaod[orden_documento_siguente];
														
														}
														//SI NO TIENE CARGADOS, SERIA EL PRIMERO,
														//INDEPENDIENTE DEL CUADERNO QUE SE SELECCIONE
														else{
														
															$orden_documento_siguente = 1;
														}
														
														//NOMBRE ARCHIVO
														$ruta_memo_1 = explode("/",$rutaX);
														$ruta_memo_2 = trim($ruta_memo_1[3]);
														
														//NUEVO NOMBRE ARCHIVO
														$nuevo_nombre_archivo = $modelo->get_nuevo_nombre($ruta_memo_2,$orden_documento_siguente);
														
														//EJEMPLO: 
														//200816114310-3201900683.pdf
														//SEGUN EL EJEMPLO = .pdf
														$nombre_archivo_tipo   = explode(".",$ruta_memo_2);
														
														$nueva_ruta_expediente = "EXPEDIENTE_DIGITAL_2/".$nom."/".date('ymdhis') . '-' .$nuevo_nombre_archivo.".".$nombre_archivo_tipo[1];
														
														$antigua_ruta_expediente = $rutaX;
														
														//RENOMBRAMOS EL ARCHIVO
														rename($antigua_ruta_expediente,$nueva_ruta_expediente);
														
														$ruta = $nueva_ruta_expediente;
														
														$tipo = $tipoX;
														
													
													}
													
												
												}
												
												
												
												/*$this->db->exec("INSERT INTO expe_digital (idradicado,fecha,hora,folio_i,folio_f,cuaderno,Foto,tipo,ruta,des,idusuario) 
																 VALUES ('$idradicado','$fecha','$hora','$folio_i','$folio_f','$cuaderno','$foto','$tipo','$ruta','$des','$idusuario')");*/
												
												
												//EDITA CON ARCHIVO SELECCIONADO
												if($no_edita_archivo == 1){
																 
													$this->db->exec("
																		UPDATE expe_digital SET 
																		
							
																			folios              = '$folios',
																			cuaderno            = '$cuaderno',
																			tipo                = '$tipo',
																			ruta                = '$ruta',
																			des                 = '$des',
																			idusuarioedita      = '$idusuario',
																			fechaedita          = '$fecha',
																			horaedita           = '$hora',
																			para_estado         = '$para_estado',
																			idjuzgado           = '$id_juzgadoX',
																			fecha_estado        = '$fecha_estado',
																			ip_equipo_edita     = '$ip_equipo_edita',
																			nombre_equipo_edita = '$nombre_equipo_edita',
																			id_dependencia      = '$dependencia',
																			fecha_creacion      = '$fecha_cre',
																			fecha_de            = '$fecha_de',
																			fecha_a             = '$fecha_a',
																			origen              = '$digitalizadoX',
																			obs                 = '$obs',
																			orden_documento     = '$orden_documento_siguente'
																
																		WHERE id = '$idfolioX' 
																		
																		
																	");
																	
												}
												//NO EDITA NO SE SELECCIONO ARCHIVO
												else{
											
											
													$this->db->exec("
																		UPDATE expe_digital SET 
																		
							
																			folios              = '$folios',
																			cuaderno            = '$cuaderno',
																			tipo                = '$tipo',
																			ruta                = '$ruta',
																			des                 = '$des',
																			idusuarioedita      = '$idusuario',
																			fechaedita          = '$fecha',
																			horaedita           = '$hora',
																			para_estado         = '$para_estado',
																			idjuzgado           = '$id_juzgadoX',
																			fecha_estado        = '$fecha_estado',
																			ip_equipo_edita     = '$ip_equipo_edita',
																			nombre_equipo_edita = '$nombre_equipo_edita',
																			id_dependencia      = '$dependencia',
																			fecha_creacion      = '$fecha_cre',
																			fecha_de            = '$fecha_de',
																			fecha_a             = '$fecha_a',
																			origen              = '$digitalizadoX',
																			obs                 = '$obs',
																			orden_documento     = '$orden_documento_siguente'
																
																		WHERE id = '$idfolioX' 
																		
																		
																	");
											
											
												}
																	
																	
																 
											//}
											
											//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
											//$last_id = $this->db->lastInsertId();
											
											$last_id = $idradiX;
											
											
											//HISTORIAL
											$actuacion = 'EDITAR FOLIO';
											$tablas    = 'expe_digital';
											$tipo      = 'EF';
											$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo,idexpdigi,
											                 ip_equipo_edita,nombre_equipo_edita,id_dependencia,
															 fecha_creacion,fecha_de,fecha_a,origen,obs)
															 VALUES('$last_id','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$ruta','$tipo','$idfolioX',
															 '$ip_equipo_edita','$nombre_equipo_edita','$dependencia',
															 '$fecha_cre','$fecha_de','$fecha_a','$digitalizadoX','$obs')");
											
											
													
										//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
																				
										//SE TERMINA LA TRANSACCION  
										$this->db->commit();
																
										//echo $msg;
										
										
									}//FIN if($error_nombre == 0){
									else{
											
										$error_transaccion = 1;
									}
											
									
									  
						} 
						catch (Exception $e) {
									
							$msg = "ERROR EN PROCESO: ".$e->getMessage();			
						
							
										
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
							
							//echo $msg;
							
							
							
							$error_transaccion   = 1;
							
							
						}
							
										
							
						if($error_transaccion){
								
							//echo $msg;
							
							//SE ADIICONA ESTA PARTE PARA QUE SE QUEDE EN REGISTRAR FOLIO
							//Y SEA POSIBLE ORGANIZAR EL NOMBRE ARCHIVO CON LA INCOSISTENCIA
							if($error_nombre == 1){
							
								$error_nombre = 1;
							
							}
							else{
							
								//PARA QUE EM LA VISTA EXPEDIENTE_DIGITALNO ENTRE
								//CUANDO LOS PROCESOS SON CORRECTOS
								$opcionX = 0;
								
								echo '<script languaje="JavaScript"> 
										
					
										var msg = "'.$msg.'";	
										
										var ruta_borrar = "'.$ruta_borrar.'";	
										
										var idradiX = "'.$idradiX.'";
										var radiX   = "'.$radiX.'";
										var opcionX = "'.$opcionX.'";
										
										
										alert(msg+" - "+ruta_borrar);
										
										location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
										
										
									  </script>';
									  
									  
							}
								  
								 
								
						}
						else{
						
						
					
							
							header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX.'******'.$idfolioX);
		
								
						}
					
					

				
  	}
	
	public function editar_folio_procesoANTERIOR_210421(){
	
		set_time_limit (240000000);
		
		$modelo = new archivoModel();
		
		//DATOS DE EQUIPO NOMBRE Y IP
		$nombre_equipo_edita = gethostbyaddr( $_SERVER['REMOTE_ADDR'] );
		$ip_equipo_edita     = gethostbyname($nombre_equipo_edita);		
		
		//DATOS PARA EL REGISTRO DEL LOG
		/*$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];*/
		
		//$horalog    = $datosfecha[1];
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		//$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario     = $_SESSION['idUsuario'];
		$nombre_user   = $_SESSION['nombre'];
		
		$idradiX       = trim($_POST['idradiX']);
		$radiX         = trim($_POST['radiX']);
		
		$idfolioX      = trim($_POST['idfolioX']);
		
		$id_juzgadoX   = trim($_POST['id_juzgadoX']);
		
		$opcionX       = 2;
		
		$no_edita_archivo = 0;
		
		$digitalizadoX = trim($_POST['digitalizadoX']);
		
		//-----------ARMAR DIRECTORIO RADICADO--------------
		
		//EJ: 17001400300220140017100 ---> 220140017100
		//EJ: 17001400301220140017100 ---> 1220140017100
		
		$valorradicado = $radiX;
		
		$cadena_juzgado;
		$valorradicado_8 = substr($valorradicado, 10, 2);
		$J;
		// Recorremos cada carï¿½cter de la cadena
		for($i=0; $i<strlen($valorradicado_8); $i++){
			
			if($valorradicado_8[0] == 0){
				
				$cadena_juzgado = substr($valorradicado, 11, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 11, 1);
			}
			
			if($valorradicado_8[0] == 1){
				
				$cadena_juzgado = substr($valorradicado, 10, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 10, 2);
			}
			
			
		}
		
		
		//-----------FIN ARMAR DIRECTORIO RADICADO---------
		
		
		//-------------------------------------------------------------------------
		//IDENTIFICAR QUE EL USUARIO EN SESION, PERTENECE 
		//A JUZGADO 1 O 2 DE EJECUCION Y NO A LA OFICINA DE EJECUCION
		//CON EL OBJETO, QUE AL REGISTRAR EL FOLIO NUEVO
		//EL SISTEMA IDENTIFIQUE QUE ESTE REGISTRO Y AUTO
		//SALE PARA ESTADO EL DIA SIGUIENTE 
		$Jid_juzgado = $_SESSION['id_juzgado'];
		
		$para_estado = 0;
		
		if($Jid_juzgado == 15 || $Jid_juzgado == 16){
		
			$para_estado = 1;
			$idjuzgado   = $Jid_juzgado;
		}
		else{
		
			$para_estado = 0;
			$idjuzgado   = 0;
		}
		//-------------------------------------------------------------------------
		
		
		
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE***************
		$campos              = 'usuario';
		$nombrelista         = 'pa_usuario_acciones';
		$idaccion	         = '32';
		$campoordenar        = 'id';
		$datos_DES_1X         = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
		$datos_DES_2X         = $datos_DES_1X->fetch();
		$datos_DES_3X	     = explode("////",$datos_DES_2X[usuario]);
				
		$bandera_DES_2       = 0;
				
		if ( in_array($_SESSION['idUsuario'],$datos_DES_3X,true) ){
				
			$bandera_DES_2 = 1;
		}	
						
		//******************FIN ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE***************
		
		
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y AL CARGAR EL AUTO SE CIERRA LA TAREA AUTOMATICAMENTE***************
		$idaccion	         = '34';
		$campoordenar        = 'id';
		$datos_CERRAR_1      = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
		$datos_CERRAR_2      = $datos_CERRAR_1->fetch();
		$datos_CERRAR_3	     = explode("////",$datos_CERRAR_2[usuario]);
				
		$bandera_CERRAR      = 0;
				
		if ( in_array($_SESSION['idUsuario'],$datos_CERRAR_3,true) ){
				
			$bandera_CERRAR = 1;
		}	

						
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y AL CARGAR EL AUTO SE CIERRA LA TAREA AUTOMATICAMENTE***************
		
		
		
		
		
		/*$iddev_juzgado = $_SESSION['id_juzgado'];
		
		$Didentidad_user = $_SESSION['nomusu'];
		$Dnombre_user    = $_SESSION['nombre'];
		
		$devolucion      = "DEVOLUCION EXTERNA, REALIZADA POR: ".$Didentidad_user." - ".$Dnombre_user;
		
		$idevo           = trim($_POST['idevo']);*/
		
	
		
		//***********************************PARA EL ARCHIVO***************************************
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "EXPEDIENTE_DIGITAL_2";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		//$nom = trim($_SESSION['idUsuario']);
		//$nom = trim($idradi);
		$nom = trim($J."/".$cadena_juzgado);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//AQUI SE CREA EL DIRECTORIO
		//if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		//else{mkdir($raiz.'/'.$nom, 0, true);}
				
		//CUANDO SOLO SE SUBE UN ARCHIVOS
		/*$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		$tamano_archivo = $_FILES['archivo']['size'];*/ 
		
		
		//***********************************FIN PARA EL ARCHIVO***************************************
		
						$cadena_archivos = "";
					
						
						$error_transaccion   = 0; //variable para detectar error
						$msg = " ";
								
						//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
						//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
								
							
								
						try {  
									
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
									
									
									//for($i = 0; $i < count($_POST['idradicado']); $i++){
									
									
									//---------------VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									$error_nombre = 0;
									
									for($i = 0; $i < count($_POST['idradicado']); $i++){
									
									
											$nombre_archivo = $_FILES['Foto']['name'];
											
											
											//LONGITUD ARCHIVO
											$ncaracteresX = $modelo->get_caracteres_archivo($nombre_archivo);
											
											if($ncaracteresX > 38){
											
												$x = strlen($nombre_archivo);
														
												$error_nombre = 1;
												
												$i = count($_POST['idradicado']);
												
												
												echo '<script languaje="JavaScript"> 
									
														var nombre_archivoX     = "'.$nombre_archivo.'";
														
														var caracteres_archivoX = "'.$ncaracteresX.'";
																	
													
														alert("EL NOMBRE DEL ARCHIVO NO DEBE TENER MAS DE 38 CARACTERES: "+nombre_archivoX+" CANTIDAD ACTUAL DE CARACTERES: "+caracteres_archivoX);
																	
																	
														var idradiX     = "'.$idradiX.'";
														var radiX       = "'.$radiX.'";
														var idfolioX    = "'.$idfolioX.'";
														var idusuario   = "'.$idusuario.'";
														var nombre_user = "'.$nombre_user.'";
																	
														location.href="index.php?controller=archivo&action=Editar_Folio&datosexpEF="+idradiX+"******"+radiX+"******"+idfolioX+"******"+idusuario+"******"+nombre_user;
																						
																
													</script>';
											}
											
											
											
											//ESTRUCTURA ARCHIVO
											for($x = 0; $x < strlen($nombre_archivo); $x++) {
											
												//CAPTUTA ASCII CARACTER
												 //caracter = ord(x);
												 
												 //echo "<br>"."CARACTER: ".$nombre_archivo[$x]." ASCII: ".ord($nombre_archivo[$x]);
												 
												 $caracter = ord($nombre_archivo[$x]);
												 
												 if( 
																					
																					 
														($caracter >= 32  && $caracter <= 44)   ||
														($caracter >= 47  && $caracter <= 47)   || 
														($caracter >= 58  && $caracter <= 64)   || 
														($caracter >= 91  && $caracter <= 94)   || 
														($caracter >= 96  && $caracter <= 96)   ||
														($caracter >= 123 && $caracter <= 254)  
																					 
												) {
														
														//echo "CARACTER NO VALIDO EN NOMBRE DE ARCHIVO:".$nombre_archivo[$x]."<br>"."<br>"." SOLO SE PERMITE EL CARACTER RAYA AL MEDIO (-) Y NOMBRES CONFORMADOS POR LETRAS, NUMEROS Y TODO PEGADO";
														
														$x = strlen($nombre_archivo);
														
														$error_nombre = 1;
														
														$i = count($_POST['idradicado']);
														
														$idcaracter = chr($caracter);
														
														
														
														echo '<script languaje="JavaScript"> 
									
																	
																	var nombre_archivoX = "'.$nombre_archivo.'";
																	
																	var idcaracter      = "'.$idcaracter.'";
																	
																	alert("CARACTER NO VALIDO EN NOMBRE DE ARCHIVO: "+nombre_archivoX+" CARACTER: "+idcaracter+" SOLO SE PERMITE EL CARACTER RAYA AL MEDIO (-), RAYA AL PISO (_) Y NOMBRES CONFORMADOS POR LETRAS O NUMEROS Y TODO PEGADO");
																	
																	
																	var idradiX     = "'.$idradiX.'";
																	var radiX       = "'.$radiX.'";
																	var idfolioX    = "'.$idfolioX.'";
																	var idusuario   = "'.$idusuario.'";
																	var nombre_user = "'.$nombre_user.'";
																	
																	location.href="index.php?controller=archivo&action=Editar_Folio&datosexpEF="+idradiX+"******"+radiX+"******"+idfolioX+"******"+idusuario+"******"+nombre_user;
																						
																
															</script>';
														
												
												}
												
												
												
											}
									
									
									
									}
									
									
									
									//---------------FIN VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									
									//REALIZA REGISTRO, NO EXISTE INCONSISTENCIAS EN NOMBRE DE ARCHIVO(S)
									if($error_nombre == 0){
									
									
												$idradicado = trim($_POST['idradicado']);
												$fecha      = $fechalog;
												$hora       = $horalog;
												$folios     = trim($_POST['folios']);
												/*$folio_i  = trim($_POST['folio_i']);
												$folio_f    = trim($_POST['folio_f']);*/
												$cuaderno   = trim($_POST['cuaderno']);
												$des        = utf8_decode(trim($_POST['des']));	
												
												$dependencia = trim($_POST['dependencia']);

												
											//SE DEFINE RANGO DE FECHAS DE CREACION DOCUMENTO
											if($digitalizadoX == 1){
											
												$fecha_de  = trim($_POST['fecha_de']);
												$fecha_a   = trim($_POST['fecha_a']);
												
												$fecha_cre = trim('0000-00-00');
												
											}
										    //SE DEFINE SOLO FECHA DE CREACION DOCUMENTO
											else{
											
												$digitalizadoX = 2;
												
												$fecha_cre = trim($_POST['fecha_cre']);
												
												$fecha_de  = trim('0000-00-00');
												$fecha_a   = trim('0000-00-00');
											}
								
								
											$obs = utf8_decode(trim($_POST['obs']));
												
												
												//DETERMINA QUE EL USUARIO EN SESION PERTENECE
												//ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE
												//$nombrelista = 'pa_usuario_acciones'; $idaccion = '32';
		
												$paraestado = trim($_POST['paraestado']);
												
												$fecha_estado = trim($_POST['fecha_estado']);
												
												if($bandera_DES_2 == 1){
												
												
													$digitalizadoX = 2;
													$fecha_de      = trim('0000-00-00');
													$fecha_a       = trim('0000-00-00');
													$fecha_cre     = trim($fecha_estado);
												
													if($paraestado == 0 || $paraestado == 1){
													
														$para_estado = $paraestado;
													}
													
													if( $paraestado == 1 ){
												
														//PERMITE IDENTIFICAR USUARIO EN SESION, QUE PUEDE CERRAR LAS TAREAS ASIGNADAS A UN PROCESO A DESPACHO
														//AUTOMATICAMENTE, SIN NECESIDAD DE HACERLO EN LA VISTA DE LOS JUZGADOS
														if($bandera_CERRAR == 1){
														
															//CARGAR LOS ID ASOCIOADOS AL RADICADO DE LA TABLA detalle_correspondencia ENVIADOA A DESPACHO
															//PARA QUE LOS PROCESOS ASIGNADOS A UNA TAREA SE APLIQUE A UN MEMORIAL
															//O MEMORIALES SEGUN ESA EL CASO
															$datosMEMOS_2 = $modelo->listar_memoriales_proceso_2($idradiX);
															
															$contmemo = 0;
															while($filamemo_2 = $datosMEMOS_2->fetch()){
															
															
																$ID_MEMOS_2 = $filamemo_2[idactu].",".$ID_MEMOS_2;
																
																$contmemo = $contmemo + 1;
																
															}
															
															//Y LUEGO CANCELO Y AL VOLVERLO A REGISTRAR YA LA VARIABLE $ID_MEMOS_2
															// NO CARGA NADA Y EN LA SQL GENERA INCONSISTENCIA
															if($contmemo >= 1){
														
																$ID_MEMOS_2       = rtrim($ID_MEMOS_2,",");
																
																$idactuX_CERRAR   = "IN(".trim($ID_MEMOS_2).")";//IDSMEMO
																
																$SQL_CERRAR_TAREA = "UPDATE detalle_correspondencia SET
							
							
																						  estadoobs        = 3,
																						  tareacerrada     = 'OK',
																						  fechacerrar      = '$fechalog',
																						  horacerrar       = '$horalog'
																						 
																					 WHERE id ".$idactuX_CERRAR;
																					 
																					 
																
																$this->db->exec($SQL_CERRAR_TAREA);
															
															}
															
															//REINICAR VARIABLE
															//PARA QUE NO COCATENE LOS ID DE TODO EL FOR PRINCIPAL
															unset($ID_MEMOS_2);
															
															$contmemo = 0;
															
															
															
															
														}
												
													
													}
													
													
													//PARA QUE NO CIERRE LA TAREA Y QUEDE EN ESTADO REVISAR
													//YA QUE EN LA VISTA DEL JUEZ LOS IDENTIFICA COMO PROCESOS QUE LE ENTRARON MEMORIALES Y AUN SUS COSTAS NO ESTAN HECHAS
													if( $paraestado == 5 ){
													
														
															//CARGAR LOS ID ASOCIOADOS AL RADICADO DE LA TABLA detalle_correspondencia ENVIADOA A DESPACHO
															//PARA QUE LOS PROCESOS ASIGNADOS A UNA TAREA SE APLIQUE A UN MEMORIAL
															//O MEMORIALES SEGUN ESA EL CASO
															$datosMEMOS_2 = $modelo->listar_memoriales_proceso_2($idradiX);
															
															$contmemo = 0;
															while($filamemo_2 = $datosMEMOS_2->fetch()){
															
															
																$ID_MEMOS_2 = $filamemo_2[idactu].",".$ID_MEMOS_2;
																
																$contmemo = $contmemo + 1;
																
															}
															
															//SE RELIZA ESTA CPREGUNTA YA QUE EL USUARIO YA REALIZO EL PROCESO
															//Y LUEGO CANCELO Y AL VOLVERLO A REGISTRAR YA LA VARIABLE $ID_MEMOS_2
															// NO CARGA NADA Y EN LA SQL GENERA INCONSISTENCIA
															if($contmemo >= 1){
															
																$ID_MEMOS_2       = rtrim($ID_MEMOS_2,",");
																
																$idactuX_CERRAR   = "IN(".trim($ID_MEMOS_2).")";//IDSMEMO
																
																$SQL_CERRAR_TAREA = "UPDATE detalle_correspondencia SET
							
							
																						  estadoobs = 5
																						 
																					 WHERE id ".$idactuX_CERRAR;
																					 
																					 
																
																$this->db->exec($SQL_CERRAR_TAREA);
																
															}
															
															//REINICAR VARIABLE
															//PARA QUE NO COCATENE LOS ID DE TODO EL FOR PRINCIPAL
															unset($ID_MEMOS_2);
															
															$contmemo = 0;
															
														
													}
													
			
													
												}
												else{
												
													$para_estado  = 0;
													$idjuzgado    = 0;
													$fecha_estado = '0000-00-00';
												}
												
												
												
												if( !empty( $_FILES['Foto']['name'] ) ){
							
													//AQUI SE CREA EL DIRECTORIO
													//$dir_idradi = 'uploads/' .$_POST['idradicado'][$i];
													//$dir_idradi = $raiz.'/' .$_POST['idradicado'];
													$dir_idradi = $raiz.'/' .$nom;
													if(is_dir($dir_idradi)){$bandera=0;}
													else{mkdir($dir_idradi, 0, true);}
												
													//$foto = date('ymdhis') . '-' . strtolower($_FILES['Foto']['name'][$i]);
													$foto = date('ymdhis') . '-' . $_FILES['Foto']['name'];
													$tipo = $_FILES['Foto']['type'];
													$ruta = utf8_decode($dir_idradi.'/'.$foto);
													
													//move_uploaded_file ($_FILES['Foto']['tmp_name'][$i], 'uploads/' . $foto);
													//move_uploaded_file ($_FILES['Foto']['tmp_name'], utf8_decode($ruta));
													move_uploaded_file ($_FILES['Foto']['tmp_name'],$ruta);
								
													$no_edita_archivo = 1;
													
												}
												
												/*$this->db->exec("INSERT INTO expe_digital (idradicado,fecha,hora,folio_i,folio_f,cuaderno,Foto,tipo,ruta,des,idusuario) 
																 VALUES ('$idradicado','$fecha','$hora','$folio_i','$folio_f','$cuaderno','$foto','$tipo','$ruta','$des','$idusuario')");*/
												
												
												//EDITA CON ARCHIVO SELECCIONADO
												if($no_edita_archivo == 1){
																 
													$this->db->exec("
																		UPDATE expe_digital SET 
																		
							
																			folios              = '$folios',
																			cuaderno            = '$cuaderno',
																			tipo                = '$tipo',
																			ruta                = '$ruta',
																			des                 = '$des',
																			idusuarioedita      = '$idusuario',
																			fechaedita          = '$fecha',
																			horaedita           = '$hora',
																			para_estado         = '$para_estado',
																			idjuzgado           = '$id_juzgadoX',
																			fecha_estado        = '$fecha_estado',
																			ip_equipo_edita     = '$ip_equipo_edita',
																			nombre_equipo_edita = '$nombre_equipo_edita',
																			id_dependencia      = '$dependencia',
																			fecha_creacion      = '$fecha_cre',
																			fecha_de            = '$fecha_de',
																			fecha_a             = '$fecha_a',
																			origen              = '$digitalizadoX',
																			obs                 = '$obs'
																
																		WHERE id = '$idfolioX' 
																		
																		
																	");
																	
											}
											//NO EDITA NO SE SELECCIONO ARCHIVO
											else{
											
											
												$this->db->exec("
																		UPDATE expe_digital SET 
																		
							
																			folios              = '$folios',
																			cuaderno            = '$cuaderno',
																			des                 = '$des',
																			idusuarioedita      = '$idusuario',
																			fechaedita          = '$fecha',
																			horaedita           = '$hora',
																			para_estado         = '$para_estado',
																			idjuzgado           = '$id_juzgadoX',
																			fecha_estado        = '$fecha_estado',
																			ip_equipo_edita     = '$ip_equipo_edita',
																			nombre_equipo_edita = '$nombre_equipo_edita',
																			id_dependencia      = '$dependencia',
																			fecha_creacion      = '$fecha_cre',
																			fecha_de            = '$fecha_de',
																			fecha_a             = '$fecha_a',
																			origen              = '$digitalizadoX',
																			obs                 = '$obs'
																
																		WHERE id = '$idfolioX' 
																		
																		
																	");
											
											
											}
																	
																	
																 
											//}
											
											//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
											//$last_id = $this->db->lastInsertId();
											
											$last_id = $idradiX;
											
											
											//HISTORIAL
											$actuacion = 'EDITAR FOLIO';
											$tablas    = 'expe_digital';
											$tipo      = 'EF';
											$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo,idexpdigi,
											                 ip_equipo_edita,nombre_equipo_edita,id_dependencia,
															 fecha_creacion,fecha_de,fecha_a,origen,obs)
															 VALUES('$last_id','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$ruta','$tipo','$idfolioX',
															 '$ip_equipo_edita','$nombre_equipo_edita','$dependencia',
															 '$fecha_cre','$fecha_de','$fecha_a','$digitalizadoX','$obs')");
											
											
													
										//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
																				
										//SE TERMINA LA TRANSACCION  
										$this->db->commit();
																
										//echo $msg;
										
										
									}//FIN if($error_nombre == 0){
									else{
											
										$error_transaccion = 1;
									}
											
									
									  
						} 
						catch (Exception $e) {
									
							$msg = "ERROR EN PROCESO: ".$e->getMessage();			
						
							
										
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
							
							//echo $msg;
							
							
							
							$error_transaccion   = 1;
							
							
						}
							
										
							
						if($error_transaccion){
								
							//echo $msg;
							
							//SE ADIICONA ESTA PARTE PARA QUE SE QUEDE EN REGISTRAR FOLIO
							//Y SEA POSIBLE ORGANIZAR EL NOMBRE ARCHIVO CON LA INCOSISTENCIA
							if($error_nombre == 1){
							
								$error_nombre = 1;
							
							}
							else{
							
								//PARA QUE EM LA VISTA EXPEDIENTE_DIGITALNO ENTRE
								//CUANDO LOS PROCESOS SON CORRECTOS
								$opcionX = 0;
								
								echo '<script languaje="JavaScript"> 
										
					
										var msg = "'.$msg.'";	
										
										var ruta_borrar = "'.$ruta_borrar.'";	
										
										var idradiX = "'.$idradiX.'";
										var radiX   = "'.$radiX.'";
										var opcionX = "'.$opcionX.'";
										
										
										alert(msg+" - "+ruta_borrar);
										
										location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
										
										
									  </script>';
									  
									  
							}
								  
								 
								
						}
						else{
						
						
					
							
							header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX.'******'.$idfolioX);
		
								
						}
					
					

				
  	}
	
	public function editar_folio_proceso_ANTERIOR(){
	
		set_time_limit (240000000);
		
		$modelo = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		/*$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];*/
		
		//$horalog    = $datosfecha[1];
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		//$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario     = $_SESSION['idUsuario'];
		
		$idradiX       = trim($_POST['idradiX']);
		$radiX         = trim($_POST['radiX']);
		
		$idfolioX      = trim($_POST['idfolioX']);
		
		$id_juzgadoX   = trim($_POST['id_juzgadoX']);
		
		$opcionX       = 2;
		
		$no_edita_archivo = 0;
		
		
		
		//-----------ARMAR DIRECTORIO RADICADO--------------
		
		//EJ: 17001400300220140017100 ---> 220140017100
		//EJ: 17001400301220140017100 ---> 1220140017100
		
		$valorradicado = $radiX;
		
		$cadena_juzgado;
		$valorradicado_8 = substr($valorradicado, 10, 2);
		$J;
		// Recorremos cada carï¿½cter de la cadena
		for($i=0; $i<strlen($valorradicado_8); $i++){
			
			if($valorradicado_8[0] == 0){
				
				$cadena_juzgado = substr($valorradicado, 11, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 11, 1);
			}
			
			if($valorradicado_8[0] == 1){
				
				$cadena_juzgado = substr($valorradicado, 10, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 10, 2);
			}
			
			
		}
		
		
		//-----------FIN ARMAR DIRECTORIO RADICADO---------
		
		
		//-------------------------------------------------------------------------
		//IDENTIFICAR QUE EL USUARIO EN SESION, PERTENECE 
		//A JUZGADO 1 O 2 DE EJECUCION Y NO A LA OFICINA DE EJECUCION
		//CON EL OBJETO, QUE AL REGISTRAR EL FOLIO NUEVO
		//EL SISTEMA IDENTIFIQUE QUE ESTE REGISTRO Y AUTO
		//SALE PARA ESTADO EL DIA SIGUIENTE 
		$Jid_juzgado = $_SESSION['id_juzgado'];
		
		$para_estado = 0;
		
		if($Jid_juzgado == 15 || $Jid_juzgado == 16){
		
			$para_estado = 1;
			$idjuzgado   = $Jid_juzgado;
		}
		else{
		
			$para_estado = 0;
			$idjuzgado   = 0;
		}
		//-------------------------------------------------------------------------
		
		
		
		//******************ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE***************
		$campos              = 'usuario';
		$nombrelista         = 'pa_usuario_acciones';
		$idaccion	         = '32';
		$campoordenar        = 'id';
		$datos_DES_1X         = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
		$datos_DES_2X         = $datos_DES_1X->fetch();
		$datos_DES_3X	     = explode("////",$datos_DES_2X[usuario]);
				
		$bandera_DES_2       = 0;
				
		if ( in_array($_SESSION['idUsuario'],$datos_DES_3X,true) ){
				
			$bandera_DES_2 = 1;
		}	
						
		//******************FIN ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE***************
		
		
		
		
		
		/*$iddev_juzgado = $_SESSION['id_juzgado'];
		
		$Didentidad_user = $_SESSION['nomusu'];
		$Dnombre_user    = $_SESSION['nombre'];
		
		$devolucion      = "DEVOLUCION EXTERNA, REALIZADA POR: ".$Didentidad_user." - ".$Dnombre_user;
		
		$idevo           = trim($_POST['idevo']);*/
		
	
		
		//***********************************PARA EL ARCHIVO***************************************
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "EXPEDIENTE_DIGITAL_2";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		//$nom = trim($_SESSION['idUsuario']);
		//$nom = trim($idradi);
		$nom = trim($J."/".$cadena_juzgado);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//AQUI SE CREA EL DIRECTORIO
		//if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		//else{mkdir($raiz.'/'.$nom, 0, true);}
				
		//CUANDO SOLO SE SUBE UN ARCHIVOS
		/*$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		$tamano_archivo = $_FILES['archivo']['size'];*/ 
		
		
		//***********************************FIN PARA EL ARCHIVO***************************************
		
						$cadena_archivos = "";
					
						
						$error_transaccion   = 0; //variable para detectar error
						$msg = " ";
								
						//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
						//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
								
							
								
						try {  
									
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
									
									
									//for($i = 0; $i < count($_POST['idradicado']); $i++){
									
										$idradicado = trim($_POST['idradicado']);
										$fecha      = $fechalog;
										$hora       = $horalog;
										$folios     = trim($_POST['folios']);
										/*$folio_i  = trim($_POST['folio_i']);
										$folio_f    = trim($_POST['folio_f']);*/
										$cuaderno   = trim($_POST['cuaderno']);
										$des        = utf8_decode(trim($_POST['des']));	
										
										
										//DETERMINA QUE EL USUARIO EN SESION PERTENECE
										//ID USUARIOS, QUE CARGAN AUTOS AL EXPEDIENTE DIGITAL Y SE IDENTIFICA PARA EL ESTADO DEL DIA SIGUIENTE
										//$nombrelista = 'pa_usuario_acciones'; $idaccion = '32';

										$paraestado = trim($_POST['paraestado']);
										
										$fecha_estado = trim($_POST['fecha_estado']);
										
										if($bandera_DES_2 == 1){
										
											if($paraestado == 0 || $paraestado == 1){
											
												$para_estado = $paraestado;
											}
										}
										else{
										
											$para_estado  = 0;
											$idjuzgado    = 0;
											$fecha_estado = '0000-00-00';
										}
										
										
										
										if( !empty( $_FILES['Foto']['name'] ) ){
					
											//AQUI SE CREA EL DIRECTORIO
											//$dir_idradi = 'uploads/' .$_POST['idradicado'][$i];
											//$dir_idradi = $raiz.'/' .$_POST['idradicado'];
											$dir_idradi = $raiz.'/' .$nom;
											if(is_dir($dir_idradi)){$bandera=0;}
											else{mkdir($dir_idradi, 0, true);}
										
											//$foto = date('ymdhis') . '-' . strtolower($_FILES['Foto']['name'][$i]);
											$foto = date('ymdhis') . '-' . $_FILES['Foto']['name'];
											$tipo = $_FILES['Foto']['type'];
											$ruta = utf8_decode($dir_idradi.'/'.$foto);
											
											//move_uploaded_file ($_FILES['Foto']['tmp_name'][$i], 'uploads/' . $foto);
											//move_uploaded_file ($_FILES['Foto']['tmp_name'], utf8_decode($ruta));
											move_uploaded_file ($_FILES['Foto']['tmp_name'],$ruta);
						
											$no_edita_archivo = 1;
											
										}
										
										/*$this->db->exec("INSERT INTO expe_digital (idradicado,fecha,hora,folio_i,folio_f,cuaderno,Foto,tipo,ruta,des,idusuario) 
														 VALUES ('$idradicado','$fecha','$hora','$folio_i','$folio_f','$cuaderno','$foto','$tipo','$ruta','$des','$idusuario')");*/
										
										
										//EDITA CON ARCHIVO SELECCIONADO
										if($no_edita_archivo == 1){
														 
											$this->db->exec("
																UPDATE expe_digital SET 
																
					
																	folios         = '$folios',
																	cuaderno       = '$cuaderno',
																	tipo           = '$tipo',
																	ruta           = '$ruta',
																	des            = '$des',
																	idusuarioedita = '$idusuario',
																	fechaedita     = '$fecha',
																	horaedita      = '$hora',
																	para_estado    = '$para_estado',
																	idjuzgado      = '$id_juzgadoX',
																	fecha_estado   = '$fecha_estado'
														
																WHERE id = '$idfolioX' 
																
																
															");
															
									}
									//NO EDITA NO SE SELECCIONO ARCHIVO
									else{
									
									
										$this->db->exec("
																UPDATE expe_digital SET 
																
					
																	folios         = '$folios',
																	cuaderno       = '$cuaderno',
																	des            = '$des',
																	idusuarioedita = '$idusuario',
																	fechaedita     = '$fecha',
																	horaedita      = '$hora',
																	para_estado    = '$para_estado',
																	idjuzgado      = '$id_juzgadoX',
																	fecha_estado   = '$fecha_estado'
														
																WHERE id = '$idfolioX' 
																
																
															");
									
									
									}
															
														 	
														 
									//}
									
									//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
									//$last_id = $this->db->lastInsertId();
									
									$last_id = $idradiX;
									
						
									//------------------------------------SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
									
									//AQUI SE CREA EL DIRECTORIO, CON EL ID ASIGNADO A LA DEMANDA
									/*if(is_dir($raiz.'/'.$nom.'/'.$last_id)){$bandera=0;}
									else{mkdir($raiz.'/'.$nom.'/'.$last_id, 0, true);}

									$mensage       = '';//Declaramos una variable mensaje quue almacenara el resultado de las operaciones.
									$archivo_error = 0;
									
									foreach ($_FILES as $key) //Iteramos el arreglo de archivos
									{
										if($key['error'] == UPLOAD_ERR_OK )//Si el archivo se paso correctamente Ccontinuamos 
											{
											
												$nombre_archivo = $key['name'];//Obtenemos el nombre original del archivo
												$temporal       = $key['tmp_name']; //Obtenemos la ruta Original del archivo
												//$Destino        = $ruta.$NombreOriginal;//Creamos una ruta de destino con la variable ruta y el nombre original del archivo	
												//$ruta           = $raiz.'/'.$nom.'/'.$despacho.'/'.$last_id.'/'.$nombre_archivo;
												$ruta           = $raiz.'/'.$nom.'/'.$last_id.'/'.$nombre_archivo;
												
												move_uploaded_file($temporal, utf8_decode($ruta)); //Movemos el archivo temporal a la ruta especificada		
												
											}
									
										if ($key['error']=='') //Si no existio ningun error, retornamos un mensaje por cada archivo subido
											{
												//$mensage .= '-> Archivo <b>'.$NombreOriginal.'</b> Subido correctamente. <br>';
												
												$rutaarchivo = utf8_decode($raiz.'/'.$nom.'/'.$last_id.'/'.$nombre_archivo);
												
												//TABLA dda_archivos, QUEDA LA RUTA DE LOS ARCHIVOS DE LA DEMANDA
												$this->db->exec("INSERT INTO dda_archivos(idda,ruta,tipo,actuacion,fecha,hora)
												VALUES('$last_id','$rutaarchivo','DEX','$devolucion','$fechalog','$horalog')");
												
												$cadena_archivos .= $rutaarchivo."******";
												
											}
										if ($key['error']!='')//Si existio algï¿½n error retornamos un el error por cada archivo.
											{
												$mensage .= '-> No se pudo subir el archivo <b>'.$nombre_archivo.'</b> debido al siguiente Error: n'.$key['error']; 
												
												$archivo_error = 1;
											}
										
									}*/
									
									//echo $mensage;// Regresamos los mensajes generados al cliente
									
									//------------------------------------FIN SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
									
									//HISTORIAL
									$actuacion = 'EDITAR FOLIO';
									$tablas    = 'expe_digital';
									$tipo      = 'EF';
									$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo,idexpdigi)
													 VALUES('$last_id','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$ruta','$tipo','$idfolioX')");
									
									
									
											
											
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
																		
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
														
								//echo $msg;
											
									
									  
						} 
						catch (Exception $e) {
									
							$msg = "ERROR EN PROCESO: ".$e->getMessage();			
						
							//IDENTIFICA QUE OCURIIO UN ERROR,CON ALGUN ARCHIVO QUE SE DESEA CARGAR
							/*if($archivo_error == 1){
							
								$msg = "ERROR EN PROCESO: ".$e->getMessage()." ERROR EN ARCHIVO: ".$mensage;
							}
							else{
							
								$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							}*/
										
										
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
							
							//echo $msg;
							
							
							/*$ruta_borrar = $dir_idradi;
							$files       = array_diff(scandir($ruta_borrar), array('.','..')); 

							foreach ($files as $file) { 
							
								//(is_dir("$ruta_borrar/$file")) ? delTree("$ruta_borrar/$file") : unlink("$ruta_borrar/$file"); 
								
								if( is_dir("$ruta_borrar/$file") ){ 
									
									 unlink("$ruta_borrar/$file"); 
								}
								  
							}*/
										
							$error_transaccion   = 1;
							
							
						}
							
										
							
						if($error_transaccion){
								
							//echo $msg;
							
							
							
							//PARA QUE EM LA VISTA EXPEDIENTE_DIGITALNO ENTRE
							//CUANDO LOS PROCESOS SON CORRECTOS
							$opcionX = 0;
							
							echo '<script languaje="JavaScript"> 
									
				
									var msg = "'.$msg.'";	
									
									var ruta_borrar = "'.$ruta_borrar.'";	
									
									var idradiX = "'.$idradiX.'";
									var radiX   = "'.$radiX.'";
									var opcionX = "'.$opcionX.'";
									
									
									alert(msg+" - "+ruta_borrar);
									
									location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
									
									
								  </script>';
								  
								 
								
						}
						else{
						
						
					
							//SE TERMINA LA TRANSACCION  
							//$this->db->commit();
										
							//$msg = "1-PROCESO SE REALIZA CORRECTAMENTE";
									
							//echo $msg;
							
							/*echo '<script languaje="JavaScript"> 
							
									
									var idradi = "'.$idradiX.'";	
									var radi   = "'.$radiX.'";	
				
									
									alert("1-PROCESO SE REALIZA CORRECTAMENTE: "+idradiX+" "+radiX);
									
									
									//location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradi+"******"+radi;
			
						
								  </script>';*/
								  
							
							//$idradicado_h = trim($_REQUEST['idradi']);
							//$radicado_h   = trim($_REQUEST['radi']);
							
							//header('Location: index.php?idradi='.$idradicado_h.'&radi='.$radicado_h);
							
							header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX.'******'.$idfolioX);
		
								
						}
					
					

				
  	}
	
	public function eliminar_folio_proceso(){
	
		set_time_limit (240000000);
		
		$modelo = new archivoModel();
		
		
		//SE OBTIENEN LOS DATOS
		$idusuario = trim($_SESSION['idUsuario']);
		
		
		//******************ID USUARIOS QUE PUDEN EDITAR Y ELIMINAR FOLIOS DEL EXPEDIENTE DIGITAL, SIN SER LOS USUARIOS QUE CREARON EL REGISTRO***************
	
		$campos              = 'usuario';
		$nombrelista         = 'pa_usuario_acciones';
		$idaccion	         = '31';
		$campoordenar        = 'id';
		$datosusuarioEXPDIGI = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
		$usuariosEXPDIGI1    = $datosusuarioEXPDIGI->fetch();
		$usuariosaEXPDIGI2	 = explode("////",$usuariosEXPDIGI1[usuario]);
			
		$banderaEXPDIGI      = 0;
			
		if ( in_array($idusuario,$usuariosaEXPDIGI2,true) ){
			
			$banderaEXPDIGI = 1;
		}	
			
		//******************FIN ID USUARIOS QUE PUDEN EDITAR Y ELIMINAR DOLIOS DEL EXPEDIENTE DIGITAL, SIN SER LOS USUARIOS QUE CREARON EL REGISTRO***************
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		/*$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];*/
		
		//$horalog    = $datosfecha[1];
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		//$tipolog      = 1;
		
		
		/*$idradiX       = trim($_POST['idradiX']);
		$radiX         = trim($_POST['radiX']);
		
		$idfolioX      = trim($_POST['idfolioX']);*/
		
		$opcionX       = 3;
		
		
		$datosexpELF  = explode("******",trim($_GET['datosexpELF']));
		
		$idradiX       = trim($datosexpELF[0]);
		$radiX         = trim($datosexpELF[1]);
		$idfolioX      = trim($datosexpELF[2]);
		
		
		//ID USUARIO Y NOMBRE, QUE CREO EL REGISTRO
		//PARA VALIDAR AL MOMENTO DE EDITAR
		//O ELIMINAR UN REGISTRO
		//DEBE SER ESTE MISMO USUARIO
		$id_usuario = trim($datosexpELF[3]);
		$n_usuario  = trim($datosexpELF[4]);
		
		//VARIABLE NECESAIA PARA ORDENAR DE NUEVO EL CUADERNO
		//DEL CUAL SE ELIMINA EL FOLIO
		$cuadernoX = trim($datosexpELF[5]);
		
		//NOTA:
		//SE DA USODE LA VARIABLE $opcion2X, YA QUE EXISTE EN EL CODIGO UN header
		//AL REALIZAR EL PROCESO OK
		
		//ID USUARIOS QUE PUDEN EDITAR Y ELIMINAR FOLIOS DEL EXPEDIENTE DIGITAL, SIN SER LOS USUARIOS QUE CREARON EL REGISTRO
		if($banderaEXPDIGI == 1){
		
			$banderaEXPDIGI = 1;
			
			$opcion2X = 1;
		}
		else{
		
			//NO ES EL MISMO USUARIO Y NO PERMITE LA EDICION DEL REGISTRO
			if($id_usuario != $idusuario){
			
			
				//PARA QUE EM LA VISTA EXPEDIENTE_DIGITALNO ENTRE
				//CUANDO LOS PROCESOS SON CORRECTOS
				$opcion2X = 0;
				$msg      = "NO ES POSIBLE REALIZAR LA ELIMINACION, EL USUARIO EN SESION NO CORRESPONDE AL USUARIO QUE CREO EL REGISTRO,  ID USUARIO:".$id_usuario." NOMBRE:".$n_usuario;					
				
				echo '<script languaje="JavaScript"> 
											
						
							var msg = "'.$msg.'";	
											
							var idradiX = "'.$idradiX.'";
							var radiX   = "'.$radiX.'";
							var opcionX = "'.$opcion2X.'";
											
											
							alert(msg);
											
							location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
											
											
					  </script>';
			
			}
			else{
			
				$opcion2X = 1;
			}
			
		
		}
		
		
		/*$iddev_juzgado = $_SESSION['id_juzgado'];
		
		$Didentidad_user = $_SESSION['nomusu'];
		$Dnombre_user    = $_SESSION['nombre'];
		
		
		$devolucion      = "DEVOLUCION EXTERNA, REALIZADA POR: ".$Didentidad_user." - ".$Dnombre_user;
		
		$idevo           = trim($_POST['idevo']);*/
		
		
		
		if($opcion2X == 1){
		
		//***********************************PARA EL ARCHIVO***************************************
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "EXPEDIENTE_DIGITAL_2";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		//$nom = trim($_SESSION['idUsuario']);
		$nom = trim($idradi);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//AQUI SE CREA EL DIRECTORIO
		//if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		//else{mkdir($raiz.'/'.$nom, 0, true);}
				
		//CUANDO SOLO SE SUBE UN ARCHIVOS
		/*$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		$tamano_archivo = $_FILES['archivo']['size'];*/ 
		
		
		//***********************************FIN PARA EL ARCHIVO***************************************
		
						$cadena_archivos = "";
					
						
						$error_transaccion   = 0; //variable para detectar error
						$msg = " ";
								
						//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
						//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
								
							
								
						try {  
									
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
									
									
									
														 
										$this->db->exec("
															UPDATE expe_digital SET 
															

																idusuarioedita = '$idusuario',
																fechaedita     = '$fechalog',
																horaedita      = '$horalog',
																estado         = 3
													
															WHERE id = '$idfolioX' 
															
															
														");
															
														
									
									//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
									//$last_id = $this->db->lastInsertId();
									
									$last_id = $idradiX;
									
						
									//------------------------------------SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
									
									//AQUI SE CREA EL DIRECTORIO, CON EL ID ASIGNADO A LA DEMANDA
									/*if(is_dir($raiz.'/'.$nom.'/'.$last_id)){$bandera=0;}
									else{mkdir($raiz.'/'.$nom.'/'.$last_id, 0, true);}

									$mensage       = '';//Declaramos una variable mensaje quue almacenara el resultado de las operaciones.
									$archivo_error = 0;
									
									foreach ($_FILES as $key) //Iteramos el arreglo de archivos
									{
										if($key['error'] == UPLOAD_ERR_OK )//Si el archivo se paso correctamente Ccontinuamos 
											{
											
												$nombre_archivo = $key['name'];//Obtenemos el nombre original del archivo
												$temporal       = $key['tmp_name']; //Obtenemos la ruta Original del archivo
												//$Destino        = $ruta.$NombreOriginal;//Creamos una ruta de destino con la variable ruta y el nombre original del archivo	
												//$ruta           = $raiz.'/'.$nom.'/'.$despacho.'/'.$last_id.'/'.$nombre_archivo;
												$ruta           = $raiz.'/'.$nom.'/'.$last_id.'/'.$nombre_archivo;
												
												move_uploaded_file($temporal, utf8_decode($ruta)); //Movemos el archivo temporal a la ruta especificada		
												
											}
									
										if ($key['error']=='') //Si no existio ningun error, retornamos un mensaje por cada archivo subido
											{
												//$mensage .= '-> Archivo <b>'.$NombreOriginal.'</b> Subido correctamente. <br>';
												
												$rutaarchivo = utf8_decode($raiz.'/'.$nom.'/'.$last_id.'/'.$nombre_archivo);
												
												//TABLA dda_archivos, QUEDA LA RUTA DE LOS ARCHIVOS DE LA DEMANDA
												$this->db->exec("INSERT INTO dda_archivos(idda,ruta,tipo,actuacion,fecha,hora)
												VALUES('$last_id','$rutaarchivo','DEX','$devolucion','$fechalog','$horalog')");
												
												$cadena_archivos .= $rutaarchivo."******";
												
											}
										if ($key['error']!='')//Si existio algï¿½n error retornamos un el error por cada archivo.
											{
												$mensage .= '-> No se pudo subir el archivo <b>'.$nombre_archivo.'</b> debido al siguiente Error: n'.$key['error']; 
												
												$archivo_error = 1;
											}
										
									}*/
									
									//echo $mensage;// Regresamos los mensajes generados al cliente
									
									//------------------------------------FIN SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
									
									
									//HISTORIAL
									$actuacion = 'ELIMINAR FOLIO';
									$tablas    = 'expe_digital';
									$tipo      = 'ELF';
									$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo,idexpdigi)
													 VALUES('$last_id','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$ruta','$tipo','$idfolioX')");
									
									
									
											
											
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
																		
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
														

								//echo $msg;
											
									
									  
						} 
						catch (Exception $e) {
									
							$msg = "ERROR EN PROCESO: ".$e->getMessage();			
						
							//IDENTIFICA QUE OCURIIO UN ERROR,CON ALGUN ARCHIVO QUE SE DESEA CARGAR
							/*if($archivo_error == 1){
							
								$msg = "ERROR EN PROCESO: ".$e->getMessage()." ERROR EN ARCHIVO: ".$mensage;
							}
							else{
							
								$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							}*/
										
										
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
							
							//echo $msg;
							
							
							/*$ruta_borrar = $dir_idradi;
							$files       = array_diff(scandir($ruta_borrar), array('.','..')); 

							foreach ($files as $file) { 
							
								//(is_dir("$ruta_borrar/$file")) ? delTree("$ruta_borrar/$file") : unlink("$ruta_borrar/$file"); 
								
								if( is_dir("$ruta_borrar/$file") ){ 
									
									 unlink("$ruta_borrar/$file"); 
								}
								  
							}*/
										
							$error_transaccion   = 1;
							
							
						}
							
										
							
						if($error_transaccion){
								
							//echo $msg;
							
							
							
							//PARA QUE EM LA VISTA EXPEDIENTE_DIGITALNO ENTRE
							//CUANDO LOS PROCESOS SON CORRECTOS
							$opcionX = 0;
							
							echo '<script languaje="JavaScript"> 
									
				
									var msg = "'.$msg.'";	
									
									
									
									var idradiX = "'.$idradiX.'";
									var radiX   = "'.$radiX.'";
									var opcionX = "'.$opcionX.'";
									
									
									alert(msg);
									
									location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
									
									
								  </script>';
								  
								 
								
						}
						else{
						
						
							//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
							
							
								//RENOMBRAR TODOS LOS ARCHIVOS 
								//DEL CUADERNO QUE SE ELIMINA EL FOLIO
														
								$renombrar_cuaderno = $modelo->get_renombrar_eliminar($idradiX,$cuadernoX);
								
								$renombrar_cuaderno_1 = explode("******",$renombrar_cuaderno);
								$renombrar_cuaderno_2 = $renombrar_cuaderno_1[0];
								$renombrar_cuaderno_3 = $renombrar_cuaderno_1[1];
								
								/*echo '<script languaje="JavaScript"> 
										
											var renombrar_cuaderno = "'.$renombrar_cuaderno.'";	
											alert(renombrar_cuaderno);
											
									</script>';*/
								
								//SE PRESENTO UN ERROR
								if($renombrar_cuaderno_2 == 1){
															
									
									//$msg = "2.ERC ERROR AL RENOMBRAR CUADERNO";
									$msg = $renombrar_cuaderno_3;
									
									//PARA QUE EM LA VISTA EXPEDIENTE_DIGITALNO ENTRE
									//CUANDO LOS PROCESOS SON CORRECTOS
									$opcionX = 0;
									
									echo '<script languaje="JavaScript"> 
											
						
											var msg = "'.$msg.'";	
											
											var idradiX = "'.$idradiX.'";
											var radiX   = "'.$radiX.'";
											var opcionX = "'.$opcionX.'";
											
											alert(msg);
											
											location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
											
											
										  </script>';
									
								}
								else{
						
									
									header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX.'******'.$idfolioX);
									
									
								}
							
							
							
							
							//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
						
					
							
							
							//header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX.'******'.$idfolioX);
		
								
						}
					
		
		}
		
				
  	}
	
	public function eliminar_folio_procesoANTERIOR_20210507(){
	
		set_time_limit (240000000);
		
		$modelo = new archivoModel();
		
		
		//SE OBTIENEN LOS DATOS
		$idusuario = trim($_SESSION['idUsuario']);
		
		
		//******************ID USUARIOS QUE PUDEN EDITAR Y ELIMINAR FOLIOS DEL EXPEDIENTE DIGITAL, SIN SER LOS USUARIOS QUE CREARON EL REGISTRO***************
	
		$campos              = 'usuario';
		$nombrelista         = 'pa_usuario_acciones';
		$idaccion	         = '31';
		$campoordenar        = 'id';
		$datosusuarioEXPDIGI = $modelo->get_lista_usuario_acciones($campos,$nombrelista,$idaccion,$campoordenar);
		$usuariosEXPDIGI1    = $datosusuarioEXPDIGI->fetch();
		$usuariosaEXPDIGI2	 = explode("////",$usuariosEXPDIGI1[usuario]);
			
		$banderaEXPDIGI      = 0;
			
		if ( in_array($idusuario,$usuariosaEXPDIGI2,true) ){
			
			$banderaEXPDIGI = 1;
		}	
			
		//******************FIN ID USUARIOS QUE PUDEN EDITAR Y ELIMINAR DOLIOS DEL EXPEDIENTE DIGITAL, SIN SER LOS USUARIOS QUE CREARON EL REGISTRO***************
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		/*$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];*/
		
		//$horalog    = $datosfecha[1];
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		//$tipolog      = 1;
		
		
		/*$idradiX       = trim($_POST['idradiX']);
		$radiX         = trim($_POST['radiX']);
		
		$idfolioX      = trim($_POST['idfolioX']);*/
		
		$opcionX       = 3;
		
		
		$datosexpELF  = explode("******",trim($_GET['datosexpELF']));
		
		$idradiX       = trim($datosexpELF[0]);
		$radiX         = trim($datosexpELF[1]);
		$idfolioX      = trim($datosexpELF[2]);
		
		
		//ID USUARIO Y NOMBRE, QUE CREO EL REGISTRO
		//PARA VALIDAR AL MOMENTO DE EDITAR
		//O ELIMINAR UN REGISTRO
		//DEBE SER ESTE MISMO USUARIO
		$id_usuario = trim($datosexpELF[3]);
		$n_usuario  = trim($datosexpELF[4]);
		
		
		
		//NOTA:
		//SE DA USODE LA VARIABLE $opcion2X, YA QUE EXISTE EN EL CODIGO UN header
		//AL REALIZAR EL PROCESO OK
		
		//ID USUARIOS QUE PUDEN EDITAR Y ELIMINAR FOLIOS DEL EXPEDIENTE DIGITAL, SIN SER LOS USUARIOS QUE CREARON EL REGISTRO
		if($banderaEXPDIGI == 1){
		
			$banderaEXPDIGI = 1;
			
			$opcion2X = 1;
		}
		else{
		
			//NO ES EL MISMO USUARIO Y NO PERMITE LA EDICION DEL REGISTRO
			if($id_usuario != $idusuario){
			
			
				//PARA QUE EM LA VISTA EXPEDIENTE_DIGITALNO ENTRE
				//CUANDO LOS PROCESOS SON CORRECTOS
				$opcion2X = 0;
				$msg      = "NO ES POSIBLE REALIZAR LA ELIMINACION, EL USUARIO EN SESION NO CORRESPONDE AL USUARIO QUE CREO EL REGISTRO,  ID USUARIO:".$id_usuario." NOMBRE:".$n_usuario;					
				
				echo '<script languaje="JavaScript"> 
											
						
							var msg = "'.$msg.'";	
											
							var idradiX = "'.$idradiX.'";
							var radiX   = "'.$radiX.'";
							var opcionX = "'.$opcion2X.'";
											
											
							alert(msg);
											
							location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
											
											
					  </script>';
			
			}
			else{
			
				$opcion2X = 1;
			}
			
		
		}
		
		
		/*$iddev_juzgado = $_SESSION['id_juzgado'];
		
		$Didentidad_user = $_SESSION['nomusu'];
		$Dnombre_user    = $_SESSION['nombre'];
		
		
		$devolucion      = "DEVOLUCION EXTERNA, REALIZADA POR: ".$Didentidad_user." - ".$Dnombre_user;
		
		$idevo           = trim($_POST['idevo']);*/
		
		
		
		if($opcion2X == 1){
		
		//***********************************PARA EL ARCHIVO***************************************
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "EXPEDIENTE_DIGITAL_2";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		//$nom = trim($_SESSION['idUsuario']);
		$nom = trim($idradi);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//AQUI SE CREA EL DIRECTORIO
		//if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		//else{mkdir($raiz.'/'.$nom, 0, true);}
				
		//CUANDO SOLO SE SUBE UN ARCHIVOS
		/*$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		$tamano_archivo = $_FILES['archivo']['size'];*/ 
		
		
		//***********************************FIN PARA EL ARCHIVO***************************************
		
						$cadena_archivos = "";
					
						
						$error_transaccion   = 0; //variable para detectar error
						$msg = " ";
								
						//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
						//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
								
							
								
						try {  
									
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
									
									
									
														 
										$this->db->exec("
															UPDATE expe_digital SET 
															

																idusuarioedita = '$idusuario',
																fechaedita     = '$fechalog',
																horaedita      = '$horalog',
																estado         = 3
													
															WHERE id = '$idfolioX' 
															
															
														");
															
														
									
									//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
									//$last_id = $this->db->lastInsertId();
									
									$last_id = $idradiX;
									
						
									//------------------------------------SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
									
									//AQUI SE CREA EL DIRECTORIO, CON EL ID ASIGNADO A LA DEMANDA
									/*if(is_dir($raiz.'/'.$nom.'/'.$last_id)){$bandera=0;}
									else{mkdir($raiz.'/'.$nom.'/'.$last_id, 0, true);}

									$mensage       = '';//Declaramos una variable mensaje quue almacenara el resultado de las operaciones.
									$archivo_error = 0;
									
									foreach ($_FILES as $key) //Iteramos el arreglo de archivos
									{
										if($key['error'] == UPLOAD_ERR_OK )//Si el archivo se paso correctamente Ccontinuamos 
											{
											
												$nombre_archivo = $key['name'];//Obtenemos el nombre original del archivo
												$temporal       = $key['tmp_name']; //Obtenemos la ruta Original del archivo
												//$Destino        = $ruta.$NombreOriginal;//Creamos una ruta de destino con la variable ruta y el nombre original del archivo	
												//$ruta           = $raiz.'/'.$nom.'/'.$despacho.'/'.$last_id.'/'.$nombre_archivo;
												$ruta           = $raiz.'/'.$nom.'/'.$last_id.'/'.$nombre_archivo;
												
												move_uploaded_file($temporal, utf8_decode($ruta)); //Movemos el archivo temporal a la ruta especificada		
												
											}
									
										if ($key['error']=='') //Si no existio ningun error, retornamos un mensaje por cada archivo subido
											{
												//$mensage .= '-> Archivo <b>'.$NombreOriginal.'</b> Subido correctamente. <br>';
												
												$rutaarchivo = utf8_decode($raiz.'/'.$nom.'/'.$last_id.'/'.$nombre_archivo);
												
												//TABLA dda_archivos, QUEDA LA RUTA DE LOS ARCHIVOS DE LA DEMANDA
												$this->db->exec("INSERT INTO dda_archivos(idda,ruta,tipo,actuacion,fecha,hora)
												VALUES('$last_id','$rutaarchivo','DEX','$devolucion','$fechalog','$horalog')");
												
												$cadena_archivos .= $rutaarchivo."******";
												
											}
										if ($key['error']!='')//Si existio algï¿½n error retornamos un el error por cada archivo.
											{
												$mensage .= '-> No se pudo subir el archivo <b>'.$nombre_archivo.'</b> debido al siguiente Error: n'.$key['error']; 
												
												$archivo_error = 1;
											}
										
									}*/
									
									//echo $mensage;// Regresamos los mensajes generados al cliente
									
									//------------------------------------FIN SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
									
									
									//HISTORIAL
									$actuacion = 'ELIMINAR FOLIO';
									$tablas    = 'expe_digital';
									$tipo      = 'ELF';
									$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo,idexpdigi)
													 VALUES('$last_id','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$ruta','$tipo','$idfolioX')");
									
									
									
											
											
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
																		
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
														

								//echo $msg;
											
									
									  
						} 
						catch (Exception $e) {
									
							$msg = "ERROR EN PROCESO: ".$e->getMessage();			
						
							//IDENTIFICA QUE OCURIIO UN ERROR,CON ALGUN ARCHIVO QUE SE DESEA CARGAR
							/*if($archivo_error == 1){
							
								$msg = "ERROR EN PROCESO: ".$e->getMessage()." ERROR EN ARCHIVO: ".$mensage;
							}
							else{
							
								$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							}*/
										
										
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
							
							//echo $msg;
							
							
							/*$ruta_borrar = $dir_idradi;
							$files       = array_diff(scandir($ruta_borrar), array('.','..')); 

							foreach ($files as $file) { 
							
								//(is_dir("$ruta_borrar/$file")) ? delTree("$ruta_borrar/$file") : unlink("$ruta_borrar/$file"); 
								
								if( is_dir("$ruta_borrar/$file") ){ 
									
									 unlink("$ruta_borrar/$file"); 
								}
								  
							}*/
										
							$error_transaccion   = 1;
							
							
						}
							
										
							
						if($error_transaccion){
								
							//echo $msg;
							
							
							
							//PARA QUE EM LA VISTA EXPEDIENTE_DIGITALNO ENTRE
							//CUANDO LOS PROCESOS SON CORRECTOS
							$opcionX = 0;
							
							echo '<script languaje="JavaScript"> 
									
				
									var msg = "'.$msg.'";	
									
									
									
									var idradiX = "'.$idradiX.'";
									var radiX   = "'.$radiX.'";
									var opcionX = "'.$opcionX.'";
									
									
									alert(msg);
									
									location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
									
									
								  </script>';
								  
								 
								
						}
						else{
						
						
					
							//SE TERMINA LA TRANSACCION  
							//$this->db->commit();
										
							//$msg = "1-PROCESO SE REALIZA CORRECTAMENTE";
									
							//echo $msg;
							
							/*echo '<script languaje="JavaScript"> 
							
									
									var idradi = "'.$idradiX.'";	
									var radi   = "'.$radiX.'";	
				
									
									alert("1-PROCESO SE REALIZA CORRECTAMENTE: "+idradiX+" "+radiX);
									
									
									//location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradi+"******"+radi;
			
						
								  </script>';*/
								  
							
							//$idradicado_h = trim($_REQUEST['idradi']);
							//$radicado_h   = trim($_REQUEST['radi']);
							
							//header('Location: index.php?idradi='.$idradicado_h.'&radi='.$radicado_h);
							
							header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX.'******'.$idfolioX);
		
								
						}
					
		
		}
		
				
  	}
	
	//********************************************************************************************
	
	//PROCESOS REPARTO A DESPACHO VIRTUAL, 24 DE JUNIO 2020
	
	//********************************************************************************************
	
	public function get_despacho($Jid_juzgado){
	
		$listar     = $this->db->prepare("SELECT * FROM pa_juzgado WHERE id = '$Jid_juzgado'");
	
  		$listar->execute();

  		return $listar;
	
	}
	
	
	public function listar_procesos_despacho($Jid_juzgado_4){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$fecha_actual = $modelo->get_fecha_actual_amd();
			
			
			$idusuario     = $_SESSION['idUsuario'];
			
			
			$listar = $this->db->prepare("
			
										    SELECT 
											
											dc.id AS idactu,ubi.id,ubi.radicado,dc.fecha,ubi.idjuzgado_reparto,dc.observacion,
											t2.nombre AS solicitud,t1.ruta_local,dc.id_memorial,
											dc.idestadorevisojuz,dc.idrevisojuz2,dc.fecharevisado,dc.horarevisado,t3.empleado,
											dc.id_user_asignada,dc.fecha_obs_i,dc.fecha_obs_f,dc.juzobsextra,dc.estadoobs,
											dc.fecha_obs_i,dc.fecha_obs_f,dc.tareacerrada,dc.fechacerrar,dc.horacerrar,ubi.digitalizado,
											dc.desde_reparto,ubi.fechasalida
											
										    FROM ((((
											
											detalle_correspondencia dc 
												  
											INNER JOIN ubicacion_expediente ubi ON dc.idcorrespondencia = ubi.id)
										    LEFT  JOIN correspondencia       t1 ON dc.id_memorial       = t1.id)
										    LEFT  JOIN pa_solicitud          t2 ON t1.idsolicitud       = t2.id)
											LEFT  JOIN pa_usuario            t3 ON dc.idrevisojuz2      = t3.id)
												  
											WHERE dc.id >= 1 
											AND ubi.idjuzgado_reparto = '$Jid_juzgado_4'
											
											AND (dc.estadoobs != 3 AND dc.estadoobs != 4)
											
											/*AND (DATE(dc.fecha) >= '$fecha_actual' AND DATE(dc.fecha) <= '$fecha_actual')*/
											
										    AND ((dc.a_despacho = 1)
											
											/*AND dc.id_memorial = dc.id_memorial*/
											
											/*AND (ubi.fechasalida >= '$fecha_actual' AND ubi.fechasalida <= '$fecha_actual')*/
											
											OR (/*dc.a_despacho IS NULL AND*/ dc.observacion LIKE '%Proceso con liquidacion revisada, pendiente de pasar a Despacho.%'))
										    
											AND dc.revisasecretaria = 1
											
											GROUP BY ubi.id
											
											ORDER BY dc.fecha DESC,ubi.radicado"
											
										);
			
			
											
											
			/*$SQL = "SELECT ubi.id,ubi.radicado,dc.fecha,ubi.idjuzgado_reparto,dc.observacion,t2.nombre AS solicitud
										    FROM (((
											
											detalle_correspondencia dc 
												  
											INNER JOIN ubicacion_expediente ubi ON dc.idcorrespondencia = ubi.id)
										    LEFT JOIN correspondencia t1 ON dc.id_memorial = t1.id)
										    LEFT JOIN pa_solicitud t2 ON t1.idsolicitud = t2.id)
												  
											WHERE dc.id >= 1 
											AND ubi.idjuzgado_reparto = '$Jid_juzgado_4'
											AND (DATE(dc.fecha) >= '$fecha_actual' AND DATE(dc.fecha) <= '$fecha_actual')
										    AND ((dc.a_despacho = 1)
											OR ( dc.observacion LIKE '%Proceso con liquidacion revisada, pendiente de pasar a Despacho.%'))
										    GROUP BY ubi.id
											ORDER BY ubi.radicado";	*/
		
			//echo $SQL;									

  			$listar->execute();

  			return $listar;
	
  	}
	public function listar_procesos_despacho_filtro($Jid_juzgado_4){
	
	
			set_time_limit (240000000);
	
			$idusuario  = $_SESSION['idUsuario'];
			
			
		
			$filtrox;
			
			$filtrof;
			$filtrof_2;
			$filtrof_3;
			
			$filtro1;
			$filtro2;
			$filtro3;
			$filtro4;
			
			
		
			$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			$fechadad  = trim($_GET['dato_3']);
			$fechahad  = trim($_GET['dato_4']);
			
			
			$datox1    = trim($_GET['datox1']);
			$datox2    = trim($_GET['datox2']);
			$datox3    = trim($_GET['datox3']);
			$datox4    = trim($_GET['datox4']);
			
			
			
			if ( !empty($fechad) && !empty($fechah) ) {
			
				
				
				//$filtrof   = " AND (DATE(dc.fecha) >= '$fechad' AND DATE(dc.fecha) <= '$fechah')";
				
				//$filtrof_2 = "AND (ubi.fechasalida >= '$fechad' AND ubi.fechasalida <= '$fechah')";
				
				//SE DEJA ESTE FILTRO PARA QUE TRAIGA LA INFORMACION QUE CORRESPONDA A LA CONSULTA
				//YA QUE EN ALGUNOS CASOS LA fechasalida YA ES NULL Y CON EL AND NO CRUZA LA INFORMACION
				$filtrof   = " AND ( (DATE(dc.fecha) >= '$fechad' AND DATE(dc.fecha) <= '$fechah') 
				               OR (ubi.fechasalida >= '$fechad' AND ubi.fechasalida <= '$fechah'))";

				
				//$filtrof = " AND ( t1.fecha >= '$fechad' AND t1.fecha <= '$fechah') ";
				
			
			}
			
			if ( !empty($fechadad) && !empty($fechahad) ) {
			
				
				
				
				$filtrof_3 = " AND ( ubi.fechasalida >= '$fechadad' AND ubi.fechasalida <= '$fechahad') ";
				
			
			}
			
			/*if ( !empty($datox1) ) {
			
				
				
				$filtro1 = " AND t1.id = '$datox1' ";
			
			}*/
			
			if ( !empty($datox2) ) {
			
				
				//CAMBIO EL 1 DE SEPTIEMBRE 2020
				
				//$filtro2 = " AND ubi.radicado = '$datox2' ";
				
				$filtro2 = " AND ubi.radicado LIKE '%$datox2%' ";
			
			}
			
			if ( !empty($datox3) ) {
			
				
				
				$filtro3 = " AND dc.id_user_asignada = '$datox3' ";
			
			}
			
			//EN PROCESO
			//if ( $datox4 == 'NULL' ) {
			if ( $datox4 == '0' ) {
			
				//$filtro4 = " AND dc.estadoobs IS NULL ";
				
				$filtro4 = " AND dc.estadoobs = '$datox4' ";
			}
			else{
			
				if( !empty($datox4) ) {
			
				
				
					$filtro4 = " AND dc.estadoobs = '$datox4' ";
					
				}
			
			}
			
		
			
			
			$filtrox = $filtro2." ".$filtro3." ".$filtro4." ".$filtrof." ".$filtrof_2." ".$filtrof_3;
		
			//LIMIT 30
			
			//SI LAS TAREAS ESTAN EN PROCESO, ASIGNADAS O PARA REVISAR
			//SE AGRUPA POR GROUP BY ubi.id
			if ( $datox4 == '0' || $datox4 == 2 || $datox4 == 5) {
			
			$listar = $this->db->prepare("
			
										    SELECT 
											
											dc.id AS idactu,ubi.id,ubi.radicado,dc.fecha,ubi.idjuzgado_reparto,dc.observacion,
											t2.nombre AS solicitud,t1.ruta_local,dc.id_memorial,
											dc.idestadorevisojuz,dc.idrevisojuz2,dc.fecharevisado,dc.horarevisado,t3.empleado,
											dc.id_user_asignada,dc.fecha_obs_i,dc.fecha_obs_f,dc.juzobsextra,dc.estadoobs,
											dc.fecha_obs_i,dc.fecha_obs_f,dc.tareacerrada,dc.fechacerrar,dc.horacerrar,ubi.digitalizado,
											dc.desde_reparto,ubi.fechasalida
											
										    FROM ((((
											
											detalle_correspondencia dc 
												  
											INNER JOIN ubicacion_expediente ubi ON dc.idcorrespondencia = ubi.id)
										    LEFT  JOIN correspondencia       t1 ON dc.id_memorial       = t1.id)
										    LEFT  JOIN pa_solicitud          t2 ON t1.idsolicitud       = t2.id)
											LEFT  JOIN pa_usuario            t3 ON dc.idrevisojuz2      = t3.id)
												  
											WHERE dc.id >= '1'" .$filtrox. "
											AND ubi.idjuzgado_reparto = '$Jid_juzgado_4'
											
											/*AND dc.estadoobs != 3*/
											
										    AND ((dc.a_despacho = 1)
											/*AND dc.id_memorial = dc.id_memorial*/
											
											OR (dc.observacion LIKE '%Proceso con liquidacion revisada, pendiente de pasar a Despacho.%'))
										    
											AND dc.revisasecretaria = 1
											
											GROUP BY ubi.id
											
											ORDER BY dc.fecha DESC,ubi.radicado"
											
										);
			
			
			
												
			
			
  			$listar->execute();
			
			}
			
			//SI LAS TAREAS ESTAN CANCELADAS O EN DEVOLUCION
			//NO SE AGRUPA POR GROUP BY ubi.id, YA QQUE UN PROCESO
			//PUEDE TENER VARIAS TAREAS CERRADAS O DEVUELTAS COMO UN HISTORIAL
			if ( $datox4 == 3 || $datox4 == 4) {
			
			$listar = $this->db->prepare("
			
										    SELECT 
											
											dc.id AS idactu,ubi.id,ubi.radicado,dc.fecha,ubi.idjuzgado_reparto,dc.observacion,
											t2.nombre AS solicitud,t1.ruta_local,dc.id_memorial,
											dc.idestadorevisojuz,dc.idrevisojuz2,dc.fecharevisado,dc.horarevisado,t3.empleado,
											dc.id_user_asignada,dc.fecha_obs_i,dc.fecha_obs_f,dc.juzobsextra,dc.estadoobs,
											dc.fecha_obs_i,dc.fecha_obs_f,dc.tareacerrada,dc.fechacerrar,dc.horacerrar,ubi.digitalizado,
											dc.desde_reparto,ubi.fechasalida
											
										    FROM ((((
											
											detalle_correspondencia dc 
												  
											INNER JOIN ubicacion_expediente ubi ON dc.idcorrespondencia = ubi.id)
										    LEFT  JOIN correspondencia       t1 ON dc.id_memorial       = t1.id)
										    LEFT  JOIN pa_solicitud          t2 ON t1.idsolicitud       = t2.id)
											LEFT  JOIN pa_usuario            t3 ON dc.idrevisojuz2      = t3.id)
												  
											WHERE dc.id >= '1'" .$filtrox. "
											AND ubi.idjuzgado_reparto = '$Jid_juzgado_4'
											
											/*AND dc.estadoobs != 3*/
											
										    AND ((dc.a_despacho = 1)
											/*AND dc.id_memorial = dc.id_memorial*/
											
											OR (dc.observacion LIKE '%Proceso con liquidacion revisada, pendiente de pasar a Despacho.%'))
										    
											AND dc.revisasecretaria = 1
											
											/*GROUP BY ubi.id*/
											
											ORDER BY ubi.radicado"
											
										);
			
			
			
												
			
			
  			$listar->execute();
			
			}
			

  			return $listar;
	
  	}
	
	
	public function listar_procesos_despacho_2($Jid_juzgado_4){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$fecha_actual = $modelo->get_fecha_actual_amd();
			
			
			$idusuario     = $_SESSION['idUsuario'];
			
			
			$listar = $this->db->prepare("
			
										    SELECT 
											
											dc.id AS idactu,ubi.id,ubi.radicado,dc.fecha,ubi.idjuzgado_reparto,dc.observacion,
											t2.nombre AS solicitud,t1.ruta_local,dc.id_memorial,
											dc.idestadorevisojuz,dc.idrevisojuz2,dc.fecharevisado,dc.horarevisado,t3.empleado,
											dc.id_user_asignada,dc.fecha_obs_i,dc.fecha_obs_f,dc.juzobsextra,dc.estadoobs,
											dc.fecha_obs_i,dc.fecha_obs_f,dc.tareacerrada,dc.fechacerrar,dc.horacerrar,ubi.digitalizado,
											dc.desde_reparto,ubi.fechasalida
											
										    FROM ((((
											
											detalle_correspondencia dc 
												  
											INNER JOIN ubicacion_expediente ubi ON dc.idcorrespondencia = ubi.id)
										    LEFT  JOIN correspondencia       t1 ON dc.id_memorial       = t1.id)
										    LEFT  JOIN pa_solicitud          t2 ON t1.idsolicitud       = t2.id)
											LEFT  JOIN pa_usuario            t3 ON dc.idrevisojuz2      = t3.id)
												  
											WHERE dc.id >= 1 
											AND ubi.idjuzgado_reparto = '$Jid_juzgado_4'
											
											AND (dc.estadoobs != 3 AND dc.estadoobs != 4)
											
											AND dc.id_user_asignada = '$idusuario'
											
											/*AND (DATE(dc.fecha) >= '$fecha_actual' AND DATE(dc.fecha) <= '$fecha_actual')*/
											
										    AND ((dc.a_despacho = 1)
											
											/*AND dc.id_memorial = dc.id_memorial*/
											
											/*AND (ubi.fechasalida >= '$fecha_actual' AND ubi.fechasalida <= '$fecha_actual')*/
											
											OR (/*dc.a_despacho IS NULL AND*/ dc.observacion LIKE '%Proceso con liquidacion revisada, pendiente de pasar a Despacho.%'))
										    
											AND dc.revisasecretaria = 1
											
										    GROUP BY ubi.id
											
											ORDER BY dc.fecha DESC,ubi.radicado"
											
										);
			
			
											
											
			

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function listar_procesos_despacho_filtro_2($Jid_juzgado_4){
	
	
			set_time_limit (240000000);
	
			$idusuario  = $_SESSION['idUsuario'];
			
			
		
			$filtrox;
			
			$filtrof;
			$filtrof_2;
			$filtrof_3;
			
			$filtro1;
			$filtro2;
			$filtro3;
			$filtro4;
			
			
		
			$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			$fechadad  = trim($_GET['dato_3']);
			$fechahad  = trim($_GET['dato_4']);
			
			
			$datox1    = trim($_GET['datox1']);
			$datox2    = trim($_GET['datox2']);
			$datox3    = trim($_GET['datox3']);
			$datox4    = trim($_GET['datox4']);
			
			
		
			if ( !empty($fechad) && !empty($fechah) ) {
			
				
				
				//$filtrof   = " AND (DATE(dc.fecha) >= '$fechad' AND DATE(dc.fecha) <= '$fechah')";
				
				//$filtrof_2 = "AND (ubi.fechasalida >= '$fechad' AND ubi.fechasalida <= '$fechah')";
				
				//SE DEJA ESTE FILTRO PARA QUE TRAIGA LA INFORMACION QUE CORRESPONDA A LA CONSULTA
				//YA QUE EN ALGUNOS CASOS LA fechasalida YA ES NULL Y CON EL AND NO CRUZA LA INFORMACION
				$filtrof   = " AND ( (DATE(dc.fecha) >= '$fechad' AND DATE(dc.fecha) <= '$fechah') 
				               OR (ubi.fechasalida >= '$fechad' AND ubi.fechasalida <= '$fechah'))";

				
				//$filtrof = " AND ( t1.fecha >= '$fechad' AND t1.fecha <= '$fechah') ";
				
			
			}
			
			if ( !empty($fechadad) && !empty($fechahad) ) {
			
				
				
				
				$filtrof_3 = " AND ( ubi.fechasalida >= '$fechadad' AND ubi.fechasalida <= '$fechahad') ";
				
			
			}
			
			/*if ( !empty($datox1) ) {
			
				
				
				$filtro1 = " AND t1.id = '$datox1' ";
			
			}*/
			
			if ( !empty($datox2) ) {
			
				//CAMBIO EL 1 DE SEPTIEMBRE 2020
				
				//$filtro2 = " AND ubi.radicado = '$datox2' ";
				
				$filtro2 = " AND ubi.radicado LIKE '%$datox2%' ";
			
			}
			
			if ( !empty($datox3) ) {
			
				
				
				$filtro3 = " AND dc.id_user_asignada = '$datox3' ";
			
			}
			
			//EN PROCESO
			//if ( $datox4 == 'NULL' ) {
			if ( $datox4 == '0' ) {
			
				//$filtro4 = " AND dc.estadoobs IS NULL ";
				
				$filtro4 = " AND dc.estadoobs = '$datox4' ";
			}
			else{
			
				if( !empty($datox4) ) {
			
				
				
					$filtro4 = " AND dc.estadoobs = '$datox4' ";
					
				}
			
			}
			
		
			
			
			$filtrox = $filtro2." ".$filtro3." ".$filtro4." ".$filtrof." ".$filtrof_2." ".$filtrof_3;
		
			//LIMIT 30
			
			//SI LAS TAREAS ESTAN EN PROCESO, ASIGNADAS O PARA REVISAR
			//SE AGRUPA POR GROUP BY ubi.id
			if ( $datox4 == '0' || $datox4 == 2 || $datox4 == 5) {
			
			$listar = $this->db->prepare("
			
										    SELECT 
											
											dc.id AS idactu,ubi.id,ubi.radicado,dc.fecha,ubi.idjuzgado_reparto,dc.observacion,
											t2.nombre AS solicitud,t1.ruta_local,dc.id_memorial,
											dc.idestadorevisojuz,dc.idrevisojuz2,dc.fecharevisado,dc.horarevisado,t3.empleado,
											dc.id_user_asignada,dc.fecha_obs_i,dc.fecha_obs_f,dc.juzobsextra,dc.estadoobs,
											dc.fecha_obs_i,dc.fecha_obs_f,dc.tareacerrada,dc.fechacerrar,dc.horacerrar,ubi.digitalizado,
											dc.desde_reparto,ubi.fechasalida
											
										    FROM ((((
											
											detalle_correspondencia dc 
												  
											INNER JOIN ubicacion_expediente ubi ON dc.idcorrespondencia = ubi.id)
										    LEFT  JOIN correspondencia       t1 ON dc.id_memorial       = t1.id)
										    LEFT  JOIN pa_solicitud          t2 ON t1.idsolicitud       = t2.id)
											LEFT  JOIN pa_usuario            t3 ON dc.idrevisojuz2      = t3.id)
												  
											WHERE dc.id >= '1'" .$filtrox. "
											
											AND ubi.idjuzgado_reparto = '$Jid_juzgado_4'
											
											AND dc.id_user_asignada = '$idusuario'
											
											/*AND dc.estadoobs != 3*/
											
										    AND ((dc.a_despacho = 1)
											/*AND dc.id_memorial = dc.id_memorial*/
											
											OR (dc.observacion LIKE '%Proceso con liquidacion revisada, pendiente de pasar a Despacho.%'))
										    
											AND dc.revisasecretaria = 1
								
											GROUP BY ubi.id
											
											ORDER BY dc.fecha DESC,ubi.radicado"
											
										);
			
			
			
			
  			$listar->execute();
			
			}
			
			//SI LAS TAREAS ESTAN CANCELADAS O EN DEVOLUCION
			//NO SE AGRUPA POR GROUP BY ubi.id, YA QQUE UN PROCESO
			//PUEDE TENER VARIAS TAREAS CERRADAS O DEVUELTAS COMO UN HISTORIAL
			if ( $datox4 == 3 || $datox4 == 4) {
			
			$listar = $this->db->prepare("
			
										    SELECT 
											
											dc.id AS idactu,ubi.id,ubi.radicado,dc.fecha,ubi.idjuzgado_reparto,dc.observacion,
											t2.nombre AS solicitud,t1.ruta_local,dc.id_memorial,
											dc.idestadorevisojuz,dc.idrevisojuz2,dc.fecharevisado,dc.horarevisado,t3.empleado,
											dc.id_user_asignada,dc.fecha_obs_i,dc.fecha_obs_f,dc.juzobsextra,dc.estadoobs,
											dc.fecha_obs_i,dc.fecha_obs_f,dc.tareacerrada,dc.fechacerrar,dc.horacerrar,ubi.digitalizado,
											dc.desde_reparto,ubi.fechasalida
											
										    FROM ((((
											
											detalle_correspondencia dc 
												  
											INNER JOIN ubicacion_expediente ubi ON dc.idcorrespondencia = ubi.id)
										    LEFT  JOIN correspondencia       t1 ON dc.id_memorial       = t1.id)
										    LEFT  JOIN pa_solicitud          t2 ON t1.idsolicitud       = t2.id)
											LEFT  JOIN pa_usuario            t3 ON dc.idrevisojuz2      = t3.id)
												  
											WHERE dc.id >= '1'" .$filtrox. "
											
											AND ubi.idjuzgado_reparto = '$Jid_juzgado_4'
											
											AND dc.id_user_asignada = '$idusuario'
											
											/*AND dc.estadoobs != 3*/
											
										    AND ((dc.a_despacho = 1)
											/*AND dc.id_memorial = dc.id_memorial*/
											
											OR (dc.observacion LIKE '%Proceso con liquidacion revisada, pendiente de pasar a Despacho.%'))
										    
											AND dc.revisasecretaria = 1
								
											/*GROUP BY ubi.id*/
											
											ORDER BY ubi.radicado"
											
										);
			
			
			
			
  			$listar->execute();
			
			}

  			return $listar;
	
  	}
	
	public function realizar_revisar_procesos(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
	
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
					$idactu 		       = trim($datospartes_1B[0]);//ID ACTU
					$idradi 		       = trim($datospartes_1B[1]);//ID RADICADO
					$radicado 		       = trim($datospartes_1B[2]);//RADICADO
					
					
					//SE REALIZA ESTA OPERACION POR QUE SI UN PROCESO
					//TIENE MAS DE UN MEMORIAL QUE PASA A DESPACHO
					//AL REVISAR, NO REVISADO, ASIGAR Y NO ASIGNAR SERVIDOR JUDICIAL
					//DEBE ACTUALIZAR LOS ID DE LAS ACTUACIONES CORRESPONDIENTES
					
					$idactuX = "IN(".trim($datospartes_1B[0]).")";//IDSMEMO
					
					//$sm = trim($datospartes_1B[3]);//SINMEMO
					
					/*if($sm == 1){
					
						$idsactu    = $modelo->get_ids_actuaciones($idradi);
						
						while($factu = $idsactu->fetch()){
				
				
							$idsactu_2 = $factu[idactu].",".$idsactu_2;
							
						}
					
						$idsactu_2 = rtrim($idsactu_2,",");
						
						$idactu    = "IN(".$idsactu_2.")";
					
					}
					else{
					
						$idactu  = "IN(".$idactu.")";
					}*/
					
					
					//echo $idactu;
					
					
					//SQL A EJECUTAR 
					
	
					$SQL_1 = "UPDATE detalle_correspondencia SET
					
					
								  idestadorevisojuz  = 1,
								  idrevisojuz2       = '$idusuario',
								  fecharevisado      = '$fechalog',
								  horarevisado       = '$horalog'
								  
							  
							  WHERE id ".$idactuX;			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$accion       = "REVISA PROCESO A DESPACHO";
								$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog." ID RADI:".$idradi." RADI:".$radicado;
								
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							//$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
				
				
				
				
				
  	}
	
	
	public function realizar_no_revisar_procesos(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
	
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
					$idactu 		       = trim($datospartes_1B[0]);//ID ACTU
					$idradi 		       = trim($datospartes_1B[1]);//ID RADICADO
					$radicado 		       = trim($datospartes_1B[2]);//RADICADO
					
					
					
					//SE REALIZA ESTA OPERACION POR QUE SI UN PROCESO
					//TIENE MAS DE UN MEMORIAL QUE PASA A DESPACHO
					//AL REVISAR, NO REVISADO, ASIGAR Y NO ASIGNAR SERVIDOR JUDICIAL
					//DEBE ACTUALIZAR LOS ID DE LAS ACTUACIONES CORRESPONDIENTES
					
					$idactuX = "IN(".trim($datospartes_1B[0]).")";//IDSMEMO
					
					//$sm = trim($datospartes_1B[3]);//SINMEMO
					
					/*if($sm == 1){
					
						$idsactu    = $modelo->get_ids_actuaciones($idradi);
						
						while($factu = $idsactu->fetch()){
				
				
							$idsactu_2 = $factu[idactu].",".$idsactu_2;
							
						}
					
						$idsactu_2 = rtrim($idsactu_2,",");
						
						$idactu    = "IN(".$idsactu_2.")";
					
					}
					else{
					
						$idactu  = "IN(".$idactu.")";
					}*/
					
					//SQL A EJECUTAR 
					
	
					$SQL_1 = "UPDATE detalle_correspondencia SET
					
								 
								  estadoobs          = 0,	
								  id_user_asignada   = NULL,
								  fecha_obs_i        = NULL,
								  fecha_obs_f        = NULL,
								  idestadorevisojuz  = NULL,
								  idrevisojuz2       = NULL,
								  fecharevisado      = NULL,
								  horarevisado       = NULL
								  
							  
							 WHERE id ".$idactuX;			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$accion       = "NO REVISADO PROCESO A DESPACHO";
								$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog." ID RADI:".$idradi." RADI:".$radicado;
								
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							//$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
				
				
				
				
				
  	}
	
	public function realizar_revisar_procesos_2(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
				
				$cadena_fechas = explode("//////",trim($_POST['cadena_fechas']));
				$fii           = $cadena_fechas[0];
				$fff           = $cadena_fechas[1];
		
	
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
					$idactu   = trim($datospartes_1B[0]);//ID ACTU
					$idradi   = trim($datospartes_1B[1]);//ID RADICADO
					$radicado = trim($datospartes_1B[2]);//RADICADO
					$idser    = trim($datospartes_1B[3]);//ID SERVIDOR
					$area     = utf8_decode("PROCESO ASIGNADO PARA PROYECTAR ".trim($datospartes_1B[4]));//AREA
					
					if ( empty($area) ) {
				
						$area = "NULL";
			
					}
					
					
					//SE REALIZA ESTA OPERACION POR QUE SI UN PROCESO
					//TIENE MAS DE UN MEMORIAL QUE PASA A DESPACHO
					//AL REVISAR, NO REVISADO, ASIGAR Y NO ASIGNAR SERVIDOR JUDICIAL
					//DEBE ACTUALIZAR LOS ID DE LAS ACTUACIONES CORRESPONDIENTES
					
					$idactuX = "IN(".trim($datospartes_1B[0]).")";//IDSMEMO


					//$sm = trim($datospartes_1B[5]);//SINMEMO
					
					/*if($sm == 1){
					
						$idsactu    = $modelo->get_ids_actuaciones($idradi);
						
						while($factu = $idsactu->fetch()){
				
				
							$idsactu_2 = $factu[idactu].",".$idsactu_2;
							
						}
					
						$idsactu_2 = rtrim($idsactu_2,",");
						
						$idactu    = "IN(".$idsactu_2.")";
					
					}
					else{
					
						$idactu  = "IN(".$idactu.")";
					}*/

					
					//SQL A EJECUTAR 
					
					 //estadoobs          = 1,
					$SQL_1 = "UPDATE detalle_correspondencia SET
					
					
								  fecha_obs_i      = '$fii',
								  fecha_obs_f      = '$fff',
								  estadoobs        = 2,
								  id_user_asignada = '$idser',
								  juzobsextra      = '$area'
								 
								  
							  
							 WHERE id ".$idactuX;			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$accion       = "ASIGNA PROCESO A DESPACHO, ID USER:".$idser;
								$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog." ID RADI:".$idradi." RADI:".$radicado;
								
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							//$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
				
				
				
				
				
  	}
	
	
	
	
	
	public function realizar_no_revisar_procesos_2(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
	
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
					$idactu   = trim($datospartes_1B[0]);//ID ACTU
					$idradi   = trim($datospartes_1B[1]);//ID RADICADO
					$radicado = trim($datospartes_1B[2]);//RADICADO
					
					
					//SE REALIZA ESTA OPERACION POR QUE SI UN PROCESO
					//TIENE MAS DE UN MEMORIAL QUE PASA A DESPACHO
					//AL REVISAR, NO REVISADO, ASIGAR Y NO ASIGNAR SERVIDOR JUDICIAL
					//DEBE ACTUALIZAR LOS ID DE LAS ACTUACIONES CORRESPONDIENTES
					
					$idactuX = "IN(".trim($datospartes_1B[0]).")";//IDSMEMO
					
					//$sm = trim($datospartes_1B[3]);//SINMEMO
					
					/*if($sm == 1){
					
						$idsactu    = $modelo->get_ids_actuaciones($idradi);
						
						while($factu = $idsactu->fetch()){
				
				
							$idsactu_2 = $factu[idactu].",".$idsactu_2;
							
						}
					
						$idsactu_2 = rtrim($idsactu_2,",");
						
						$idactu    = "IN(".$idsactu_2.")";
					
					}
					else{
					
						$idactu  = "IN(".$idactu.")";
					}*/
					
					//SQL A EJECUTAR 
					
					 //estadoobs          = 1,
					$SQL_1 = "UPDATE detalle_correspondencia SET
					
					
								  fecha_obs_i      = NULL,
								  fecha_obs_f      = NULL,
								  estadoobs        = 0,
								  id_user_asignada = NULL,
								  juzobsextra      = NULL,
								  tareacerrada     = NULL,
								  fechacerrar      = NULL,
								  horacerrar       = NULL
						
							   WHERE id ".$idactuX;			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$accion       = "DES-ASIGNA PROCESO A DESPACHO, ID USER:".$idser;
								$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog." ID RADI:".$idradi." RADI:".$radicado;
								
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							//$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
				
				
				
				
				
  	}
	
	public function cerrar_tarea(){
	
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario = $_SESSION['idUsuario'];
		
		$idactu       = trim($_POST['idactu']);
		$tareacerrada = utf8_decode(trim($_POST['tareacerrada']));
		$idradi       = trim($_POST['idradicado']);
		$sm           = trim($_POST['sm']);
		
		
					//SE REALIZA ESTA OPERACION POR QUE SI UN PROCESO
					//TIENE MAS DE UN MEMORIAL QUE PASA A DESPACHO
					//AL REVISAR, NO REVISADO, ASIGAR Y NO ASIGNAR SERVIDOR JUDICIAL
					//DEBE ACTUALIZAR LOS ID DE LAS ACTUACIONES CORRESPONDIENTES
					/*if($sm == 1){
					
						$idsactu    = $modelo->get_ids_actuaciones($idradi);
						
						while($factu = $idsactu->fetch()){
				
				
							$idsactu_2 = $factu[idactu].",".$idsactu_2;
							
						}
					
						$idsactu_2 = rtrim($idsactu_2,",");
						
						$idactu    = "IN(".$idsactu_2.")";
					
					}
					else{
					
						$idactu  = "IN(".$idactu.")";
					}*/
		
				
					
					
					//SQL A EJECUTAR WHERE id ".$idactu;
					
					
					$SQL_1 = "UPDATE detalle_correspondencia SET
					
					
								  estadoobs        = 3,
								  tareacerrada     = '$tareacerrada',
								  fechacerrar      = '$fechalog',
								  horacerrar       = '$horalog'
								 
							  WHERE id = '$idactu'";
							  	
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$accion       = "CERRAR TAREA, ID USER:".$idser;
								$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog." ID RADI:".$idradi." RADI:".$radicado;
								
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							//$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
				
						if($error_transaccion){
						
							echo $msg;
						
						}
						else{
							
							$msg = "PROCESO SE REALIZA CORRECTAMENTE";
							
							echo $msg;
						
						}
							
					
					
				
  	}
	
	public function adicionar_folios_proceso_D(){
	
	
		set_time_limit (240000000);
		
		$modelo = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		/*$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];*/
		
		//$horalog    = $datosfecha[1];
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		//$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario     = $_SESSION['idUsuario'];
		
		$idradiX       = trim($_POST['idradiX']);
		$radiX         = trim($_POST['radiX']);
		$idactuX       = trim($_POST['idactuX']);
		
		$d1X       = trim($_POST['d1X']);
		$d2X       = trim($_POST['d2X']);
		$d3X       = trim($_POST['d3X']);
		$d4X       = trim($_POST['d4X']);
		
		$opcionX       = 1;
		
		
		/*$iddev_juzgado = $_SESSION['id_juzgado'];
		
		$Didentidad_user = $_SESSION['nomusu'];
		$Dnombre_user    = $_SESSION['nombre'];
		
		$devolucion      = "DEVOLUCION EXTERNA, REALIZADA POR: ".$Didentidad_user." - ".$Dnombre_user;
		
		$idevo           = trim($_POST['idevo']);*/
		
	
		
		//***********************************PARA EL ARCHIVO***************************************
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "EXPEDIENTE_DIGITAL_2";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		//$nom = trim($_SESSION['idUsuario']);
		$nom = trim($idradi);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//AQUI SE CREA EL DIRECTORIO
		//if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		//else{mkdir($raiz.'/'.$nom, 0, true);}
				
		//CUANDO SOLO SE SUBE UN ARCHIVOS
		/*$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		$tamano_archivo = $_FILES['archivo']['size'];*/ 
		
		
		//***********************************FIN PARA EL ARCHIVO***************************************
		
						$cadena_archivos = "";
					
						
						$error_transaccion   = 0; //variable para detectar error
						$msg = " ";
								
						//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
						//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
								
							
								
						try {  
									
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
									
									
									for($i = 0; $i < count($_POST['idradicado']); $i++){
									
										$idradicado = trim($_POST['idradicado'][$i]);
										$fecha      = trim($_POST['fecha'][$i]);
										$hora       = $horalog;
										$folio_i    = trim($_POST['folio_i'][$i]);
										$folio_f    = trim($_POST['folio_f'][$i]);
										$cuaderno   = trim($_POST['cuaderno'][$i]);
										$des        = utf8_decode(trim($_POST['des'][$i]));
										
										
										
										
										if( !empty( $_FILES['Foto']['name'] ) ){
					
											//AQUI SE CREA EL DIRECTORIO
											//$dir_idradi = 'uploads/' .$_POST['idradicado'][$i];
											$dir_idradi = $raiz.'/' .$_POST['idradicado'][$i];
											if(is_dir($dir_idradi)){$bandera=0;}
											else{mkdir($dir_idradi, 0, true);}
										
											//$foto = date('ymdhis') . '-' . strtolower($_FILES['Foto']['name'][$i]);
											$foto = date('ymdhis') . '-' . $_FILES['Foto']['name'][$i];
											$tipo = $_FILES['Foto']['type'][$i];
											$ruta = $dir_idradi.'/'.$foto;
											
											//move_uploaded_file ($_FILES['Foto']['tmp_name'][$i], 'uploads/' . $foto);
											move_uploaded_file ($_FILES['Foto']['tmp_name'][$i], utf8_decode($ruta));
						
											
										}
										
										$this->db->exec("INSERT INTO expe_digital (idradicado,fecha,hora,folio_i,folio_f,cuaderno,tipo,ruta,des,idusuario,estado) 
														 VALUES ('$idradicado','$fecha','$hora','$folio_i','$folio_f','$cuaderno','$tipo','$ruta','$des','$idusuario',1)");
										
										
										//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
										$last_id = $this->db->lastInsertId();
									
										
										
										$this->db->exec("
														 	UPDATE detalle_correspondencia SET 
															
										                  		ruta           = '$ruta',
														  		idautodespacho = '$last_id'
																
														  	WHERE id = '$idactuX'
														  
														");				 
														 
														 
										
										//HISTORIAL
										$actuacion = 'REGISTRO FOLIO(S)';
										$tablas    = 'expe_digital'.'-'.'detalle_correspondencia';
										$tipo      = 'RF';
										$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo,idexpdigi)
														 VALUES('$idradiX','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$ruta','$tipo','$last_id')");
														 
									}
									
									
									
									
											
											
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
																		
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
														
								//echo $msg;
											
									
									  
						} 
						catch (Exception $e) {
									
							$msg = "ERROR EN PROCESO: ".$e->getMessage();			
						
							//IDENTIFICA QUE OCURIIO UN ERROR,CON ALGUN ARCHIVO QUE SE DESEA CARGAR
							/*if($archivo_error == 1){
							
								$msg = "ERROR EN PROCESO: ".$e->getMessage()." ERROR EN ARCHIVO: ".$mensage;
							}
							else{
							
								$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							}*/
										
										
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
							//SE ELIMINA EL DIRECTORIO Y EL ARCHIVO(S) SUBIDOS
							/*$ruta_borrar = $raiz.'/'.$nom.'/'.$last_id;
							$files       = array_diff(scandir($ruta_borrar), array('.','..')); 

							foreach ($files as $file) { 
							
								//(is_dir("$ruta_borrar/$file")) ? delTree("$ruta_borrar/$file") : unlink("$ruta_borrar/$file"); 
								
								if( is_dir("$ruta_borrar/$file") ){ 
									
									 unlink("$ruta_borrar/$file"); 
								}
								  
							} */
					
							//echo $msg;
										
							$error_transaccion   = 1;
							
							
						}
							
										
							
						if($error_transaccion){
								
							//echo $msg;
							
							
							
							//PARA QUE EM LA VISTA EXPEDIENTE_DIGITALNO ENTRE
							//CUANDO LOS PROCESOS SON CORRECTOS
							$opcionX = 0;
							
							echo '<script languaje="JavaScript"> 
									
				
									var msg = "'.$msg.'";	
									
					
									var d1X      = "'.$d1X.'";
									var d2X      = "'.$d2X.'";
									var d3X      = "'.$d3X.'";
									var d4X      = "'.$d4X.'";
									
									
									alert(msg);
									
									location.href="index.php?controller=archivo&action=Adimistrar_Procesos_Despacho&datosJ="+d1X+"******"+d2X+"******"+d3X+"******"+d4X;
									
									
								  </script>';
								
						}
						else{
						
						
					
							//SE TERMINA LA TRANSACCION  
							//$this->db->commit();
										
							//$msg = "1-PROCESO SE REALIZA CORRECTAMENTE";
									
							//echo $msg;
							
							/*echo '<script languaje="JavaScript"> 
							
									
									var idradi = "'.$idradiX.'";	
									var radi   = "'.$radiX.'";	
				
									
									alert("1-PROCESO SE REALIZA CORRECTAMENTE: "+idradiX+" "+radiX);
									
									
									//location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradi+"******"+radi;
			
						
								  </script>';*/
								  
							
							//$idradicado_h = trim($_REQUEST['idradi']);
							//$radicado_h   = trim($_REQUEST['radi']);
							
							//header('Location: index.php?idradi='.$idradicado_h.'&radi='.$radicado_h);
							
							header('Location: index.php?controller=archivo&action=Adimistrar_Procesos_Despacho&datosJ='.$d1X.'******'.$d2X.'******'.$d3X.'******'.$d4X.'******'.$opcionX.'******'.$idradiX.'******'.$radiX);
		
								
						}
					
					

				
  	}
	
	
	//********************************************************************************************
	
	//FIN PROCESOS REPARTO A DESPACHO VIRTUAL, 24 DE JUNIO 2020
	
	//********************************************************************************************
	
	
	 public function get_proceso_digitalizado($id_radicado_2){
	
		
		$listar     = $this->db->prepare("SELECT digitalizado FROM ubicacion_expediente 
										  WHERE id = '$id_radicado_2'");
	
  		$listar->execute();

  		return $listar;
	
  	}
	
	
	
	
	public function estado_digital_proceso(){
	
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
	
		//SE OBTIENEN LOS DATOS
		$idusuario = $_SESSION['idUsuario'];
		
		$id_radi_digi = trim($_POST['id_radi_digi']);
		
					
					//SQL A EJECUTAR 
	
					$SQL_1 = "UPDATE ubicacion_expediente SET
					
								  digitalizado = 1
								  
							  WHERE id    = '$id_radi_digi'";			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$obs                = "EXPEDIENTE DIGITALIZADO";
			
								$fechacarga_detalle = $fechalog." "."00:00:00";
														 
								$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
											     VALUES('$id_radi_digi','$fechacarga_detalle','$obs','$idusuario')");				 
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							
							$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
				
						if($error_transaccion){
						
							echo $msg;
						
						}
						else{
							
							$msg = "PROCESO SE REALIZA CORRECTAMENTE";
							
							echo $msg;
						
						}
							
					
					
				
  	}
	
	public function get_procesos_acumulados($idradipadre){
	
		
		$listar     = $this->db->prepare("SELECT idradiacumulado FROM ubicacion_expediente 
										  WHERE id = '$idradipadre'");
	
  		$listar->execute();
		
		$field         = $listar->fetch();
		
		$ids_acumulado = $field['idradiacumulado'];
		

  		return $ids_acumulado;
	
  	}
	
	public function acumular_proceso(){
	
	
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
	
		//SE OBTIENEN LOS DATOS
		$idusuario = $_SESSION['idUsuario'];
		
		
		//DATOS RADICADO ACUMULADO AL PADRE
		$idradiacumular = trim($_POST['idradiacumular']);
		$radiacu        = trim($_POST['radiacu']);
		
		//DATOS RADICADO PADRE
		$idradipadre    = trim($_POST['idradipadre']);
		$nradi          = trim($_POST['nradi']);
		
		//TRAER LOS IDS DE LOS PROCESOS ACUMULADOS AL RADICADO PADRE
		$ids_acumulado   = $modelo->get_procesos_acumulados($idradipadre);
		
		unset($ids_acumulado_2);
		$ids_acumulado_2 = trim($ids_acumulado.",".$idradiacumular,",");
		
					
					//SQL A EJECUTAR 
	
					$SQL_1 = "UPDATE ubicacion_expediente SET
					
								  idradiacumulado = '$ids_acumulado_2'
								  
							  WHERE id    = '$idradipadre'";			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$obs_1              = "EXPEDIENTE, ID: ".$idradipadre." PROCESO:".$nradi." SE LE ACUMULA, ID: ".$idradiacumular." PROCESO:".$radiacu;
			
								$fechacarga_detalle = $fechalog." "."00:00:00";
														 
								$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
											     VALUES('$idradipadre','$fechacarga_detalle','$obs_1','$idusuario')");		
												 
								
								$obs_2              = "EXPEDIENTE, ID: ".$idradiacumular." PROCESO:".$radiacu." SE ACUMULA A, ID: ".$idradipadre." PROCESO:".$nradi;				 
								
								$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
											     VALUES('$idradiacumular','$fechacarga_detalle','$obs_2','$idusuario')");						 		 
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							
							$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
				
						if($error_transaccion){
						
							echo $msg;
						
						}
						else{
							
							$msg = "PROCESO SE REALIZA CORRECTAMENTE";
							
							echo $msg;
						
						}
							
					
					
				
  	}
	
	public function descargar_multiples_archivos()
    {
	
	
		// Tiempo mï¿½ximo de ejecuciï¿½n de ï¿½ste script en segundos.
		//ini_set('max_execution_time','240000000000');  
		
		
		/*Tamaï¿½o mï¿½ximo que el script puede usar de la memoria, mientras se ejecuta.*/
		//ini_set("memory_limit" , "2048M"); 
		  
		//Que no haya lï¿½mite en la ejecuciï¿½n del script
		set_time_limit (0);
		 
		
		//NOTA: DE ESTA FORMA LLEGAN LOS DATOS A public function descargar_multiples_archivos()
		//RECEPCION_DEMANDAS/2/525/2.pdf******RECEPCION_DEMANDAS/2/525/1.pdf******undefined
		
		//NOTA 2 : YA NO SE ENVIAN LAS RUTAS CONCATENADAS, SI NO QUE SE ENVIAN EN ARRY DE FORMA
		//implode(",", $ruta_descarga) 
		//la funciï¿½n implode, esta funciï¿½n lo que hace es dado una cadena y un array, coge cada elemento, lo separa por esa cadena y nos lo devuelve en esa cadena 
		//Y SE RECIBEN $ruta_descarga = explode(",",trim($_GET['ruta_descarga']));
		//ESTO CON EL OBJETO DE QUE CUANDO ERAN CADENAS MUY LARGAS EL SISTEMA PODIA SACAR INCONSISTENCIAS
		//AL REALIZAR LA DESCARGA, SE HACE EL CAMBIO EL 1 DE OCTUBRE 2020

		//print_r(trim($_GET['ruta_descarga']));
		
				
		$ruta_descarga = explode(",",trim($_GET['ruta_descarga']));
		
		
		//print_r($ruta_descarga[2]);
		
		//$ruta_descarga = explode("******",trim($_GET['ruta_descarga']));
		//print_r($ruta_descarga);
		
		$ruta_descarga_1 = explode("/",$ruta_descarga[0]);
		$ruta_descarga_3 = $ruta_descarga_1[2];
		
		$long_ruta = count($ruta_descarga);
		
		// Creamos un instancia de la clase ZipArchive
		 $zip = new ZipArchive();
		// Creamos y abrimos un archivo zip temporal
		 $zip->open("expdigi.zip",ZipArchive::CREATE);
		 // Aï¿½adimos un directorio
		 //$dir = 'miDirectorio';
		 $dir = $ruta_descarga_3;
		 $zip->addEmptyDir($dir);
		 // Aï¿½adimos un archivo en la raid del zip.
		 //$zip->addFile("imagen1.jpg","mi_imagen1.jpg");
		 //$zip->addFile("17001400300120200022800ACTA.pdf","mi_17001400300120200022800ACTA.pdf");
		 
		 //Aï¿½adimos un archivo dentro del directorio que hemos creado
		 //$zip->addFile("imagen2.jpg",$dir."/mi_imagen2.jpg");
		 
		 $i = 0;
		 //SE QUITA EL -1 YA QUE NO ES UNA CADENA SI NO ARRAY
		 //while($i < $long_ruta - 1){
		 while($i < $long_ruta){
		 
		 	 $datos_archivo = explode("/",$ruta_descarga[$i]);
			 $nomarchivo    = trim($datos_archivo[3]);
		 
			 $zip->addFile($ruta_descarga[$i],$dir."/".$nomarchivo);
			 
			 //echo "RUTA: ".$ruta_descarga[$i]."<br>"." DIRECTORIO: ".$dir."/".$nomarchivo."<br>"."<br>";
			 
			 $i = $i + 1;
		}
		
		
		 /*if($zip->open('expdigi.zip')) {
			//$zip->extractTo('extract/');
			$zip->extractTo('C:/DESCOMPRIMIDO/');
			$zip->close();
			unlink('expdigi.zip');//Destruye el archivo temporal
			echo 'El archivo ha sido descomprimido correctamente';
		 } else {
			echo 'Error al descomprimir';
		 }*/
		 
		 
		 
		 // Una vez aï¿½adido los archivos deseados cerramos el zip.
		 $zip->close();
		 // Creamos las cabezeras que forzaran la descarga del archivo como archivo zip.
		 /*header("Content-type: application/octet-stream");
		 header("Content-Type: application/force-download");
		 header("Content-disposition: attachment; filename=expdigi.zip");*/
		 
		 
		 header('Content-Type: application/zip');
		 header('Content-length: ' . filesize('expdigi.zip'));
		 header('Content-Disposition: attachment; filename=expdigi.zip');
		
		 ob_end_flush();
		 
		 
		 /*header('Content-Description: File Transfer');
         header("Content-type: application/octet-stream");
		 //header("Content-Type: application/zip");
		 header("Content-Type: application/force-download");
         header("Content-Disposition: attachment; filename=expdigi.zip");
         header('Content-Transfer-Encoding: binary');
         header('Expires: 0');
         header('Cache-Control: must-revalidate');
         header('Pragma: public');
         header('Content-Length: ' . filesize("expdigi.zip"));
		 
		 ob_clean();
         flush();*/
		 
		 // leemos el archivo creado
		 readfile('expdigi.zip');
		 // Por ï¿½ltimo eliminamos el archivo temporal creado
		 unlink('expdigi.zip');//Destruye el archivo temporal
		 
		 exit;
		 
		
		
    }
	
	
	/**
	* Esta funciï¿½n devuelve el nï¿½mero de pï¿½ginas de un archivo pdf
		$count = max($matches);
 	* Tiene que recibir la ubicaciï¿½n y nombre del archivo
	*/
	public function numeroPaginasPdf($archivoPDF){

		$stream  = fopen($archivoPDF, "r");
		$content = fread ($stream, filesize($archivoPDF));
	 
		if(!$stream || !$content)
			return 0;
	 
		$count = 0;
	 
		$regex  = "/\/Count\s+(\d+)/";
		$regex2 = "/\/Page\W*(\d+)/";
		$regex3 = "/\/N\s+(\d+)/";
	 
		if(preg_match_all($regex, $content, $matches))
	
		return $count[0];
	}
	
	
	public function get_estilo_cuaderno($idcuaderno){
	
		
		$listar = $this->db->prepare("SELECT stylo FROM expe_cuaderno 
									  WHERE id = '$idcuaderno'");
	
  		$listar->execute();
		
		$field = $listar->fetch();
		
		$stylo = $field['stylo'];
		

  		return $stylo;
	
  	}
	
	public function realizar_devolucion(){
	
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario = $_SESSION['idUsuario'];
		
		$idactu       = trim($_POST['idactu']);
		
		$idactuX = "IN(".trim($_POST['idactu']).")";//IDSMEMO
		
		$tareacerrada = utf8_decode(trim($_POST['tareacerrada']));
		
				
					
					
					//SQL A EJECUTAR 
					
					
					$SQL_1 = "UPDATE detalle_correspondencia SET
					
					
								  estadoobs        = 4,
								  tareacerrada     = '$tareacerrada',
								  fechacerrar      = '$fechalog',
								  horacerrar       = '$horalog'
								 
							  
							  WHERE id ".$idactuX;		
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$accion       = "DEVOLUCION DESDE DESPACHO, ID USER:".$idser;
								$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog." ID RADI:".$idradi." RADI:".$radicado;
								
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							//$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
				
						if($error_transaccion){
						
							echo $msg;
						
						}
						else{
							
							$msg = "PROCESO SE REALIZA CORRECTAMENTE";
							
							echo $msg;
						
						}
							
					
					
				
  	}
	
	public function get_Id_Juzgado_Proceso($idradicado){
	
		
		$listar     = $this->db->prepare("SELECT idjuzgado_reparto FROM
		                                  ubicacion_expediente WHERE id = '$idradicado'");
	
  		$listar->execute();

  		return $listar;
	
  	}	
	
	public function get_ids_actuaciones($idradi){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$fecha_actual = $modelo->get_fecha_actual_amd();
			
			
			$idusuario     = $_SESSION['idUsuario'];
			
			
			$listar = $this->db->prepare("
			
										   SELECT

											dc.id AS idactu
											
											FROM ((((
											
											detalle_correspondencia dc
											
											INNER JOIN ubicacion_expediente ubi ON dc.idcorrespondencia = ubi.id)
											LEFT  JOIN correspondencia       t1 ON dc.id_memorial       = t1.id)
											LEFT  JOIN pa_solicitud          t2 ON t1.idsolicitud       = t2.id)
											LEFT  JOIN pa_usuario            t3 ON dc.idrevisojuz2      = t3.id)
											
											WHERE dc.id >= 1
											AND ubi.idjuzgado_reparto = ubi.idjuzgado_reparto
											AND (dc.estadoobs != 3 AND dc.estadoobs != 4)
											AND ((dc.a_despacho = 1) OR (dc.observacion LIKE '%Proceso con liquidacion revisada, pendiente de pasar a Despacho.%'))
											AND dc.idcorrespondencia = '$idradi'
											
											ORDER BY dc.fecha DESC,ubi.radicado"
											
										);
			
			
											
											
			

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function abrir_tarea(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
	
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
					$idactu 		       = trim($datospartes_1B[0]);//ID ACTU
					$idradi 		       = trim($datospartes_1B[1]);//ID RADICADO
					$radicado 		       = trim($datospartes_1B[2]);//RADICADO
					
					
					//SE REALIZA ESTA OPERACION POR QUE SI UN PROCESO
					//TIENE MAS DE UN MEMORIAL QUE PASA A DESPACHO
					//AL REVISAR, NO REVISADO, ASIGAR Y NO ASIGNAR SERVIDOR JUDICIAL
					//DEBE ACTUALIZAR LOS ID DE LAS ACTUACIONES CORRESPONDIENTES
					$sm = trim($datospartes_1B[3]);//SINMEMO
					
					if($sm == 1){
					
						$idsactu    = $modelo->get_ids_actuaciones_cerradas($idradi);
						
						while($factu = $idsactu->fetch()){
				
				
							$idsactu_2 = $factu[idactu].",".$idsactu_2;
							
						}
					
						$idsactu_2 = rtrim($idsactu_2,",");
						
						$idactu    = "IN(".$idsactu_2.")";
					
					}
					else{
					
						$idactu  = "IN(".$idactu.")";
					}
					
					
					//echo $idactu;
					
					
					//SQL A EJECUTAR 
					
  
					
					$SQL_1 = "UPDATE detalle_correspondencia SET
					
					
								  estadoobs        = 2,
								  tareacerrada     = NULL,
								  fechacerrar      = NULL,
								  horacerrar       = NULL
								 
							  WHERE id ".$idactu;		  
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$accion       = "ABRIR TAREA";
								$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog." ID RADI:".$idradi." RADI:".$radicado;
								
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							//$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
				
				
				
				
				
  	}
	
	public function get_ids_actuaciones_cerradas($idradi){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$fecha_actual = $modelo->get_fecha_actual_amd();
			
			
			$idusuario     = $_SESSION['idUsuario'];
			
			
			$listar = $this->db->prepare("
			
										   SELECT

											dc.id AS idactu
											
											FROM ((((
											
											detalle_correspondencia dc
											
											INNER JOIN ubicacion_expediente ubi ON dc.idcorrespondencia = ubi.id)
											LEFT  JOIN correspondencia       t1 ON dc.id_memorial       = t1.id)
											LEFT  JOIN pa_solicitud          t2 ON t1.idsolicitud       = t2.id)
											LEFT  JOIN pa_usuario            t3 ON dc.idrevisojuz2      = t3.id)
											
											WHERE dc.id >= 1
											AND ubi.idjuzgado_reparto = ubi.idjuzgado_reparto
											/*AND (dc.estadoobs != 3 AND dc.estadoobs != 4)*/
											AND dc.estadoobs = 3
											AND ((dc.a_despacho = 1) OR (dc.observacion LIKE '%Proceso con liquidacion revisada, pendiente de pasar a Despacho.%'))
											AND dc.idcorrespondencia = '$idradi'
											
											ORDER BY dc.fecha DESC,ubi.radicado"
											
										);
			
			
											
											
			

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function get_procesos_esdigital($id_radi){
	
		
		$listar     = $this->db->prepare("SELECT digitalizado FROM ubicacion_expediente 
										  WHERE id = '$id_radi'");
	
  		$listar->execute();
		
		$field        = $listar->fetch();
		
		$digitalizado = $field['digitalizado'];
		

  		return $digitalizado;
	
  	}
	
	public function cerrar_bloque_tarea(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
	
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
					$idactu 		       = trim($datospartes_1B[0]);//ID ACTU
					$idradi 		       = trim($datospartes_1B[1]);//ID RADICADO
					$radicado 		       = trim($datospartes_1B[2]);//RADICADO
					
					
					//SE REALIZA ESTA OPERACION POR QUE SI UN PROCESO
					//TIENE MAS DE UN MEMORIAL QUE PASA A DESPACHO
					//AL REVISAR, NO REVISADO, ASIGAR Y NO ASIGNAR SERVIDOR JUDICIAL
					//DEBE ACTUALIZAR LOS ID DE LAS ACTUACIONES CORRESPONDIENTES
					
					$idactuX = "IN(".trim($datospartes_1B[0]).")";//IDSMEMO
					
					//$sm = trim($datospartes_1B[3]);//SINMEMO
					
					/*if($sm == 1){
					
						$idsactu    = $modelo->get_ids_actuaciones($idradi);
						
						while($factu = $idsactu->fetch()){
				
				
							$idsactu_2 = $factu[idactu].",".$idsactu_2;
							
						}
					
						$idsactu_2 = rtrim($idsactu_2,",");
						
						$idactu    = "IN(".$idsactu_2.")";
					
					}
					else{
					
						$idactu  = "IN(".$idactu.")";
					}*/
					
					
					//echo $idactu;
					
					
					//SQL A EJECUTAR 
					
	
					$SQL_1 = "UPDATE detalle_correspondencia SET
					
					
								  estadoobs        = 3,
								  tareacerrada     = 'OK',
								  fechacerrar      = '$fechalog',
								  horacerrar       = '$horalog'
								 
							  WHERE id ".$idactuX;
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$accion       = "CERRAR TAREA";
								$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog." ID RADI:".$idradi." RADI:".$radicado;
								
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							//$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
				
				
				
				
				
  	}
	
	
	
	public function listar_procesos_revisadar($fechaii,$fechaif,$id_juzgado){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$fecha_actual = $modelo->get_fecha_actual_amd();
			
			
			$idusuario     = $_SESSION['idUsuario'];
			
			
			$listar = $this->db->prepare("
			
										    SELECT dc.id,ubi.id AS idradi,ubi.radicado,dc.fecha,ubi.idjuzgado_reparto,dc.observacion,t2.nombre AS solicitud,
											dc.revisasecretaria,dc.fecharevisecre,dc.horarevisecre,t1.ruta_local,ubi.fechasalida
											FROM (((detalle_correspondencia dc
											
											INNER JOIN ubicacion_expediente ubi ON dc.idcorrespondencia = ubi.id)
											LEFT JOIN correspondencia t1 ON dc.id_memorial = t1.id)
											LEFT JOIN pa_solicitud t2 ON t1.idsolicitud = t2.id)
											
											WHERE dc.id >= 1
											AND (DATE(dc.fecha) >= '$fechaii' AND DATE(dc.fecha) <= '$fechaif')
											AND ubi.idjuzgado_reparto = '$id_juzgado'
											AND ((dc.a_despacho = 1)
											OR (dc.observacion LIKE '%Proceso con liquidacion revisada, pendiente de pasar a Despacho.%'))
											GROUP BY dc.id_memorial
											ORDER BY ubi.radicado,dc.fecha"
											
										);
			
			
											
									

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function revisar_procesos_1(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
	
		
		$datospartes = trim($_POST['datospartes']);
		
		//echo $datospartes;
			
		$datospartes_1A = explode("******",$datospartes); 
		$longitud_1     = count($datospartes_1A);
		$i              = 0;
				
		while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
					$idactu 		       = trim($datospartes_1B[0]);//ID ACTU
					$idradi 		       = trim($datospartes_1B[1]);//ID RADICADO
					$radicado 		       = trim($datospartes_1B[2]);//RADICADO
					
					
					
					
					
					//SQL A EJECUTAR 
					
	
					$SQL_1 = "UPDATE detalle_correspondencia SET
					
								  a_despacho         = 1,
								  revisasecretaria   = 1,
								  fecharevisecre     = '$fechalog',
								  horarevisecre      = '$horalog'
								  
							  
							  WHERE id = '$idactu'";			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
					try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$accion       = "REVISA PROCESO PARA DESPACHO DESDE SECRETARIA";
								$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog." ID RADI:".$idradi." RADI:".$radicado." ID ACTU:".$idactu;
								
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
					} 
					catch (Exception $e) {
						
							
						$i = $longitud_1 - 1;
							
							
							
						//$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
						//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
						$this->db->rollBack();
							
						
						//echo $msg;
							
						$error_transaccion   = 1;
							
					}
						
					
				
					$i = $i + 1;
					
					
					
		}//FIN WHILE
				
		if($error_transaccion){
				
			echo $msg;
				
		}
		else{
					
			$msg = "1.PROCESO SE REALIZA CORRECTAMENTE";
					
			echo $msg;
				
		}
				
				
				
				
				
  	}
	
	public function no_revisar_procesos_1(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
	
		
		$datospartes = trim($_POST['datospartes']);
		
		//echo $datospartes;
			
		$datospartes_1A = explode("******",$datospartes); 
		$longitud_1     = count($datospartes_1A);
		$i              = 0;
				
		while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
					$idactu 		       = trim($datospartes_1B[0]);//ID ACTU
					$idradi 		       = trim($datospartes_1B[1]);//ID RADICADO
					$radicado 		       = trim($datospartes_1B[2]);//RADICADO
					
					
					
					
					
					//SQL A EJECUTAR 
					
	
					$SQL_1 = "UPDATE detalle_correspondencia SET
					
					
								 
								  revisasecretaria   = NULL,
								  fecharevisecre     = NULL,
								  horarevisecre      = NULL
								  
							  
							  WHERE id = '$idactu'";			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
					try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$accion       = "REVISA PROCESO PARA DESPACHO DESDE SECRETARIA";
								$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog." ID RADI:".$idradi." RADI:".$radicado." ID ACTU:".$idactu;
								
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
					} 
					catch (Exception $e) {
						
							
						$i = $longitud_1 - 1;
							
							
							
						//$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
						//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
						$this->db->rollBack();
							
						
						//echo $msg;
							
						$error_transaccion   = 1;
							
					}
						
					
				
					$i = $i + 1;
					
					
					
		}//FIN WHILE
				
		if($error_transaccion){
				
			echo $msg;
				
		}
		else{
					
			$msg = "1.PROCESO SE REALIZA CORRECTAMENTE";
					
			echo $msg;
				
		}
				
				
				
				
				
  	}
	
	public function get_dias_juzgado($idjxxi){
	
		
		$listar     = $this->db->prepare("SELECT * FROM pa_juzgado
										  WHERE idjxxi = '$idjxxi'");
	
  		$listar->execute();
		
		$field        = $listar->fetch();
		
		$dias = $field['dias'];
		

  		return $dias;
	
  	}
	
	
	public function get_days_for_month($m,$y){

		if($m == 02){ 
			if(($y % 4 == 0) && (($y % 100 != 0) || ($y % 400 == 0))){
				return 29;
			}else{
				return 28;
			}
		}
		if ($m == 4 || $m == 6 || $m == 9 || $m == 11){
			return 30;
		}else{
			return 31;
		}
	}


	public function recursivo_sabado_domingo($nuevafecha){

		$modelo     = new archivoModel();

		//------------DETERMINA SI LA NUEVA FECHA ES FESTIVO----------------
			
		$date   = date_create($nuevafecha);
		$fechat = date_format($date,'Y-n-j');
						
		$fecha = explode("-",$fechat);
						
		$year  = $fecha[0];
		$month = $fecha[1];
		$day   = $fecha[2];
		
		$date_2 = date('D', mktime(0,0,0,$month,$day,$year));
				
		//SABADO, SE SUMAN 2 DIAS
		if($date_2 == 'Sat'){
			
			//$fecha      = date('Y-m-j');
			$nuevafecha = strtotime ( '+2 day' , strtotime ( $fechat ) ) ;
			$nuevafecha = date ( 'Y-m-j' , $nuevafecha );
				
			$nuevafecha = $modelo->recursivo_festivo($nuevafecha);
				
		}
			
		//DOMINGO, SE SUMAN 1 DIA
		if($date_2 == 'Sun'){
			
			//$fecha      = date('Y-m-j');
			$nuevafecha = strtotime ( '+1 day' , strtotime ( $fechat ) ) ;
			$nuevafecha = date ( 'Y-m-j' , $nuevafecha );
				
			$nuevafecha = $modelo->recursivo_festivo($nuevafecha);
				
		}
		
		return $nuevafecha;		
		
	}

	public function recursivo_festivo($nuevafecha){
	
		require_once('funciones/Festivos.php');

		$modelo     = new archivoModel();

		//------------DETERMINA SI LA NUEVA FECHA ES FESTIVO----------------
				
		$date   = date_create($nuevafecha);
		$fechat = date_format($date,'Y-n-j');
						
		$fecha = explode("-",$fechat);
						
		$year  = $fecha[0];
		$month = $fecha[1];
		$day   = $fecha[2];
		
		//PARA DIAS FESTIVOS, SE LE AGREGA A ESTE ALGORITMO EL ORIGINAL NO LO TIENE
		$dias_festivos_2 = new festivos($year);
		$esfestivo_2     = $dias_festivos_2->esFestivo($day,$month);
				
		if($esfestivo_2 == 1){
				
			$nuevafecha = strtotime ( '+1 day' , strtotime ( $fechat ) ) ;
			$nuevafecha = date ( 'Y-m-j' , $nuevafecha );
			
			$nuevafecha = $modelo->recursivo_festivo($nuevafecha);
			
			
				
		}
		
		$nuevafecha = $modelo->recursivo_sabado_domingo($nuevafecha);
		
		return $nuevafecha;		
		
	}
	
	public function traer_fechas_despacho($fechat,$diasti_actual){
	
	
			require_once('funciones/Festivos.php');
	
			$modelo = new archivoModel();
			
		
			//----------------------------------------------------------------------------------------------
	
			//21 DE AGOSTO 2020
			//CALCULO SI LA FECHA ACTUAL ES SABADO,DOMINGO O FESTIVO Y SUMO A LA FECHA HABIL SIGUIENTE
			//ESTO CON EL OBJETO DE QUE CUANDO SE ASIGNE UNA TAREA POR PARTE DE JUEZ 
			//LA FECHA INICIAL Y FINAL NO SALGAN CON INCONSISTENCIAS
		
			//$fechat = trim('2020-08-22');
			
			//$fechat = trim('2020-04-09');
			
			//$fechat = trim($_GET['fechat']);
			$date   = date_create($fechat);
			$fechat = date_format($date,'Y-n-j');
					
			$fecha = explode("-",$fechat);
					
			$year  = $fecha[0];
			$month = $fecha[1];
			$day   = $fecha[2];
					
					
			//PARA DIAS FESTIVOS, SE LE AGREGA A ESTE ALGORITMO EL ORIGINAL NO LO TIENE
			$dias_festivos = new festivos($year);
		
			//extract($_POST);
			//if(!isset($day) or !isset($month) or !isset($year) or !isset($diasti)){ exit; }
			
			if(!isset($day) or !isset($month) or !isset($year)){ exit; }
			
			
			$date = date('D', mktime(0,0,0,$month,$day,$year));
						
			//PARA DIAS FESTIVOS, SE LE AGREGA A ESTE ALGORITMO EL ORIGINAL NO LO TIENE
			$esfestivo = $dias_festivos->esFestivo($day,$month);
						
			if($date == 'Sat' or $date == 'Sun' or $esfestivo == 1){
						
				
				
				//$nueva_fecha = "NO ES HABIL";
				
				//SABADO, SE SUMAN 2 DIAS
				if($date == 'Sat'){
				
					//$fecha      = date('Y-m-j');
					$nuevafecha = strtotime ( '+2 day' , strtotime ( $fechat ) ) ;
					$nuevafecha = date ( 'Y-m-j' , $nuevafecha );
					
					$nuevafecha = $modelo->recursivo_festivo($nuevafecha);
					
				}
				
				//DOMINGO, SE SUMAN 1 DIA
				if($date == 'Sun'){
				
					//$fecha      = date('Y-m-j');
					$nuevafecha = strtotime ( '+1 day' , strtotime ( $fechat ) ) ;
					$nuevafecha = date ( 'Y-m-j' , $nuevafecha );
					
					$nuevafecha = $modelo->recursivo_festivo($nuevafecha);
					
				}
				
				//FESTIVO, SE SUMAN 1 DIA
				if($esfestivo == 1){
				
					//$fecha      = date('Y-m-j');
					$nuevafecha = strtotime ( '+1 day' , strtotime ( $fechat ) ) ;
					$nuevafecha = date ( 'Y-m-j' , $nuevafecha );
					
					$nuevafecha = $modelo->recursivo_festivo($nuevafecha);
					
				}
				
				
				
				//echo $nuevafecha;
		
			}
			else{
						
				
				$nuevafecha = $fechat;
				
				//echo $nuevafecha;
				
			}
			
			
		//----------------------------------------------------------------------------------------------
		
		
		
		$fechat = $nuevafecha;
		
		
		//REALIZO ESTE WHILE PARA QUE CALCULE DE UNA VEZ LA FECHA INCIAL Y FINAL DE LA TAREA ASIGNADA
		$if = 0;
		while($if < 2){
			
			//FECHA INICAL
			if($if == 0){
			
				//$fechat = trim($_GET['fechat']);
				$date   = date_create($fechat);
				$fechat = date_format($date,'Y-n-j');
				
				$fecha = explode("-",$fechat);
				
				$year  = $fecha[0];
				$month = $fecha[1];
				$day   = $fecha[2];
				
				$diasti = 0;
			}
			//FECHA FINAL
			if($if == 1){
			
				//$fechat = trim($_GET['fechat']);
				$date   = date_create($fechat);
				$fechat = date_format($date,'Y-n-j');
				
				$fecha = explode("-",$fechat);
				
				$year  = $fecha[0];
				$month = $fecha[1];
				$day   = $fecha[2];
				
				//$diasti = 20;
				
				//$diasti = trim($_GET['dias']);
				
				$diasti = $diasti_actual;
				
				
			}
			
			//extract($_POST);
			if(!isset($day) or !isset($month) or !isset($year) or !isset($diasti)){ exit; }
			
			$inhabiles = array('5/2/2013');
			$habiles   = array();
			
			//for($y=2014; $y<=2020; $y++){
			for($y=date('Y'); $y<=date('Y') + 1; $y++){
			
				//PARA DIAS FESTIVOS, SE LE AGREGA A ESTE ALGORITMO EL ORIGINAL NO LO TIENE
				//$dias_festivos = new festivos($y);
			
				for($m=1; $m<=12; $m++){
				
					for($d=1; $d<=$modelo->get_days_for_month($m,$y); $d++){
					
						$date = date('D', mktime(0,0,0,$m,$d,$y));
						
						//PARA DIAS FESTIVOS, SE LE AGREGA A ESTE ALGORITMO EL ORIGINAL NO LO TIENE
						$esfestivo = $dias_festivos->esFestivo($d,$m);
						
						if($date == 'Sat' or $date == 'Sun' or $esfestivo == 1){
						
							$inhabiles[] = date("j/n/Y", mktime(0,0,0,$m,$d,$y));
						}
						else{
						
							if(!in_array(date("j/n/Y", mktime(0,0,0,$m,$d,$y)),$inhabiles)){
								$habiles[] = date("j/n/Y", mktime(0,0,0,$m,$d,$y));
							}
						}
						
						
					}
				}
			}
			
			$date     = $day.'/'.$month.'/'.$year;
			$contador = array_search($date,$habiles);
			
			$cadenafechas .= $habiles[$diasti+$contador]." ";
			
			$if = $if + 1;
		
		}//FIN WHILE
		
		//echo $habiles[$diasti+$contador];
		return $cadenafechas;
		
	
	}
	
	public function listar_memoriales_proceso($idradi){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$fecha_actual = $modelo->get_fecha_actual_amd();
			
			
			$idusuario     = $_SESSION['idUsuario'];
			
			
			$listar = $this->db->prepare("
			
										  	SELECT
											dc.id AS idactu
											
											FROM ((((
											
											detalle_correspondencia dc
											
											INNER JOIN ubicacion_expediente ubi ON dc.idcorrespondencia = ubi.id)
											LEFT  JOIN correspondencia       t1 ON dc.id_memorial       = t1.id)
											LEFT  JOIN pa_solicitud          t2 ON t1.idsolicitud       = t2.id)
											LEFT  JOIN pa_usuario            t3 ON dc.idrevisojuz2      = t3.id)
											
											WHERE dc.id >= 1
											AND ubi.idjuzgado_reparto = ubi.idjuzgado_reparto
											AND (dc.estadoobs != 3 AND dc.estadoobs != 4)
											AND ((dc.a_despacho = 1) OR (dc.observacion LIKE '%Proceso con liquidacion revisada, pendiente de pasar a Despacho.%'))
											AND dc.idcorrespondencia = '$idradi'
											
											AND dc.revisasecretaria = 1
											
											ORDER BY dc.fecha DESC,ubi.radicado"
														
										);
			
			
											
											
			

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function listar_memoriales_proceso_2($idradi){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$fecha_actual = $modelo->get_fecha_actual_amd();
			
			
			$idusuario     = $_SESSION['idUsuario'];
			
			
			$listar = $this->db->prepare("
			
										  	SELECT
											
											dc.id AS idactu
											
											FROM ((((
											
											detalle_correspondencia dc
											
											INNER JOIN ubicacion_expediente ubi ON dc.idcorrespondencia = ubi.id)
											LEFT  JOIN correspondencia       t1 ON dc.id_memorial       = t1.id)
											LEFT  JOIN pa_solicitud          t2 ON t1.idsolicitud       = t2.id)
											LEFT  JOIN pa_usuario            t3 ON dc.idrevisojuz2      = t3.id)
											
											WHERE dc.id >= 1
											AND ubi.idjuzgado_reparto = ubi.idjuzgado_reparto
											AND (dc.estadoobs != 3 AND dc.estadoobs != 4)
											AND ((dc.a_despacho = 1) OR (dc.observacion LIKE '%Proceso con liquidacion revisada, pendiente de pasar a Despacho.%'))
											AND dc.idcorrespondencia = '$idradi'
											
											AND dc.estadoobs = 2 
											
											AND dc.revisasecretaria = 1
											
											ORDER BY dc.fecha DESC,ubi.radicado"
														
										);
			
			
											
											
			

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function get_tiene_acumulada($id_radi){
	
		$listar     = $this->db->prepare("SELECT COUNT(idradiacumulado) AS tieneacumulada 
										  FROM ubicacion_expediente 
										  WHERE id = '$id_radi'");
	
  		$listar->execute();

  		return $listar;
	
	}
	
	public function get_tiene_acumulada_2($id_radi){
	
		$listar     = $this->db->prepare("SELECT COUNT(idradiacumulado) AS tieneacumuladaproc FROM ubicacion_expediente 
			                   			  WHERE idradiacumulado LIKE '%".trim($id_radi)."%'
								          ORDER BY radicado");
	
  		$listar->execute();

  		return $listar;
	
	}
	
	public function get_tarea_abierta(){
	
		//SE REALIZA EL FILTRO DESDE 2020-08-13, YA QUE FUE EL DIA QUE SE
		//REALIZO REPARTO A DESPACHO CON LAS NUEVAS OPCIONES DE LA PLATAFORMA
		//DEL EXPEDIENTE DIGITAL, HASTA CURDATE() FUNCION QUE CALCULA LA 
		//FECHA ACTUAL EN MYSQL DE FORMA YYYY-MM-DD
		//4 hernando rios J1, 59 carolina henao J2
	
		$listar     = $this->db->prepare("SELECT COUNT(t1.id) AS idcantida
										  FROM ((detalle_correspondencia t1
										  INNER JOIN ubicacion_expediente t2 ON t1.idcorrespondencia = t2.id)
										  INNER JOIN pa_usuario           t3 ON t1.id_user_asignada  = t3.id)
										  WHERE t1.id_user_asignada IN(4,59)
										  AND t1.estadoobs = 2
										  AND DATE(t1.fecha)>= '2020-08-13' AND DATE(t1.fecha)<= CURDATE()
										  AND t1.observacion LIKE '%COSTAS%'
										  ORDER BY t1.id DESC");
	
  		$listar->execute();

  		return $listar;
	
	}
	
	public function devolucion_bloque(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
	
		
				$datospartes = trim($_POST['datospartes']);
			
				$datospartes_1A = explode("******",$datospartes); 
				$longitud_1     = count($datospartes_1A);
				$i              = 0;
				
				while($i < $longitud_1 - 1){
				
				
					//2 EXPLODE
					$datospartes_1B = explode("//////",$datospartes_1A[$i]);
					
					$idactu 	  = trim($datospartes_1B[0]);//ID ACTU
					$idradi       = trim($datospartes_1B[1]);//ID RADICADO
					$radicado 	  = trim($datospartes_1B[2]);//RADICADO
					
					$tareacerrada = utf8_decode(trim($datospartes_1B[4]));//DESCRIPCION
					
					
					//SE REALIZA ESTA OPERACION POR QUE SI UN PROCESO
					//TIENE MAS DE UN MEMORIAL QUE PASA A DESPACHO
					//AL REVISAR, NO REVISADO, ASIGAR Y NO ASIGNAR SERVIDOR JUDICIAL
					//DEBE ACTUALIZAR LOS ID DE LAS ACTUACIONES CORRESPONDIENTES
					
					$idactuX = "IN(".trim($datospartes_1B[0]).")";//IDSMEMO
					
					//$sm = trim($datospartes_1B[3]);//SINMEMO
					
					/*if($sm == 1){
					
						$idsactu    = $modelo->get_ids_actuaciones($idradi);
						
						while($factu = $idsactu->fetch()){
				
				
							$idsactu_2 = $factu[idactu].",".$idsactu_2;
							
						}
					
						$idsactu_2 = rtrim($idsactu_2,",");
						
						$idactu    = "IN(".$idsactu_2.")";
					
					}
					else{
					
						$idactu  = "IN(".$idactu.")";
					}*/
					
					
					//echo $idactu;
					
					
					//SQL A EJECUTAR 
					
	
					$SQL_1 = "UPDATE detalle_correspondencia SET
					
					
								  estadoobs        = 4,
								  tareacerrada     = '$tareacerrada',
								  fechacerrar      = '$fechalog',
								  horacerrar       = '$horalog'
								 
							  WHERE id ".$idactuX;
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$accion       = "DEVOLUCION DESDE DESPACHO";
								$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog." ID RADI:".$idradi." RADI:".$radicado;
								
								$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
												 VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							$i = $longitud_1 - 1;
							
							
							
							//$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
					
				
					$i = $i + 1;
					
					
					
				}//FIN WHILE
				
				if($error_transaccion){
				
					echo $msg;
				
				}
				else{
					
					$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
					echo $msg;
				
				}
				
				
				
				
				
  	}
	
	public function get_SOLICITUD_DIGITALIZAR(){
	
		
		$listar = $this->db->prepare("	
										SELECT t1.id,t2.id AS idradicado,t2.radicado,t3.empleado,t1.fecha,t1.hora,t3.esabogado,t3.correo,
										t1.respuesta,t1.fecha_res,t1.hora_res,t1.bandera_res,t1.idusuario_res,t3.nombre_usuario
										FROM ((expe_solicitud t1
										INNER JOIN ubicacion_expediente t2 ON t1.idradicado    = t2.id)
										INNER JOIN pa_usuario_expe      t3 ON t1.idsolicitante = t3.id)
										WHERE (t2.digitalizado IS NULL OR (SELECT COUNT(id) FROM expe_digital WHERE idradicado = t1.idradicado) = 0)
										AND (t1.bandera_res IS NULL OR t1.bandera_res = 0) 
										
										
									");
								
		$listar->execute();
									
		return $listar;							
		
		
		
	}
	
	//NUEVO 25 DE NOVIEMBRE
	
	public function listar_memoriales_radicados(){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$fecha_actual = $modelo->get_fecha_actual_amd();
			
			
			$idusuario     = $_SESSION['idUsuario'];
			
										
			$listar = $this->db->prepare("
			
										 	SELECT t1.id,t2.id AS idradicado,t2.radicado,t2.idjuzgado,t2.idjuzgado_reparto,t2.digitalizado,
											t3.id AS idregistra,t3.nombre_usuario,t3.empleado,t3.correo,t1.fecha,t1.hora,t1.des,t1.ruta,t1.folios,
											t1.vizualizar,t1.respuesta,t1.idedita,t1.fechaedita,t1.horaedita,t3.celular
											FROM ((expe_solicitud_memo t1
											INNER JOIN ubicacion_expediente t2 ON t1.idradicado = t2.id)
											INNER JOIN pa_usuario_expe      t3 ON t1.idsolicitante   = t3.id)
											WHERE (t1.vizualizar = 1)
											ORDER BY t1.id DESC"
											
										);
										
			
			/*
			ASI SE VISULIZAN TODOS LOS MEMORIALE SEN SU ESTADO ( 0 MEMORIAL RADICADO, 1 RADICAR MEMORIAL, 2 MEMORIAL DEVUELTO)
			SE AJUSTA PARA QUE SOLO SE VEA 1 RADICAR MEMORIAL Y LOS OTROS DOS ESTADOS SE CARGUEN POR BUSQUEDAD
			WHERE (t1.vizualizar = 1 || t1.vizualizar = 0 || t1.vizualizar = 2)
			*/ 							
								

  			$listar->execute();

  			return $listar;
	
  	}
	
	
	public function listar_memoriales_radicados_filtro($datoJXX1,$datoJXX3,$datoJXX5,$datoJXX2,$datoJXX4,$datoJXX6){
	
	
			set_time_limit (240000000);
	
			$idusuario  = $_SESSION['idUsuario'];
			
		
			$filtrox;
			
			$filtrof;
			
			$filtro1;
			$filtro2;
			$filtro4;
			$filtro6;
			
		
			/*$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			$datox1    = trim($_GET['datox1']);
			$datox2    = trim($_GET['datox2']);
			$datox4    = trim($_GET['datox4']);*/
			
			
			
			
			if ( !empty($datoJXX3) && !empty($datoJXX5) ) {
			
				$filtrof   = " AND (t1.fecha >= '$datoJXX3' AND t1.fecha <= '$datoJXX5')";
				
				
			}
			
			
			if ( !empty($datoJXX1) ) {
			
				
				
				$filtro1 = " AND t2.radicado LIKE '%$datoJXX1%' ";
			
			}
			if ( !empty($datoJXX2) ) {
			
				
				$filtro2 = " AND t3.nombre_usuario = '$datoJXX2' ";
			
			}
			
			if ( !empty($datoJXX4) ) {
			
	
				$filtro4 = " AND t3.empleado LIKE '%$datoJXX4%' ";
			
			}
			
			if ( !empty($datoJXX6) ||  $datoJXX6 == 0) {
			
				
				$filtro6 = " AND t1.vizualizar = '$datoJXX6' ";
			
			}
			
			$filtrox = $filtro1." ".$filtro2." ".$filtro4." ".$filtro6." ".$filtrof;
		
			
			
			$listar = $this->db->prepare("
				
												SELECT t1.id,t2.id AS idradicado,t2.radicado,t2.idjuzgado,t2.idjuzgado_reparto,t2.digitalizado,
												t3.id AS idregistra,t3.nombre_usuario,t3.empleado,t3.correo,t1.fecha,t1.hora,t1.des,t1.ruta,t1.folios,
												t1.vizualizar,t1.respuesta,t1.idedita,t1.fechaedita,t1.horaedita,t3.celular
												FROM ((expe_solicitud_memo t1
												INNER JOIN ubicacion_expediente t2 ON t1.idradicado = t2.id)
												INNER JOIN pa_usuario_expe      t3 ON t1.idsolicitante   = t3.id)
												WHERE t1.id >= '1'" .$filtrox. "
												/*AND (t1.vizualizar = 1 || t1.vizualizar = 0 || t1.vizualizar = 2)*/
												ORDER BY t1.id DESC"
												
												
										);
			
			/*
			ASI SE VISULIZAN TODOS LOS MEMORIALE SEN SU ESTADO ( 0 MEMORIAL RADICADO, 1 RADICAR MEMORIAL, 2 MEMORIAL DEVUELTO)
			SE AJUSTA PARA QUE SOLO SE CARGUEN POR BUSQUEDAD, SI DEFINEN $filtro6 = " AND t1.vizualizar = '$datoJXX6' ";
			AND (t1.vizualizar = 1 || t1.vizualizar = 0 || t1.vizualizar = 2)
			*/ 														
			
			
  			$listar->execute();
			
			

  			return $listar;
	
  	}
	
	public function radicar_memorial(){
	
		

		$modelo = new archivoModel();
		
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
		$tipo_documento = utf8_decode(trim($_POST['tipo_documento']));
		$juzgadodestino = trim($_POST['juzgadodestino']);
		$solicitud      = trim($_POST['solicitud']);	
		$peticionario   = utf8_decode(trim($_POST['peticionario']));
		$folios         = trim($_POST['folios']);		
		$recibe         = trim($_POST['recibe']);
		$cuaderno       = trim($_POST['cuaderno']);	
		$a_despacho     = trim($_POST['a_despacho']);
		$correo         = utf8_decode(trim($_POST['correo']));		
		$telefono       = utf8_decode(trim($_POST['telefono']));
		$observacionesm	= utf8_decode(trim($_POST['observacionesm']));
		
		//CAMPOS OCULTOS
		$idubicacionexpediente = trim($_POST['nombre']);
		$radicado              = trim($_POST['radicado']);
		$idmemoexterno         = trim($_POST['idmemoexterno']);
		$juzgado               = trim($_POST['idjuzgado']);
		$digital               = trim($_POST['digital']);
		
		$text_lista_ts            = utf8_decode(trim($_POST['text_lista_ts']));
		$nombre_archivo_solicitud = utf8_decode(trim($_POST['text_lista_na']));
		
		$archivomemo           = trim($_POST['archivomemo']);
		$cedula                = trim($_POST['cedula']);
		$id_memo_peticionario  = trim($_POST['id_memo_peticionario']);
		$fecha_crem            = trim($_POST['fecha_crem']);
		
		//RUTA LOCAL
		$ruta_memo_1 = explode("/",$archivomemo);
		$ruta_memo_2 = trim($ruta_memo_1[3]);//NOMBRE MEMORIAL
		
		
		//AQUI SE CREA EL DIRECTORIO
		//NOTA: SE AGREGA ESTA PARTE YA QUE LA CARPETA CON EL ID
		//DE USUARIO EN SESION DEBE EXISTIR EN LA CARPETA MEMORIALES
		if(is_dir('MEMORIALES'.'/'.$idusuario)){$bandera=0;}
		else{mkdir('MEMORIALES'.'/'.$idusuario, 0, true);}

		
		
		$ruta_local = "MEMORIALES/".$idusuario."/".$ruta_memo_2;
		
		//RUTAS PARA MOVER MEMORIAL DE PLATAFORMA PUBLICACIONES A PLATAFORMA EJECUCION
		$memo_publicaciones = 'C:/wamp/www/publicaciones/'.$archivomemo;
		$memo_ejecucion     = 'C:/wamp/www/ejecucion/'.$ruta_local;
		
	
		$solicitud1 = explode("-", $solicitud);
		$finsol     = $solicitud1[1];
		$solicitud  = $solicitud1[0];
		$actu       = "Recepciï¿½n Memorial por " .utf8_decode($finsol);
		
		$fecha_entrega = $modelo->get_fecha_actual_amd();
		$hora_militar  = $modelo->get_hora_actual_24horas();
		
		date_default_timezone_set('America/Bogota');
		$fecha = date('Y-m-d g:i');
		
		
		$error_transaccion = 0; //variable para detectar error
		$msgError          = "";
		
		//CONEXION BASE DE DATOS JUSTICIA XXI
		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
		
		

		//-------------------------SE REGISTRAN LOS DATOS EN LA TABLA-----------------------------------------
										
		try {  
										 
				$ENTRE = 0;
						
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
											
											
											
				//*********************************NUEVA CONEXON**************************************************
						
				$serverName     = $datosbd_1; //serverName\instanceName
				$connectionInfo = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
				$conn           = sqlsrv_connect( $serverName, $connectionInfo);
													
													
				if( $conn === false ) {
														
					$error_transaccion = 1;
													
					$ENTRE = 1;
													
					if( ($errors = sqlsrv_errors() ) != null) {
														
						foreach( $errors as $error ) {
															
							$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
							
						}
					}
														
					//echo "ENTRE 1";
														
				}
													
				//Iniciar la transacciï¿½n.
				if ( sqlsrv_begin_transaction( $conn ) === false ) {
														 
					$error_transaccion = 1;
													
					$ENTRE = 2;
													
					if( ($errors = sqlsrv_errors() ) != null) {
														
						foreach( $errors as $error ) {
															
							$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
							
						}
						
					}
														 
					//echo "ENTRE 2";
														 
				}
											
											
											
				if($existe==true){
												
					$existes =  "no";
					
				}
				else{
											
					$existes = "si";
												
				}	
				
				//MOVER MEMORIAL DE PLATAFORMA PUBLICACIONES A PLATAFORMA EJECUCION
				if (!copy($memo_publicaciones, $memo_ejecucion)) {
				
					$error_transaccion = 1;
					$msgError .= "1.ERROR AL MOVER EL MEMORIAL DE PLATAFORMA PUBLICACIONES A PLATAFORMA EJECUCION...\n";
					
				}		
				
				//---------------------VALIDAR RENOMBRAR-NOMBRE ARCHIVO 15 DE ABRIL 2021----------------------------------------
				
				
				//DOCUMENTOS CARGADOS EN expe_digital 
				$cantidad_documentos      = $modelo->get_cantidad_documentos($cuaderno,$idubicacionexpediente);
				$filadoc                  = $cantidad_documentos->fetch();
				$cantidad_doc             = $filadoc[numero];
				
				//SI TIENE CARGADOS, Y SEGUN EL CUEADERNO SELECCIONADO
				//SE TRAE EL NUMERO SIGUIENTE DE LA COLUMNA orden_documento TABLA expe_digital 
				//PARA CONCATER CON EL NOMBRE DEL ARCHIVO QUE SE ESTA SUBIENDO
				//EJEMPLO: 01CONSTANCIAS.pdf
				if($cantidad_doc >= 1){
														
					$datos_orden_documento    = $modelo->get_orden_documento_siguente($cuaderno,$idubicacionexpediente);
					$filaod                   = $datos_orden_documento->fetch();
					$orden_documento_siguente = $filaod[orden_documento_siguente];
					
					$orden_documento          = $orden_documento_siguente;
															
				}
				//SI NO TIENE CARGADOS, SERIA EL PRIMERO,
				//INDEPENDIENTE DEL CUADERNO QUE SE SELECCIONE
				else{
															
					$orden_documento_siguente = 1;
					
					$orden_documento          = $orden_documento_siguente;
				}
				
				if($orden_documento_siguente >= 1 && $orden_documento_siguente <= 9){												
			
					$orden_documento_siguente = "0".$orden_documento_siguente;
				}
				
				
				
			
				$nombre_archivo_tipo      = explode(".",$ruta_memo_2);
				
				$nombre_archivo_solicitud = date('ymdhis').'-'.$orden_documento_siguente.$nombre_archivo_solicitud.".".$nombre_archivo_tipo[1];
				
				if ( rename($memo_ejecucion, 'C:/wamp/www/ejecucion/'.'MEMORIALES/'.$idusuario.'/'.$nombre_archivo_solicitud) ) {
				
					$error_transaccion = 0;
					
					//$rutaarchivo = $raiz.'/'.$nom.'/'.$nombre_archivo_solicitud;
					
					$ruta_local = "MEMORIALES/".$idusuario."/".$nombre_archivo_solicitud;
	
				} 
				else{
				
					$error_transaccion = 1;
					$msgError .= "1B.ERROR AL RENOMBRAR EL ARCHIVO...\n";
				
					
				}
				
		
				//---------------------FIN VALIDAR RENOMBRAR-NOMBRE ARCHIVO-----------------------------------------------------					
														  
				
				//ADICIONADO EL 19 DE ABRIL 2021
				if($error_transaccion == 0){
				
											
				$this->db->exec("INSERT INTO correspondencia (fecha_registro,radicado,peticionario,cedula,telefono,tipo_documento,idjuzgado,fecha_entrega,idjuzgadodestino,
								 idsolicitud,idusuario,folios,generado,existe,idubicacionexpediente,observacionesm,ruta_local,
								 id_memo_externo,id_memo_peticionario,memo_correo,fecha_creacion)
								 VALUES ('$fecha','$radicado','$peticionario','$cedula','$telefono','$tipo_documento','$juzgado','$fecha_entrega','$juzgadodestino',
								'$solicitud','$idusuario','$folios','no','$existes','$idubicacionexpediente','$observacionesm','$ruta_local',
								'$idmemoexterno','$id_memo_peticionario','$correo','$fecha_crem')");				  	  
												
												
											
				//SE REFIERE AL TIPO DE SOLICITUD (SOLICITUD OFICIOS)
				//Y NO SE ADICIONA AL EXPEDIENTE DIGITAL
				//ADICIONADO EL 24 DE AGOSTO2020
				//if($solicitud != 118){
				
					  
					 	 //-------------------SE REGISTRA LA TABLA expe_digital Y ALIMENTAR EL EXPEDIENTE DIGITAL DESDE EL AREA DE MEMORIALES-----------------
						 
						 $last_id_memo = $this->db->lastInsertId();
						 
						 
						 //SE VERIFICA QUE EXISTA INFORMACIONE EN LA TABLA expe_digital, PARA ADICIONAR EL MEMORIAL
						 $numero_doc = $this->db->prepare("SELECT COUNT(id) AS numero FROM expe_digital
				 										   WHERE idradicado = '$idubicacionexpediente'");
				
					  	 $numero_doc->execute(); 
						 $doc_cant     = $numero_doc->fetch();
						 $numero_doc_2 = $doc_cant[numero];
					  	 //$numero_doc_2 = $numero_doc->rowCount();
						 
						
						 
						 if($numero_doc_2 >= 1){
						 
						 
						 
							 //$last_id_memo = $this->db->lastInsertId();
							 
							 
							 
							 //-----------ARMAR DIRECTORIO RADICADO--------------
			
							//EJ: 17001400300220140017100 ---> 220140017100
							//EJ: 17001400301220140017100 ---> 1220140017100
							
							$valorradicado = $radicado;
							
							$cadena_juzgado;
							$valorradicado_8 = substr($valorradicado, 10, 2);
							$J;
							// Recorremos cada carï¿½cter de la cadena
							for($i=0; $i<strlen($valorradicado_8); $i++){
								
								if($valorradicado_8[0] == 0){
									
									$cadena_juzgado = substr($valorradicado, 11, 13);
									
									$i = strlen($valorradicado_8);
									
									$J = "J".substr($valorradicado, 11, 1);
								}
								
								if($valorradicado_8[0] == 1){
									
									$cadena_juzgado = substr($valorradicado, 10, 13);
									
									$i = strlen($valorradicado_8);
									
									$J = "J".substr($valorradicado, 10, 2);
								}
								
								
							}
							
							$nom_2 = trim($J."/".$cadena_juzgado);
							
							//-----------FIN ARMAR DIRECTORIO RADICADO---------
							 
							 
				
							//SE REALIZA OPERACION SI EL EXPEDIENTE ESTA DIGITALIZADO
							/*$digital       = trim($_POST['digital']);
							$cuaderno      = trim($_POST['cuaderno']);
							$a_despacho    = trim($_POST['a_despacho']);
							$text_lista_ts = trim($_POST['text_lista_ts']);*/
							
										
							if($digital == 1){
							
							
									//MOVER MEMORIAL DE PLATAFORMA PUBLICACIONES A PLATAFORMA EJECUCION A LA CARPETA EXPEDIENTE_DIGITAL_2
									$memo_digital_ejecucion = 'C:/wamp/www/ejecucion/EXPEDIENTE_DIGITAL_2/'.$nom_2."/".$ruta_memo_2;
									
						
									if (copy($memo_publicaciones,$memo_digital_ejecucion)) {
									//if (move_uploaded_file($memo_publicaciones,$memo_digital_ejecucion)) {
									
									
										$erro_archivo = 0;
										
														
									}
									else{ 
									
										$erro_archivo = 1;
										
										$error_transaccion = 1;
										$msgError .= "2.ERROR AL MOVER EL MEMORIAL DE PLATAFORMA PUBLICACIONES A PLATAFORMA EJECUCION A LA CARPETA EXPEDIENTE_DIGITAL_2...\n";
												
									}
									
									
									//---------------------VALIDAR RENOMBRAR-NOMBRE ARCHIVO 15 DE ABRIL 2021----------------------------------------
			
									//$nombre_archivo_tipo      = explode(".",$ruta_memo_2);
									
									//$nombre_archivo_solicitud = date('ymdhis').'-'.$nombre_archivo_solicitud.".".$nombre_archivo_tipo[1];
									
									if ( rename($memo_digital_ejecucion, 'C:/wamp/www/ejecucion/EXPEDIENTE_DIGITAL_2/'.$nom_2."/".$nombre_archivo_solicitud) ) {
									
										$erro_archivo      = 0;
										$error_transaccion = 0;
										
										$memo_digital_ejecucion = 'C:/wamp/www/ejecucion/EXPEDIENTE_DIGITAL_2/'.$nom_2."/".$nombre_archivo_solicitud;
						
									} 
									else{
									
										$erro_archivo      = 1;
										$error_transaccion = 1;
										
										$msgError .= "1C.ERROR AL RENOMBRAR EL ARCHIVO...\n";
									
										
									}
									
									
									//---------------------FIN VALIDAR RENOMBRAR-NOMBRE ARCHIVO-----------------------------------------------------
									
									
												
																
									if($erro_archivo == 0){
											
										$idradicado = $idubicacionexpediente;
										$fecha_2    = $modelo->get_fecha_actual_amd();
										$hora_2     = $modelo->get_hora_actual_24horas();
										$des        = $observacionesm;
										
										//---------------------------------------------------------------------------------------------------------------------------- 
										
										//SE INCORPORA MEMORIAL AL PROCESO DESDE SU REGISTRO
										//ADICINADO EL 8 DE SEPTIEMBRE DE 2020
										$this->db->exec("UPDATE correspondencia SET 
							
															 incorporaexpediente  = 1,
															 fecha_incorpora      = '$fecha_2'
															
														 WHERE id = '$last_id_memo'");
														 
														 
										
										/*$notaexp = "SE AGREGA MEMORIAL AL EXPEDIENTE, ID MEMORIAL.: ".$last_id_memo; 	 
										
										date_default_timezone_set('America/Bogota'); 
										$fecharegistro_INC = date('Y-m-d g:i');
										$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,id_memorial,idusuario) 
									     				 VALUES('$idradicado','$fecharegistro_INC','$notaexp','$last_id_memo','$idusuario')");*/				
														 
														 
										
										//--------------------------------------FIN------------------------------------------------------------------------------------ 
										
										
										//OBSERVACION tipo documento + tipo de solicitud
										date_default_timezone_set('America/Bogota'); 
										$fecharegistro = date('Y-m-d g:i');
										
										$obs_M = $tipo_documento." - ".$text_lista_ts." - ".$des;
										$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,estadoobs,id_memorial,a_despacho,idusuario) 
														 VALUES('$idradicado','$fecharegistro','$obs_M',0,'$last_id_memo','$a_despacho','$idusuario')"); 
										
										
										//$ruta = 'EXPEDIENTE_DIGITAL_2/'.$nom_2."/".$ruta_memo_2;
										
										$ruta = 'EXPEDIENTE_DIGITAL_2/'.$nom_2."/".$nombre_archivo_solicitud;
												
																
										$this->db->exec("INSERT INTO expe_digital (idradicado,fecha,hora,folios,cuaderno,tipo,ruta,des,idusuario,estado,idcorrespondencia,id_dependencia,
										                 fecha_creacion,fecha_de,fecha_a,origen,orden_documento) 
														 VALUES ('$idradicado','$fecha_2','$hora_2','$folios','$cuaderno','application/pdf','$ruta','$obs_M','$idusuario',1,'$last_id_memo',18,
														 '$fecha_crem','0000-00-00','0000-00-00',2,'$orden_documento')");
																
										//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
										$last_id_2 = $this->db->lastInsertId();
															
																 
																
										//HISTORIAL
										$actuacion = 'REGISTRO FOLIO(S)';
										$tablas    = 'expe_digital';
										$tipo      = 'RF';
										$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo,idexpdigi,id_dependencia,
										                 fecha_creacion,fecha_de,fecha_a,origen,orden_documento)
														 VALUES('$idradicado','$idusuario','$fecha_2','$hora_2','$actuacion','$tablas','$ruta','$tipo','$last_id_2',18,
														 '$fecha_crem','0000-00-00','0000-00-00',2,'$orden_documento')");
											
																 
											
									}
									 
									
							} 
							
						
						}
						
						//---------------FIN SE REGISTRA LA TABLA expe_digital Y ALIMENTAR EL EXPEDIENTE DIGITAL DESDE EL AREA DE MEMORIALES------------------------
					  
					  
				//}// FIN if($solicitud != 118){
											
				
				//PARA INDICAR QUE EL MEMORIAL RADICADO POR EL ABOGADO O PARTE (DDTE O DDO)
				//YA FUE PROCESADO POR EL AREA DE MEMORIALES DE LAOFICINA DE EJECUCION
				$this->db->exec("UPDATE expe_solicitud_memo SET 
							
									vizualizar  = 0
															
								 WHERE id = '$idmemoexterno'");
											
											
				//REGISTRAR ACTUACION EN JUSTICIA XXI
										
				$sininstancia = $radicado;
				$sin          = substr($sininstancia, 0, 21);
				
				
				$sql = ("	
						
							
			
							UPDATE t103dainfoproc SET a103descacts='Recepciï¿½n Memorial', a103codiacts='30000123', a103codipads='30000123', 
							a103fechdess = GETDATE(), a103anotacts = '$actu'
							WHERE a103llavproc='$radicado';
															
								
						");	
												
												
				
						$params  = array();
						$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
						$stmt = sqlsrv_query( $conn, $sql , $params, $options );
													
													
						if( $stmt === false ) {
													
							$error_transaccion = 1;
												
							$ENTRE = 5;
													
							if( ($errors = sqlsrv_errors() ) != null) {
														
								foreach( $errors as $error ) {
															
									$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
								}
							}
												
						}	
										
						sqlsrv_free_stmt( $stmt);
						
						
				
				$sql_2 = ("	
						
							declare @cad integer 
			
																		
							SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$radicado' 
														
							INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
							A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
							A110RENUTERM) values('$radicado',@cad,'$sin','00','30000123','30000123','Recepciï¿½n Memorial','N','NO','N',0,NULL,NULL,GETDATE(),NULL,NULL,NULL,NULL,NULL,
							'$actu',NULL,NULL,'S','D',GETDATE(),'NO','NO')	
														
														
													
														
						");
												
												
				
						$params_2  = array();
						$options_2 =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
						$stmt_2    = sqlsrv_query( $conn, $sql_2 , $params_2, $options_2 );
													
													
						if( $stmt_2 === false ) {
													
							$error_transaccion = 1;
												
							$ENTRE = 6;
													
							if( ($errors = sqlsrv_errors() ) != null) {
														
								foreach( $errors as $error ) {
															
									$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
								}
							}
												
						}	
										
						sqlsrv_free_stmt( $stmt_2);		
											
											
											
						if($error_transaccion) {
							
			
							
							echo "ERROR EN LA OPERACION MYSQL ".mysql_errno($conexion). ": " . mysql_error($conexion)."<br>"."<br>"." ,ERROR JUSTICIA XXI: ".$msgError." ,ENTRE: ".$ENTRE;
												
											
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
												
											
							//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
							sqlsrv_rollback( $conn );
											
							// Cerrar la conexiï¿½n.
							sqlsrv_close( $conn );
												
												
												
										
						} //FIN if($error_transaccion) 
						else {
												
							//SE TERMINA LA TRANSACCION  
		  					$this->db->commit();		
												
												
							//SE TERMINA LA TRANSACCION EN JUSTICIA XXI  
							sqlsrv_commit( $conn );	
							
							echo "PROCESO SE REALIZA CORRECTAMENTE";
												
												
								/*echo '<script languaje="JavaScript"> 
							
										var id_radi = "'.$idubicacionexpediente.'";
												
										alert("PROCESO SE REALIZA CORRECTAMENTE");
															
										location.href="index.php?controller=archivo&action=adicionar_memorial&nombre="+id_radi;
																	
									</script>';*/
												
												
												
									
												
						}
												
				
				
				}//FIN if($error_transaccion == 0){
				else{
				
					echo $msgError;
				}					
						
										
		}//FIN TRY
		catch (Exception $e) {
										
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();

								
				echo "Fallo: " . $e->getMessage();
											
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
											
				// Cerrar la conexiï¿½n.
				sqlsrv_close( $conn );
											
											
				//location.href="index.php?controller=archivo&action=adicionar_memorial&nombre="+id_radi;
				
		}
		
		
		


	}//FIN FUNCION RADICAR MEMORIAL
	
	public function radicar_memorialANTERIOR_210421(){
	
		

		$modelo = new archivoModel();
		
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
		$tipo_documento = utf8_decode(trim($_POST['tipo_documento']));
		$juzgadodestino = trim($_POST['juzgadodestino']);
		$solicitud      = trim($_POST['solicitud']);	
		$peticionario   = utf8_decode(trim($_POST['peticionario']));
		$folios         = trim($_POST['folios']);		
		$recibe         = trim($_POST['recibe']);
		$cuaderno       = trim($_POST['cuaderno']);	
		$a_despacho     = trim($_POST['a_despacho']);
		$correo         = utf8_decode(trim($_POST['correo']));		
		$telefono       = utf8_decode(trim($_POST['telefono']));
		$observacionesm	= utf8_decode(trim($_POST['observacionesm']));
		
		//CAMPOS OCULTOS
		$idubicacionexpediente = trim($_POST['nombre']);
		$radicado              = trim($_POST['radicado']);
		$idmemoexterno         = trim($_POST['idmemoexterno']);
		$juzgado               = trim($_POST['idjuzgado']);
		$digital               = trim($_POST['digital']);
		
		$text_lista_ts            = utf8_decode(trim($_POST['text_lista_ts']));
		$nombre_archivo_solicitud = utf8_decode(trim($_POST['text_lista_na']));
		
		$archivomemo           = trim($_POST['archivomemo']);
		$cedula                = trim($_POST['cedula']);
		$id_memo_peticionario  = trim($_POST['id_memo_peticionario']);
		$fecha_crem            = trim($_POST['fecha_crem']);
		
		//RUTA LOCAL
		$ruta_memo_1 = explode("/",$archivomemo);
		$ruta_memo_2 = trim($ruta_memo_1[3]);//NOMBRE MEMORIAL
		
		
		//AQUI SE CREA EL DIRECTORIO
		//NOTA: SE AGREGA ESTA PARTE YA QUE LA CARPETA CON EL ID
		//DE USUARIO EN SESION DEBE EXISTIR EN LA CARPETA MEMORIALES
		if(is_dir('MEMORIALES'.'/'.$idusuario)){$bandera=0;}
		else{mkdir('MEMORIALES'.'/'.$idusuario, 0, true);}

		
		
		$ruta_local = "MEMORIALES/".$idusuario."/".$ruta_memo_2;
		
		//RUTAS PARA MOVER MEMORIAL DE PLATAFORMA PUBLICACIONES A PLATAFORMA EJECUCION
		$memo_publicaciones = 'C:/wamp/www/publicaciones/'.$archivomemo;
		$memo_ejecucion     = 'C:/wamp/www/ejecucion/'.$ruta_local;
		
	
		$solicitud1 = explode("-", $solicitud);
		$finsol     = $solicitud1[1];
		$solicitud  = $solicitud1[0];
		$actu       = "Recepciï¿½n Memorial por " .$finsol;
		
		$fecha_entrega = $modelo->get_fecha_actual_amd();
		$hora_militar  = $modelo->get_hora_actual_24horas();
		
		date_default_timezone_set('America/Bogota');
		$fecha = date('Y-m-d g:i');
		
		
		$error_transaccion = 0; //variable para detectar error
		$msgError          = "";
		
		//CONEXION BASE DE DATOS JUSTICIA XXI
		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
		
		

		//-------------------------SE REGISTRAN LOS DATOS EN LA TABLA-----------------------------------------
										
		try {  
										 
				$ENTRE = 0;
						
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
				
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
											
											
											
				//*********************************NUEVA CONEXON**************************************************
						
				$serverName     = $datosbd_1; //serverName\instanceName
				$connectionInfo = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4);
				$conn           = sqlsrv_connect( $serverName, $connectionInfo);
													
													
				if( $conn === false ) {
														
					$error_transaccion = 1;
													
					$ENTRE = 1;
													
					if( ($errors = sqlsrv_errors() ) != null) {
														
						foreach( $errors as $error ) {
															
							$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
							
						}
					}
														
					//echo "ENTRE 1";
														
				}
													
				//Iniciar la transacciï¿½n.
				if ( sqlsrv_begin_transaction( $conn ) === false ) {
														 
					$error_transaccion = 1;
													
					$ENTRE = 2;
													
					if( ($errors = sqlsrv_errors() ) != null) {
														
						foreach( $errors as $error ) {
															
							$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
							
						}
						
					}
														 
					//echo "ENTRE 2";
														 
				}
											
											
											
				if($existe==true){
												
					$existes =  "no";
					
				}
				else{
											
					$existes = "si";
												
				}	
				
				//MOVER MEMORIAL DE PLATAFORMA PUBLICACIONES A PLATAFORMA EJECUCION
				if (!copy($memo_publicaciones, $memo_ejecucion)) {
				
					$error_transaccion = 1;
					$msgError .= "1.ERROR AL MOVER EL MEMORIAL DE PLATAFORMA PUBLICACIONES A PLATAFORMA EJECUCION...\n";
					
				}		
				
				//---------------------VALIDAR RENOMBRAR-NOMBRE ARCHIVO 15 DE ABRIL 2021----------------------------------------
			
				$nombre_archivo_tipo      = explode(".",$ruta_memo_2);
				
				$nombre_archivo_solicitud = date('ymdhis').'-'.$nombre_archivo_solicitud.".".$nombre_archivo_tipo[1];
				
				if ( rename($memo_ejecucion, 'C:/wamp/www/ejecucion/'.'MEMORIALES/'.$idusuario.'/'.$nombre_archivo_solicitud) ) {
				
					$error_transaccion = 0;
					
					//$rutaarchivo = $raiz.'/'.$nom.'/'.$nombre_archivo_solicitud;
					
					$ruta_local = "MEMORIALES/".$idusuario."/".$nombre_archivo_solicitud;
	
				} 
				else{
				
					$error_transaccion = 1;
					$msgError .= "1B.ERROR AL RENOMBRAR EL ARCHIVO...\n";
				
					
				}
				
		
				//---------------------FIN VALIDAR RENOMBRAR-NOMBRE ARCHIVO-----------------------------------------------------					
														  
				
				//ADICIONADO EL 19 DE ABRIL 2021
				if($error_transaccion == 0){
				
											
				$this->db->exec("INSERT INTO correspondencia (fecha_registro,radicado,peticionario,cedula,telefono,tipo_documento,idjuzgado,fecha_entrega,idjuzgadodestino,
								 idsolicitud,idusuario,folios,generado,existe,idubicacionexpediente,observacionesm,ruta_local,
								 id_memo_externo,id_memo_peticionario,memo_correo,fecha_creacion)
								 VALUES ('$fecha','$radicado','$peticionario','$cedula','$telefono','$tipo_documento','$juzgado','$fecha_entrega','$juzgadodestino',
								'$solicitud','$idusuario','$folios','no','$existes','$idubicacionexpediente','$observacionesm','$ruta_local',
								'$idmemoexterno','$id_memo_peticionario','$correo','$fecha_crem')");				  	  
												
												
											
				//SE REFIERE AL TIPO DE SOLICITUD (SOLICITUD OFICIOS)
				//Y NO SE ADICIONA AL EXPEDIENTE DIGITAL
				//ADICIONADO EL 24 DE AGOSTO2020
				//if($solicitud != 118){
				
					  
					 	 //-------------------SE REGISTRA LA TABLA expe_digital Y ALIMENTAR EL EXPEDIENTE DIGITAL DESDE EL AREA DE MEMORIALES-----------------
						 
						 $last_id_memo = $this->db->lastInsertId();
						 
						 
						 //SE VERIFICA QUE EXISTA INFORMACIONE EN LA TABLA expe_digital, PARA ADICIONAR EL MEMORIAL
						 $numero_doc = $this->db->prepare("SELECT COUNT(id) AS numero FROM expe_digital
				 										   WHERE idradicado = '$idubicacionexpediente'");
				
					  	 $numero_doc->execute(); 
						 $doc_cant     = $numero_doc->fetch();
						 $numero_doc_2 = $doc_cant[numero];
					  	 //$numero_doc_2 = $numero_doc->rowCount();
						 
						
						 
						 if($numero_doc_2 >= 1){
						 
						 
						 
							 //$last_id_memo = $this->db->lastInsertId();
							 
							 
							 
							 //-----------ARMAR DIRECTORIO RADICADO--------------
			
							//EJ: 17001400300220140017100 ---> 220140017100
							//EJ: 17001400301220140017100 ---> 1220140017100
							
							$valorradicado = $radicado;
							
							$cadena_juzgado;
							$valorradicado_8 = substr($valorradicado, 10, 2);
							$J;
							// Recorremos cada carï¿½cter de la cadena
							for($i=0; $i<strlen($valorradicado_8); $i++){
								
								if($valorradicado_8[0] == 0){
									
									$cadena_juzgado = substr($valorradicado, 11, 13);
									
									$i = strlen($valorradicado_8);
									
									$J = "J".substr($valorradicado, 11, 1);
								}
								
								if($valorradicado_8[0] == 1){
									
									$cadena_juzgado = substr($valorradicado, 10, 13);
									
									$i = strlen($valorradicado_8);
									
									$J = "J".substr($valorradicado, 10, 2);
								}
								
								
							}
							
							$nom_2 = trim($J."/".$cadena_juzgado);
							
							//-----------FIN ARMAR DIRECTORIO RADICADO---------
							 
							 
				
							//SE REALIZA OPERACION SI EL EXPEDIENTE ESTA DIGITALIZADO
							/*$digital       = trim($_POST['digital']);
							$cuaderno      = trim($_POST['cuaderno']);
							$a_despacho    = trim($_POST['a_despacho']);
							$text_lista_ts = trim($_POST['text_lista_ts']);*/
							
										
							if($digital == 1){
							
							
									//MOVER MEMORIAL DE PLATAFORMA PUBLICACIONES A PLATAFORMA EJECUCION A LA CARPETA EXPEDIENTE_DIGITAL_2
									$memo_digital_ejecucion = 'C:/wamp/www/ejecucion/EXPEDIENTE_DIGITAL_2/'.$nom_2."/".$ruta_memo_2;
									
						
									if (copy($memo_publicaciones,$memo_digital_ejecucion)) {
									//if (move_uploaded_file($memo_publicaciones,$memo_digital_ejecucion)) {
									
									
										$erro_archivo = 0;
										
														
									}
									else{ 
									
										$erro_archivo = 1;
										
										$error_transaccion = 1;
										$msgError .= "2.ERROR AL MOVER EL MEMORIAL DE PLATAFORMA PUBLICACIONES A PLATAFORMA EJECUCION A LA CARPETA EXPEDIENTE_DIGITAL_2...\n";
												
									}
									
									
									//---------------------VALIDAR RENOMBRAR-NOMBRE ARCHIVO 15 DE ABRIL 2021----------------------------------------
			
									//$nombre_archivo_tipo      = explode(".",$ruta_memo_2);
									
									//$nombre_archivo_solicitud = date('ymdhis').'-'.$nombre_archivo_solicitud.".".$nombre_archivo_tipo[1];
									
									if ( rename($memo_digital_ejecucion, 'C:/wamp/www/ejecucion/EXPEDIENTE_DIGITAL_2/'.$nom_2."/".$nombre_archivo_solicitud) ) {
									
										$erro_archivo      = 0;
										$error_transaccion = 0;
										
										$memo_digital_ejecucion = 'C:/wamp/www/ejecucion/EXPEDIENTE_DIGITAL_2/'.$nom_2."/".$nombre_archivo_solicitud;
						
									} 
									else{
									
										$erro_archivo      = 1;
										$error_transaccion = 1;
										
										$msgError .= "1C.ERROR AL RENOMBRAR EL ARCHIVO...\n";
									
										
									}
									
									
									//---------------------FIN VALIDAR RENOMBRAR-NOMBRE ARCHIVO-----------------------------------------------------
									
									
												
																
									if($erro_archivo == 0){
											
										$idradicado = $idubicacionexpediente;
										$fecha_2    = $modelo->get_fecha_actual_amd();
										$hora_2     = $modelo->get_hora_actual_24horas();
										$des        = $observacionesm;
										
										//---------------------------------------------------------------------------------------------------------------------------- 
										
										//SE INCORPORA MEMORIAL AL PROCESO DESDE SU REGISTRO
										//ADICINADO EL 8 DE SEPTIEMBRE DE 2020
										$this->db->exec("UPDATE correspondencia SET 
							
															 incorporaexpediente  = 1,
															 fecha_incorpora      = '$fecha_2'
															
														 WHERE id = '$last_id_memo'");
														 
														 
										
										/*$notaexp = "SE AGREGA MEMORIAL AL EXPEDIENTE, ID MEMORIAL.: ".$last_id_memo; 	 
										
										date_default_timezone_set('America/Bogota'); 
										$fecharegistro_INC = date('Y-m-d g:i');
										$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,id_memorial,idusuario) 
									     				 VALUES('$idradicado','$fecharegistro_INC','$notaexp','$last_id_memo','$idusuario')");*/				
														 
														 
										
										//--------------------------------------FIN------------------------------------------------------------------------------------ 
										
										
										//OBSERVACION tipo documento + tipo de solicitud
										date_default_timezone_set('America/Bogota'); 
										$fecharegistro = date('Y-m-d g:i');
										
										$obs_M = $tipo_documento." - ".$text_lista_ts." - ".$des;
										$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,estadoobs,id_memorial,a_despacho,idusuario) 
														 VALUES('$idradicado','$fecharegistro','$obs_M',0,'$last_id_memo','$a_despacho','$idusuario')"); 
										
										
										//$ruta = 'EXPEDIENTE_DIGITAL_2/'.$nom_2."/".$ruta_memo_2;
										
										$ruta = 'EXPEDIENTE_DIGITAL_2/'.$nom_2."/".$nombre_archivo_solicitud;
												
																
										$this->db->exec("INSERT INTO expe_digital (idradicado,fecha,hora,folios,cuaderno,tipo,ruta,des,idusuario,estado,idcorrespondencia,id_dependencia,
										                 fecha_creacion,fecha_de,fecha_a,origen) 
														 VALUES ('$idradicado','$fecha_2','$hora_2','$folios','$cuaderno','application/pdf','$ruta','$obs_M','$idusuario',1,'$last_id_memo',18,
														 '$fecha_crem','0000-00-00','0000-00-00',2)");
																
										//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
										$last_id_2 = $this->db->lastInsertId();
															
																 
																
										//HISTORIAL
										$actuacion = 'REGISTRO FOLIO(S)';
										$tablas    = 'expe_digital';
										$tipo      = 'RF';
										$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo,idexpdigi,id_dependencia,
										                 fecha_creacion,fecha_de,fecha_a,origen)
														 VALUES('$idradicado','$idusuario','$fecha_2','$hora_2','$actuacion','$tablas','$ruta','$tipo','$last_id_2',18,
														 '$fecha_crem','0000-00-00','0000-00-00',2)");
											
																 
											
									}
									 
									
							} 
							
						
						}
						
						//---------------FIN SE REGISTRA LA TABLA expe_digital Y ALIMENTAR EL EXPEDIENTE DIGITAL DESDE EL AREA DE MEMORIALES------------------------
					  
					  
				//}// FIN if($solicitud != 118){
											
				
				//PARA INDICAR QUE EL MEMORIAL RADICADO POR EL ABOGADO O PARTE (DDTE O DDO)
				//YA FUE PROCESADO POR EL AREA DE MEMORIALES DE LAOFICINA DE EJECUCION
				$this->db->exec("UPDATE expe_solicitud_memo SET 
							
									vizualizar  = 0
															
								 WHERE id = '$idmemoexterno'");
											
											
				//REGISTRAR ACTUACION EN JUSTICIA XXI
										
				$sininstancia = $radicado;
				$sin          = substr($sininstancia, 0, 21);
				
				
				$sql = ("	
						
							
			
							UPDATE t103dainfoproc SET a103descacts='Recepciï¿½n Memorial', a103codiacts='30000123', a103codipads='30000123', 
							a103fechdess = GETDATE(), a103anotacts = '$actu'
							WHERE a103llavproc='$radicado';
															
								
						");	
												
												
				
						$params  = array();
						$options =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
						$stmt = sqlsrv_query( $conn, $sql , $params, $options );
													
													
						if( $stmt === false ) {
													
							$error_transaccion = 1;
												
							$ENTRE = 5;
													
							if( ($errors = sqlsrv_errors() ) != null) {
														
								foreach( $errors as $error ) {
															
									$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
								}
							}
												
						}	
										
						sqlsrv_free_stmt( $stmt);
						
						
				
				$sql_2 = ("	
						
							declare @cad integer 
			
																		
							SELECT @cad =MAX(A110CONSACTU)+1 FROM T110DRACTUPROC where a110Llavproc='$radicado' 
														
							INSERT INTO T110DRACTUPROC(A110LLAVPROC,A110CONSACTU,A110NUMEPROC,A110CONSPROC,A110CODIACTU,A110CODIPADR,A110DESCACTU,A110LEGAJUDI,A110FLAGTERM,A110TIPOTERM,A110NUMDTERM,A110FECHINIC,
							A110FECHFINA,A110FECHREGI,A110FOLIPROC,A110CUADPROC,A110CODIPROV,A110NUMEPROV,A110FECHPROV,A110ANOTACTU,A110FECHOFIC,A110NUMEOFIC,A110FLAGUBIC,A110TIPOACTU,A110FECHDESA,A110BORRTERM,
							A110RENUTERM) values('$radicado',@cad,'$sin','00','30000123','30000123','Recepciï¿½n Memorial','N','NO','N',0,NULL,NULL,GETDATE(),NULL,NULL,NULL,NULL,NULL,
							'$actu',NULL,NULL,'S','D',GETDATE(),'NO','NO')	
														
														
													
														
						");
												
												
				
						$params_2  = array();
						$options_2 =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
						$stmt_2    = sqlsrv_query( $conn, $sql_2 , $params_2, $options_2 );
													
													
						if( $stmt_2 === false ) {
													
							$error_transaccion = 1;
												
							$ENTRE = 6;
													
							if( ($errors = sqlsrv_errors() ) != null) {
														
								foreach( $errors as $error ) {
															
									$msgError .= "ERROR EN REGISTRO: "." SQLSTATE: ".$error[ 'SQLSTATE'].", CODE: ".$error[ 'code'].", MENSAJE: ".$error[ 'message'];
								}
							}
												
						}	
										
						sqlsrv_free_stmt( $stmt_2);		
											
											
											
						if($error_transaccion) {
							
			
							
							echo "ERROR EN LA OPERACION MYSQL ".mysql_errno($conexion). ": " . mysql_error($conexion)."<br>"."<br>"." ,ERROR JUSTICIA XXI: ".$msgError." ,ENTRE: ".$ENTRE;
												
											
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
												
											
							//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
							sqlsrv_rollback( $conn );
											
							// Cerrar la conexiï¿½n.
							sqlsrv_close( $conn );
												
												
												
										
						} //FIN if($error_transaccion) 
						else {
												
							//SE TERMINA LA TRANSACCION  
		  					$this->db->commit();		
												
												
							//SE TERMINA LA TRANSACCION EN JUSTICIA XXI  
							sqlsrv_commit( $conn );	
							
							echo "PROCESO SE REALIZA CORRECTAMENTE";
												
												
								/*echo '<script languaje="JavaScript"> 
							
										var id_radi = "'.$idubicacionexpediente.'";
												
										alert("PROCESO SE REALIZA CORRECTAMENTE");
															
										location.href="index.php?controller=archivo&action=adicionar_memorial&nombre="+id_radi;
																	
									</script>';*/
												
												
												
									
												
						}
												
				
				
				}//FIN if($error_transaccion == 0){
				else{
				
					echo $msgError;
				}					
						
										
		}//FIN TRY
		catch (Exception $e) {
										
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();

								
				echo "Fallo: " . $e->getMessage();
											
				//NO TERMINA LA TRANSACCION ERROR AL INGRESAR LOS DEATOS A SIGLO XXI
				sqlsrv_rollback( $conn );
											
				// Cerrar la conexiï¿½n.
				sqlsrv_close( $conn );
											
											
				//location.href="index.php?controller=archivo&action=adicionar_memorial&nombre="+id_radi;
				
		}
		
		
		


	}//FIN FUNCION RADICAR MEMORIAL
	
	
	//NUEVO 7 DE DICIEMBRE
	
	public function listar_expediente_titulos(){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$fecha_actual = $modelo->get_fecha_actual_amd();
			
			
			$idusuario     = $_SESSION['idUsuario'];
			
										
			$listar = $this->db->prepare("
			
										 	SELECT t1.id,t2.id AS idradicado,t2.radicado,t2.idjuzgado,t2.idjuzgado_reparto,t2.digitalizado,
											t3.id AS idregistra,t3.nombre_usuario,t3.empleado,t3.correo,t1.fecha,t1.hora,t1.des,t1.ruta,t1.folios,
											t1.vizualizar,t1.id_accion,t1.respuestaoecm,t1.iduserrespuesta,t1.fecharespuesta,t1.horarespuesta,
											t3.celular,t1.ruta_respuesta
											FROM ((expe_solicitud_titulos t1
											INNER JOIN ubicacion_expediente t2 ON t1.idradicado = t2.id)
											INNER JOIN pa_usuario_expe      t3 ON t1.idsolicitante   = t3.id)
											WHERE (t1.vizualizar = 1 || t1.vizualizar = 0)
											ORDER BY t1.id DESC"
											
										);
										
										
								

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function listar_expediente_titulos_filtro($datoJXX1,$datoJXX3,$datoJXX5,$datoJXX2,$datoJXX4,$datoJXX6,$datoJXX8){
	
	
			set_time_limit (240000000);
	
			$idusuario  = $_SESSION['idUsuario'];
			
		
			$filtrox;
			
			$filtrof;
			
			$filtro1;
			$filtro2;
			$filtro4;
			$filtro6;
			$filtro8;
			
		
			/*$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			$datox1    = trim($_GET['datox1']);
			$datox2    = trim($_GET['datox2']);
			$datox4    = trim($_GET['datox4']);*/
			
			
			
			
			if ( !empty($datoJXX3) && !empty($datoJXX5) ) {
			
				$filtrof   = " AND (t1.fecha >= '$datoJXX3' AND t1.fecha <= '$datoJXX5')";
				
				
			}
			
			
			if ( !empty($datoJXX1) ) {
			
				
				
				$filtro1 = " AND t2.radicado LIKE '%$datoJXX1%' ";
			
			}
			if ( !empty($datoJXX2) ) {
			
				
				$filtro2 = " AND t3.nombre_usuario = '$datoJXX2' ";
			
			}
			
			if ( !empty($datoJXX4) ) {
			
	
				$filtro4 = " AND t3.empleado LIKE '%$datoJXX4%' ";
			
			}
			
			if ( !empty($datoJXX6) ) {
			
	
				$filtro6 = " AND t1.id_accion = '$datoJXX6' ";
			
			}
			
			if ( !empty($datoJXX8) || $datoJXX8 == 0 ) {
			//if ( $datoJXX8 == 0) {
			
	
				$filtro8 = " AND t1.vizualizar = '$datoJXX8' ";
			
			}
			
			/*if ( $datoJXX8 == 1) {
			
	
				$filtro8 = " AND t1.vizualizar = '$datoJXX8' ";
			
			}*/
			
			$filtrox = $filtro1." ".$filtro2." ".$filtro4." ".$filtro6." ".$filtro8." ".$filtrof;
		
			
			
			$listar = $this->db->prepare("
				
												SELECT t1.id,t2.id AS idradicado,t2.radicado,t2.idjuzgado,t2.idjuzgado_reparto,t2.digitalizado,
												t3.id AS idregistra,t3.nombre_usuario,t3.empleado,t3.correo,t1.fecha,t1.hora,t1.des,t1.ruta,t1.folios,
												t1.vizualizar,t1.id_accion,t1.respuestaoecm,t1.iduserrespuesta,t1.fecharespuesta,t1.horarespuesta,
												t3.celular,t1.ruta_respuesta
												FROM ((expe_solicitud_titulos t1
												INNER JOIN ubicacion_expediente t2 ON t1.idradicado = t2.id)
												INNER JOIN pa_usuario_expe      t3 ON t1.idsolicitante   = t3.id)
												WHERE t1.id >= '1'" .$filtrox. "
												/*AND (t1.vizualizar = 1 || t1.vizualizar = 0)*/
												ORDER BY t1.id DESC"
												
												
										);
											
			
			
  			$listar->execute();
			
			

  			return $listar;
	
  	}
	
	public function radicar_respuesta(){
	
		
		$modelo     = new archivoModel();
				
		$fecha_entrega = $modelo->get_fecha_actual_amd();
		$hora_militar  = $modelo->get_hora_actual_24horas();
		
		
		//SE OBTIENEN LOS DATOS
		$idusuario = $_SESSION['idUsuario'];
		
		$respuestaoecm = utf8_decode(trim($_POST['observacionesm2']));//RESPUESTA
		
		$nombre        = trim($_POST['nombre']);//ID RADICADO
		$idradicado    = $nombre; //VARIABLE USADA PARA CUANDO SE DEFINE ARCHIVO
		
		$radicado      = trim($_POST['radicado']);//RADICADO
		$idmemoexterno = trim($_POST['idmemoexterno']);//ID REGISTRO TABLA expe_solicitud_titulos
		
		$tipo          = trim($_POST['tipo']);//ID REGISTRO TABLA expe_solicitud_titulos
		
		
		if($tipo == "P"){
		
			$obs_M = "SE REALIZA, PROGRAMACION PAGO DE TITULO(S), ID: ".$idmemoexterno;
			
			$actuacion = 'REGISTRO RESPUESTA PROGRAMACION PAGO DE TITULO';
			$tipo      = 'RESPPT';
		}
		if($tipo == "C"){
		
			$obs_M = "SE REALIZA, CONSULTA DE TITULO(S), ID: ".$idmemoexterno;
			
			$actuacion = 'REGISTRO CONSULTA DE TITULO';
			$tipo      = 'RESCT';
		}
		
		//***********************************PARA EL ARCHIVO***************************************
		
		$sin_archivo   = trim($_POST['sin_archivo']);
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "TITULOS_RESPUESTA";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		$nom = trim($_SESSION['idUsuario']);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//AQUI SE CREA EL DIRECTORIO
		//if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		//else{mkdir($raiz.'/'.$nom, 0, true);}
				
		//CUANDO SOLO SE SUBE UN ARCHIVOS
		/*$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		$tamano_archivo = $_FILES['archivo']['size'];*/ 
		
		
		//***********************************FIN PARA EL ARCHIVO***************************************
		
		
		$cadena_archivos     = "";			
		$error_transaccion   = 0; //variable para detectar error
		$msg                 = " ";
					
				
					
		try {  
						
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
			//EMPIEZA LA TRANSACCION
			$this->db->beginTransaction();
							
							
				
				//DEFINE ARCHIVO
				if($sin_archivo == 1){					
								
					//------------------------------------SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
										
					//AQUI SE CREA EL DIRECTORIO, CON EL ID ASIGNADO A LA DEMANDA
					if(is_dir($raiz.'/'.$nom.'/'.$idradicado)){$bandera=0;}
					else{mkdir($raiz.'/'.$nom.'/'.$idradicado, 0, true);}
	
					$mensage       = '';//Declaramos una variable mensaje quue almacenara el resultado de las operaciones.
					$archivo_error = 0;
										
					foreach ($_FILES as $key) //Iteramos el arreglo de archivos
					{
						if($key['error'] == UPLOAD_ERR_OK )//Si el archivo se paso correctamente Ccontinuamos 
						{
												
							$nombre_archivo = date('ymdHis'). '-' .$key['name'];//Obtenemos el nombre original del archivo y lo concatenamos con (Aï¿½oMesDiaHoramilitarMinutosSegundos)
							$temporal       = $key['tmp_name']; //Obtenemos la ruta Original del archivo
							//$Destino        = $ruta.$NombreOriginal;//Creamos una ruta de destino con la variable ruta y el nombre original del archivo	
							$ruta           = $raiz.'/'.$nom.'/'.$idradicado.'/'.$nombre_archivo;
													
							move_uploaded_file($temporal, utf8_decode($ruta)); //Movemos el archivo temporal a la ruta especificada		
													
						}
										
						if ($key['error']=='') //Si no existio ningun error, retornamos un mensaje por cada archivo subido
						{
							
							//$mensage .= '-> Archivo <b>'.$NombreOriginal.'</b> Subido correctamente. <br>';
													
							$rutaarchivo = utf8_decode($raiz.'/'.$nom.'/'.$idradicado.'/'.$nombre_archivo);
													
							//TABLA expe_solicitud_titulos
							
							$this->db->exec(
							
												"UPDATE expe_solicitud_titulos SET
						
													vizualizar       = 0,
													respuestaoecm    = '$respuestaoecm',
													iduserrespuesta  = '$idusuario',
													fecharespuesta   = '$fecha_entrega',
													horarespuesta    = '$hora_militar',
													ruta_respuesta   = '$rutaarchivo'
												 
												WHERE id = '$idmemoexterno'"
											
											
											);
							
							
													
							$cadena_archivos .= $rutaarchivo."******";
							
													
						}
						
						if ($key['error']!='')//Si existio algï¿½n error retornamos un el error por cada archivo.
						{
							$mensage .= '-> No se pudo subir el archivo <b>'.$nombre_archivo.'</b> debido al siguiente Error: n'.$key['error']; 
													
							$archivo_error = 1;
						}
											
					}
										
					//echo $mensage;// Regresamos los mensajes generados al cliente
										
					//------------------------------------FIN SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
					
					
					
				}
				//NO DEFINE ARCHIVO
				else{
				
					//TABLA expe_solicitud_titulos
							
							$this->db->exec(
							
												"UPDATE expe_solicitud_titulos SET
						
													vizualizar       = 0,
													respuestaoecm    = '$respuestaoecm',
													iduserrespuesta  = '$idusuario',
													fecharespuesta   = '$fecha_entrega',
													horarespuesta    = '$hora_militar'
													
												WHERE id = '$idmemoexterno'"
											
											
											);
				
				}
				
				
				
				
								
				
				date_default_timezone_set('America/Bogota'); 
				$fecharegistro = date('Y-m-d g:i');
										
				$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
								 VALUES('$nombre','$fecharegistro','$obs_M','$idusuario')");
								 
								 
				
				//HISTORIAL
				//$actuacion = 'REGISTRO RESPUESTA TITULO';
				$tablas    = 'expe_solicitud_titulos';
				//$tipo      = 'RTITU';
				//$cadena_archivos = "MUCHOS";
				$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,tipo,idexpdigi)
								 VALUES('$idmemoexterno','$idusuario','$fecha_entrega','$hora_militar','$actuacion','$tablas','$tipo','$nombre')");				 
								
								
				$msg = "PROCESO SE REALIZA CORRECTAMENTE";
				
				
															
			//SE TERMINA LA TRANSACCION  
			$this->db->commit();
											
			echo $msg;
								
						
						  
		} 
		catch (Exception $e) {
						
							
			$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();
							
						
			echo $msg;
							
							
		}
		
				
  	}
	
	//NUEVO 10 DE DICIEMBRE
	
	public function listar_expediente_PQR(){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$fecha_actual = $modelo->get_fecha_actual_amd();
			
			
			$idusuario     = $_SESSION['idUsuario'];
			
										
			$listar = $this->db->prepare("
			
										 	SELECT t1.id,t3.nombre_usuario,t3.empleado,t3.correo,t1.fecha,t1.hora,t1.asunto,
											t1.respuesta,t1.idedita,t1.fechaedita,t1.horaedita,t1.vizualizar,t3.celular,t1.ruta_respuesta
											FROM (expe_pqr t1
											INNER JOIN pa_usuario_expe t3 ON t1.idregistra = t3.id)
											WHERE (t1.vizualizar = 1 || t1.vizualizar = 0)
											ORDER BY t1.id DESC"
											
										);
										
										
								

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function listar_expediente_PQR_filtro($datoJXX3,$datoJXX5,$datoJXX2,$datoJXX4){
	
	
			set_time_limit (240000000);
	
			$idusuario  = $_SESSION['idUsuario'];
			
		
			$filtrox;
			
			$filtrof;
			
			$filtro2;
			$filtro4;
			
			
		
			/*$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			$datox1    = trim($_GET['datox1']);
			$datox2    = trim($_GET['datox2']);
			$datox4    = trim($_GET['datox4']);*/
			
			
			
			
			if ( !empty($datoJXX3) && !empty($datoJXX5) ) {
			
				$filtrof   = " AND (t1.fecha >= '$datoJXX3' AND t1.fecha <= '$datoJXX5')";
				
				
			}
			
			
			
			if ( !empty($datoJXX2) ) {
			
				
				$filtro2 = " AND t3.nombre_usuario = '$datoJXX2' ";
			
			}
			
			if ( !empty($datoJXX4) ) {
			
	
				$filtro4 = " AND t3.empleado LIKE '%$datoJXX4%' ";
			
			}
			
			
			$filtrox = $filtro2." ".$filtro4." ".$filtrof;
		
			
			
			$listar = $this->db->prepare("
				
												SELECT t1.id,t3.nombre_usuario,t3.empleado,t3.correo,t1.fecha,t1.hora,t1.asunto,
												t1.respuesta,t1.idedita,t1.fechaedita,t1.horaedita,t1.vizualizar,t3.celular,t1.ruta_respuesta
												FROM (expe_pqr t1
												INNER JOIN pa_usuario_expe t3 ON t1.idregistra = t3.id)
												WHERE t1.id >= '1'" .$filtrox. "
												AND (t1.vizualizar = 1 || t1.vizualizar = 0)
												ORDER BY t1.id DESC"
												
												
										);
											
			
			
  			$listar->execute();
			
			

  			return $listar;
	
  	}
	
	public function radicar_pqr(){
	
		
		$modelo     = new archivoModel();
				
		$fecha_entrega = $modelo->get_fecha_actual_amd();
		$hora_militar  = $modelo->get_hora_actual_24horas();
		
		
		//SE OBTIENEN LOS DATOS
		$idusuario = $_SESSION['idUsuario'];
		
		$respuestaoecm = utf8_decode(trim($_POST['respqr']));//RESPUESTA
	
		$idmemoexterno = trim($_POST['idmemoexterno']);//ID REGISTRO TABLA expe_solicitud_titulos
		
		
		//***********************************PARA EL ARCHIVO***************************************
		
		$sin_archivo   = trim($_POST['sin_archivo']);
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "PQR_RESPUESTA";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		$nom = trim($_SESSION['idUsuario']);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//AQUI SE CREA EL DIRECTORIO
		//if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		//else{mkdir($raiz.'/'.$nom, 0, true);}
				
		//CUANDO SOLO SE SUBE UN ARCHIVOS
		/*$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		$tamano_archivo = $_FILES['archivo']['size'];*/ 
		
		
		//***********************************FIN PARA EL ARCHIVO***************************************
		
		$cadena_archivos     = "";				
		$error_transaccion   = 0; //variable para detectar error
		$msg = " ";
					
				
					
		try {  
						
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
			//EMPIEZA LA TRANSACCION
			$this->db->beginTransaction();
							
				
				
				//DEFINE ARCHIVO
				if($sin_archivo == 1){					
								
					//------------------------------------SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
										
					//AQUI SE CREA EL DIRECTORIO
					if(is_dir($raiz.'/'.$nom.'/'.$idmemoexterno)){$bandera=0;}
					else{mkdir($raiz.'/'.$nom.'/'.$idmemoexterno, 0, true);}
	
					$mensage       = '';//Declaramos una variable mensaje quue almacenara el resultado de las operaciones.
					$archivo_error = 0;
										
					foreach ($_FILES as $key) //Iteramos el arreglo de archivos
					{
						if($key['error'] == UPLOAD_ERR_OK )//Si el archivo se paso correctamente Ccontinuamos 
						{
												
							$nombre_archivo = date('ymdHis'). '-' .$key['name'];//Obtenemos el nombre original del archivo y lo concatenamos con (Aï¿½oMesDiaHoramilitarMinutosSegundos)
							$temporal       = $key['tmp_name']; //Obtenemos la ruta Original del archivo
							//$Destino        = $ruta.$NombreOriginal;//Creamos una ruta de destino con la variable ruta y el nombre original del archivo	
							$ruta           = $raiz.'/'.$nom.'/'.$idmemoexterno.'/'.$nombre_archivo;
													
							move_uploaded_file($temporal, utf8_decode($ruta)); //Movemos el archivo temporal a la ruta especificada		
													
						}
										
						if ($key['error']=='') //Si no existio ningun error, retornamos un mensaje por cada archivo subido
						{
							
							//$mensage .= '-> Archivo <b>'.$NombreOriginal.'</b> Subido correctamente. <br>';
													
							$rutaarchivo = utf8_decode($raiz.'/'.$nom.'/'.$idmemoexterno.'/'.$nombre_archivo);
													
							//TABLA expe_solicitud_titulos
							
							$this->db->exec(
							
												"UPDATE expe_pqr SET
					
					
													vizualizar     = 0,
													respuesta      = '$respuestaoecm',
													idedita        = '$idusuario',
													fechaedita     = '$fecha_entrega',
													horaedita      = '$hora_militar',
													ruta_respuesta = '$rutaarchivo'
															 
												WHERE id = '$idmemoexterno'"
											
											
											);
							
							
													
							$cadena_archivos .= $rutaarchivo."******";
							
													
						}
						
						if ($key['error']!='')//Si existio algï¿½n error retornamos un el error por cada archivo.
						{
							$mensage .= '-> No se pudo subir el archivo <b>'.$nombre_archivo.'</b> debido al siguiente Error: n'.$key['error']; 
													
							$archivo_error = 1;
						}
											
					}
										
					//echo $mensage;// Regresamos los mensajes generados al cliente
										
					//------------------------------------FIN SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
					
					
					
				}			
				//NO DEFINE ARCHIVO
				else{
				
							//TABLA expe_solicitud_titulos
							
							$this->db->exec(
							
												"UPDATE expe_pqr SET
					
					
													vizualizar     = 0,
													respuesta      = '$respuestaoecm',
													idedita        = '$idusuario',
													fechaedita     = '$fecha_entrega',
													horaedita      = '$hora_militar'
															 
												WHERE id = '$idmemoexterno'"
											
											
											);
				
				}
				

				
				//HISTORIAL
				$actuacion = 'REGISTRO RESPUESTA PQR';
				$tablas    = 'expe_pqr';
				$tipo      = 'RESPQR';
				//$cadena_archivos = "MUCHOS";
				$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,tipo)
								 VALUES('$idmemoexterno','$idusuario','$fecha_entrega','$hora_militar','$actuacion','$tablas','$tipo')");
												 
				
				$msg = "PROCESO SE REALIZA CORRECTAMENTE";
				
				
															
			//SE TERMINA LA TRANSACCION  
			$this->db->commit();
											
			echo $msg;
								
						
						  
		} 
		catch (Exception $e) {
						
							
			$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();
							
						
			echo $msg;
							
							
		}
		
				
  	}
	
	//NUEVO 14 DE DICIEMBRE 2020
	
	public function radicar_devolucion_memo(){
	
		
		$modelo     = new archivoModel();
				
		$fecha_entrega = $modelo->get_fecha_actual_amd();
		$hora_militar  = $modelo->get_hora_actual_24horas();
		
		
		//SE OBTIENEN LOS DATOS
		$idusuario = $_SESSION['idUsuario'];
		
		$respuestaoecm = utf8_decode(trim($_POST['resdevo']));//RESPUESTA
	
		$idmemoexterno = trim($_POST['idmemoexternodevo']);//ID REGISTRO TABLA expe_solicitud_titulos
		
		
	
		$SQL_1 = "	UPDATE expe_solicitud_memo SET
					
					
						vizualizar = 2,
						respuesta  = '$respuestaoecm',
						idedita    = '$idusuario',
						fechaedita = '$fecha_entrega',
						horaedita  = '$hora_militar'
								 
					WHERE id = '$idmemoexterno'";
											
						
					
					
		$error_transaccion   = 0; //variable para detectar error
		$msg = " ";
					
				
					
		try {  
						
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
			//EMPIEZA LA TRANSACCION
			$this->db->beginTransaction();
							
							
				$this->db->exec($SQL_1);
				
				//HISTORIAL
				$actuacion = 'REGISTRO DEVOLUCION MEMORIAL';
				$tablas    = 'expe_solicitud_memo';
				$tipo      = 'RDVM';
				//$cadena_archivos = "MUCHOS";
				$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,tipo)
								 VALUES('$idmemoexterno','$idusuario','$fecha_entrega','$hora_militar','$actuacion','$tablas','$tipo')");
				
				
				$msg = "PROCESO SE REALIZA CORRECTAMENTE";
				
				
															
			//SE TERMINA LA TRANSACCION  
			$this->db->commit();
											
			echo $msg;
								
						
						  
		} 
		catch (Exception $e) {
						
							
			$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();
							
						
			echo $msg;
							
							
		}
		
				
  	}
	
	//ADICIONADO EL 22 DE ENERO 2021
	public function get_Actuaciones_JusticiaXXI($datoJXX1){
	
		$modelo     = new archivoModel();
		
		$cadena_lista = "";
  
  		$error_transaccionX = 0;
		
  		$datosbd   = $modelo->get_datos_basededatos(1);
		$datosbd_b = $datosbd->fetch();
		$datosbd_1 = $datosbd_b[ip];
		$datosbd_2 = $datosbd_b[bd];
		$datosbd_3 = $datosbd_b[usuario];
		$datosbd_4 = $datosbd_b[clave];
			
		$serverNameX = $datosbd_1; //serverName\instanceName
		$connectionInfoX = array( "Database"=>$datosbd_2, "UID"=>$datosbd_3, "PWD"=>$datosbd_4 );
		$connX = sqlsrv_connect( $serverNameX, $connectionInfoX);
		
		
		if( $connX === false ) {
			
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
			
			echo "ENTRE 1 ([T110DRACTUPROC])";
			
		}
		
		//Iniciar la transacciï¿½n.
		if ( sqlsrv_begin_transaction( $connX ) === false ) {
			 
			$error_transaccionX = 1;
		
			if( ($errors = sqlsrv_errors() ) != null) {
			
				foreach( $errors as $error ) {
				
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
			 
			echo "ENTRE 2 ([T110DRACTUPROC])";
			 
		}
		

		$sqlX = ("	
			
			
					
					
					 SELECT 
					 [A110CONSACTU],
					 [A110DESCACTU],
					 CONVERT(VARCHAR(10), [A110FECHREGI], 103) AS FECHA_AUTO 
					 FROM  [$datosbd_2].[dbo].[T110DRACTUPROC]
					 WHERE [A110LLAVPROC] = '$datoJXX1'
					 ORDER BY [A110CONSACTU]
							
		");
			
		$paramsX  = array();
		$optionsX =  array( "Scrollable" => SQLSRV_CURSOR_KEYSET );
		$stmtX    = sqlsrv_query( $connX, $sqlX , $paramsX, $optionsX );
			
			
		if( $stmtX === false ) {
			
			$error_transaccionX = 1;
			
			if( ($errors = sqlsrv_errors() ) != null) {
				
				foreach( $errors as $error ) {
					
					echo "ERROR EN REGISTRO "."<br />";	
					echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
					echo "code: ".$error[ 'code']."<br />";
					echo "message: ".$error[ 'message']."<br />";
				}
			}
				
			echo "ENTRE 3 ([T110DRACTUPROC])";
				
		}
		else{
				
			//$row_count = sqlsrv_num_rows( $stmtX );
			
			

			
				 while( $row = sqlsrv_fetch_array( $stmtX) ){
				 
						
						$A110CONSACTU = $row['A110CONSACTU'];	
						$A110FECHREGI = $row['FECHA_AUTO'];
						//$A110DESCACTU = utf8_decode($row['A110DESCACTU']);
						$A110DESCACTU = utf8_encode($row['A110DESCACTU']);//SE USA DE ESTA FORMA PARA QUE MUESTRE BIEN LOS ACENTOS DESDE SQLSERVER
						
						$cadena_lista .= $A110CONSACTU."//////".$A110FECHREGI."//////".$A110DESCACTU."******";
				 
				 }//FIN WHILE	
					
		
	
		}	
		
		
		sqlsrv_free_stmt( $stmtX);
		sqlsrv_close( $connX );
		
		return $cadena_lista;
  	}
	
	//ADICIONADO EL 28 DE ENERO 2021
	public function get_lista_cuadernos($id){
	
		
		$listar = $this->db->prepare( "SELECT t1.cuaderno AS id,t2.des
			    					   FROM (expe_digital t1 
			                           INNER JOIN expe_cuaderno t2 ON t1.cuaderno = t2.id)
				                       WHERE idradicado = '$id'
				                       GROUP BY cuaderno
				                       ORDER BY t1.cuaderno");
	
  		$listar->execute();

  		return $listar;
	
	}
	
	
	//ADICIONADO EL 19 DE MARZO 2021
	
	public function get_lista_parametro($nombrelista,$campoordenar,$idparametro){
	
		//ID USUARIOS, QUE VISUALIZAN LISTA DEPENDENCIA 1 AL 12 JUZGADO MUNICIPAL  Y OFICINA DE EJECUCION
		if($idparametro == 43){
		
			$listar = $this->db->prepare("SELECT * FROM ".$nombrelista." WHERE id NOT IN(13,14,15,16,17) ORDER BY ".$campoordenar);
		
		}
		//ID USUARIOS, QUE VISUALIZAN LISTA DEPENDENCIA 1 JUZGADO EJECUCION  Y OFICINA DE EJECUCION
		if($idparametro == 44){
		
			$listar = $this->db->prepare("SELECT * FROM ".$nombrelista." WHERE id IN(15,18) ORDER BY ".$campoordenar);
		
		}
		//ID USUARIOS, QUE VISUALIZAN LISTA DEPENDENCIA 2 JUZGADO EJECUCION  Y OFICINA DE EJECUCION
		if($idparametro == 45){
		
			$listar = $this->db->prepare("SELECT * FROM ".$nombrelista." WHERE id IN(16,18) ORDER BY ".$campoordenar);
		
		}
		//ID USUARIOS, QUE VISUALIZAN LISTA DEPENDENCIA 1 Y 2  JUZGADO EJECUCION  Y OFICINA DE EJECUCION
		if($idparametro == 46){
		
			$listar = $this->db->prepare("SELECT * FROM ".$nombrelista." WHERE id IN(15,16,18) ORDER BY ".$campoordenar);
		
		}
	
  		$listar->execute();

  		return $listar;
	
	}
	
	
	//NUEVO EL 26 DE MARZO 2021
	
	public function cargar_indice_electronico(){
	
	
		set_time_limit (240000000);
		
		
		$modelo     = new archivoModel();
		
		//SE OBTIENEN LOS DATOS
		$idradicado   = trim($_POST['id_radi_ie']);
		
		$idusuario    = $_SESSION['idUsuario'];
		
		$fecha_amd    = $modelo->get_fecha_actual_amd();	
	  	$hora_militar = $modelo->get_hora_actual_24horas();
		
		//***********************************PARA EL ARCHIVO***************************************
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "INDICE_ELECTRONICO";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		$nom = trim($_SESSION['idUsuario']);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
		
		//***********************************FIN PARA EL ARCHIVO***************************************

		$error_transaccion   = 0; //variable para detectar error
		$msg = " ";
								
						
								
		try {  
									
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
			//EMPIEZA LA TRANSACCION
			$this->db->beginTransaction();
										
								
				//------------------------------------SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
									
				//AQUI SE CREA EL DIRECTORIO, CON EL ID ASIGNADO A LA DEMANDA
				if(is_dir($raiz.'/'.$nom.'/'.$idradicado)){$bandera=0;}
				else{mkdir($raiz.'/'.$nom.'/'.$idradicado, 0, true);}

				$mensage       = '';//Declaramos una variable mensaje quue almacenara el resultado de las operaciones.
				$archivo_error = 0;
									
				foreach ($_FILES as $key) //Iteramos el arreglo de archivos
				{
					if($key['error'] == UPLOAD_ERR_OK )//Si el archivo se paso correctamente Ccontinuamos 
					{
											
						$nombre_archivo = date('ymdHis'). '-' .$key['name'];//Obtenemos el nombre original del archivo y lo concatenamos con (Aï¿½oMesDiaHoramilitarMinutosSegundos)
						$temporal       = $key['tmp_name']; //Obtenemos la ruta Original del archivo
						//$Destino        = $ruta.$NombreOriginal;//Creamos una ruta de destino con la variable ruta y el nombre original del archivo	
						$ruta           = $raiz.'/'.$nom.'/'.$idradicado.'/'.$nombre_archivo;
						
						move_uploaded_file($temporal, utf8_decode($ruta)); //Movemos el archivo temporal a la ruta especificada		
												
					}
									
					if ($key['error']=='') //Si no existio ningun error, retornamos un mensaje por cada archivo subido
					{
						
						$lineas = file($ruta,FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
						$long   = count($lineas);
						
						$indice_archivo_1 = explode("-",$nombre_archivo);
						$indice_archivo_2 = trim($indice_archivo_1[0]);
						
						
						//ASI CUANDO EL ARCHIVO TIENE ENCABEZADOS
						//$i=1;
						$i=0;
									
						while($i < $long){
										
							//echo $lineas[$i]."\n";
							
							
							//SE REAKIZA ESTE CAMBIO YA QUE EN EL EQUIPO
							//LOCAL GUARDA CON ; Y ES WINDOWS 7 Y EN LOS
							//EQUIPOS DE LA OFICINA GUARDA CON , Y SON WINDOWS 10
							//$fila = explode(";",$lineas[$i]);
							$fila = explode(",",$lineas[$i]);
							
							//LONGITUD DEL REGISTRO O FILA DEL ARCHIVO
							$longregistroarchivo = count($fila);
							
				
							$pos_0  = trim($fila[0]);
							
							/*$datos_PROCESOX_IE = $modelo->get_datos_PROCESOX($pos_0);
							$filaie            = $datos_PROCESOX_IE->fetch();
							$idradicadoie	   = $filaie[id];*/
	
	
							$pos_1  = trim($fila[1]);
							
							//FECHA CREACION
							$pos_2  = trim($fila[2]);
							
							
							/*echo '<script languaje="JavaScript"> 
									
										var lineasX = "'.$pos_2.'";
										
										alert(lineasX);
										
							
								</script>';*/
							
							//RANGO DE FECHAS
							//trim($fila[10]) --> ORIGEN (1 DIGITALIZDO, 2 ELECTRONICO)
							if(trim($fila[10]) == 1){
							
								//$pos_2A = explode(",",$pos_2);
								$pos_2A = explode(";",$pos_2);
								
								$fecha_de = $pos_2A[0];
								$fecha_a  = $pos_2A[1];
								$fecha_cre = '0000-00-00';
							
							}
							//SOLO FECHA DE CREACION
							if(trim($fila[10]) == 2){
							
				
								$fecha_de = '0000-00-00';
								$fecha_a  = '0000-00-00';
								$fecha_cre = $pos_2;
							
							}
							
							$pos_3  = trim($fila[3]);
							$pos_4  = trim($fila[4]);
							$pos_5  = trim($fila[5]);
							$pos_6  = trim($fila[6]);
							$pos_7  = trim($fila[7]);
							$pos_8  = trim($fila[8]);
							$pos_9  = trim($fila[9]);
							$pos_10 = trim($fila[10]);
							$pos_11 = trim($fila[11]);
							$pos_12 = trim($fila[12]);
							
							
							
							//FILTRO 1 SE VALIDA QUE ESTAS COLUMNAS TENGAN DATOS, DE CADA REGISTRO O FILA DEL ARCHIVO
							//MENOS LA COLUMNA OBSERVACIONES PUEDE IR VACIA
							if( 
								strlen($pos_0)  == 0 ||
								strlen($pos_1)  == 0 || strlen($pos_2)  == 0 || 
								strlen($pos_3)  == 0 || strlen($pos_4)  == 0 || 
								strlen($pos_5)  == 0 || strlen($pos_6)  == 0 || 
								strlen($pos_7)  == 0 || strlen($pos_8)  == 0 ||
								strlen($pos_9)  == 0 || strlen($pos_10) == 0 ||
								strlen($pos_12) == 0){
								
								$i = $i + 1; 
								
								$campovacio = $i;
								$msg        = "CAMPOS VACIOS REGISTRO: ".$campovacio."<br>"." RADICADO: ".$pos_0."<br>"." NOMBRE DOCUMENTO: ".$pos_1."<br>".
								              " FECHA CREACION DOCUMENTO: ".$pos_2."<br>"." FECHA INCORPORACION EXPEDIENTE: ".$pos_3."<br>".
											  " ORDEN DOCUMENTO: ".$pos_4."<br>"." NUMERO PAGINAS: ".$pos_5."<br>"." PAGINA INICIO: ".$pos_6."<br>".
											  " PAGINA FIN: ".$pos_7."<br>"." FORMATO: ".$pos_8."<br>"." TAMANO: ".$pos_9."<br>"." ORIGEN: ".$pos_10."<br>".
											  " CUADERNO: ".$pos_12;
								
								$i = $long;
								$error_transaccion = 1;
								
							}
							else{
							
								//FILTRO 2 SE VALIDA QUE CADA REGISTRO O FILA DEL ARCHIVO TENGAN UNA LONGITUD DE 13 COLUMNAS
								if($longregistroarchivo != 13){
							
									$i = $i + 1;
									
									$campovacio = $i;
									$msg        = "ERROR EN LONGITUD DE REGISTRO: ".$campovacio." , LONGITUD REGISTRO: ".$longregistroarchivo;
									
									
									$i = $long;
									$error_transaccion = 1;
								
								}
								else{
									
								
									//FILTRO 3 LONGITUD ARCHIVO
									$ncaracteresX = $modelo->get_caracteres_archivo($pos_1);
									
									//AQUI 40 YA QUE DESDE LOS CIVILES MUNICIPALES YA VIENE INCLUIDO EL CONSECUTIVO 
									//EJEMPLO:
									//01DemandaConAnexos
									//02ActaIndividualReparto
									//03ContestacionDemanda
									//04AudienciaIncial
									//05MemorialsustituciondePoder
											
									if($ncaracteresX > 40){
											
										$i = $i + 1;
									
										$campovacio = $i;
										$msg        = "EL NOMBRE DEL ARCHIVO NO DEBE TENER MAS DE 38 CARACTERES: ".$pos_1." , CANTIDAD ACTUAL DE CARACTERES: ".$ncaracteresX." , REGISTRO: ".$campovacio;
										
										
										$i = $long;
										$error_transaccion = 1;
											
									}
									else{
										
										//FILTRO 4 CARACTERES NO PERMINITOS EN NOMBRE DE ARCHIVO
										$NOcaracteresX   = $modelo->validar_nombre_archivo($pos_1);
										
										$NOcaracteresX_1 = explode("//////",$NOcaracteresX);
										$NOcaracteresX_2 = $NOcaracteresX[0];
										
										if($NOcaracteresX_2 >= 1){
										
										
											$i = $i + 1;
									
											$campovacio = $i;
											$msg        = "EL NOMBRE DEL ARCHIVO TIENE CARACTERES NO PERMITIDOS: ".$pos_1." , REGISTRO: ".$campovacio;
											
											
											$i = $long;
											$error_transaccion = 1;
										
										}
										
									
									}
								
									
									
							
								}
								
								
								
								
								
							}
							
							if($error_transaccion == 0){
										
								$this->db->exec("INSERT INTO expe_indice_electronico (idradicado,nombre_docuemento,fecha_cre,fecha_de,fecha_a,fecha_in,
												 orden_documento,numero_paginas,pagina_inicio,pagina_fin,formato,tamano,origen,obs,cuaderno,
												 idusuario_carga,fecha_carga,hora_carga,archivo,activo,indice_archivo) 
												 VALUES('$idradicado','$pos_1','$fecha_cre','$fecha_de','$fecha_a','$pos_3','$pos_4','$pos_5',
												 '$pos_6','$pos_7','$pos_8','$pos_9','$pos_10','$pos_11','$pos_12',
												 '$idusuario','$fecha_amd','$hora_militar','$ruta',1,'$indice_archivo_2')");
											 
							}
											 
											
							$i = $i + 1;
																	
																	 
						}//FIN WHILE while($i < $long){	
							
			
												
					}
					
					if ($key['error']!='')//Si existio algï¿½n error retornamos un el error por cada archivo.
					{
						$msg .= '-> No se pudo subir el archivo <b>'.$nombre_archivo.'</b> debido al siguiente Error: n'.$key['error']; 
												
						$archivo_error = 1;
						
						$error_transaccion = 1;
					}
										
				}
									
				//echo $mensage;// Regresamos los mensajes generados al cliente
									
				//------------------------------------FIN SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
			
								
			//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
			
			if($error_transaccion == 0){		
																
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
			
			}											
														
			//echo $msg;
											
		} 
		catch (Exception $e) {
									
							
			//IDENTIFICA QUE OCURIIO UN ERROR,CON ALGUN ARCHIVO QUE SE DESEA CARGAR
			if($archivo_error == 1){
							
				$msg = "2"."******"."ERROR"."******"."EN PROCESO: ".$e->getMessage()." ERROR EN ARCHIVO: ".$mensage;
			}
			else{
							
				$msg = "2"."******"."ERROR"."******"."EN PROCESO: ".$e->getMessage();
							
			}
										
			
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();
			
							
			//SE ELIMINA EL MEMORIAL, DE ESTA FORMA YA QUE ES UN SOLO ARCHIVO
			$ruta_borrar = $raiz.'/'.$nom.'/'.$idradicado.'/'.$nombre_archivo;
			unlink($ruta_borrar);
			
										
			$error_transaccion   = 1;
										
		}
									
		if($error_transaccion){
							
			echo $msg;
							
		}
		else{
					
			//SE TERMINA LA TRANSACCION  
			//$this->db->commit();
									
			//$msg = "1"."******"."PROCESO SE REALIZA CORRECTAMENTE"."******".$last_id."******".$fechalog."******".$horalog;
			
			$msg = "PROCESO SE REALIZA CORRECTAMENTE";
								
			echo $msg;
						
		}
		
		
  	}
	
	public function listar_indice_electronico($id_radi){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$fecha_actual = $modelo->get_fecha_actual_amd();
			
			
			$idusuario     = $_SESSION['idUsuario'];
			
			
			
			$listar = $this->db->prepare("
			
										 	SELECT * FROM expe_indice_electronico 
											WHERE idradicado = '$id_radi'
											AND activo = 1
											ORDER BY id"
											
										);
										
										
										
			
			
			/*$SQL = "
						SELECT * FROM expe_indice_electronico 
						WHERE idradicado = '$id_radi'
						AND activo = 1
						ORDER BY id";
											
											
			
			echo $SQL;*/

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function adicionar_folios_masivo(){
	
		set_time_limit (240000000);
		
		$modelo = new archivoModel();
		
		//DATOS DE EQUIPO NOMBRE Y IP
		$nombre_equipo_registra = gethostbyaddr( $_SERVER['REMOTE_ADDR'] );
		//$nombre_equipo_registra = gethostbyaddr( $_SERVER['HTTP_CLIENT_IP'] );
		$ip_equipo_registra     = gethostbyname($nombre_equipo_registra);
		
		//-------------------------------------------------------------------------
		//IDENTIFICAR QUE EL USUARIO EN SESION, PERTENECE 
		//A JUZGADO 1 O 2 DE EJECUCION Y NO A LA OFICINA DE EJECUCION
		//CON EL OBJETO, QUE AL REGISTRAR EL FOLIO NUEVO
		//EL SISTEMA IDENTIFIQUE QUE ESTE REGISTRO Y AUTO
		//SALE PARA ESTADO EL DIA SIGUIENTE 
		$Jid_juzgado = $_SESSION['id_juzgado'];
		
		$para_estado = 0;
		
		if($Jid_juzgado == 15 || $Jid_juzgado == 16){
		
			$para_estado = 1;
			$idjuzgado   = $Jid_juzgado;
			
		}
		else{
		
			$para_estado = 0;
			$idjuzgado   = 0;
		}
		//-------------------------------------------------------------------------
		
		
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
		
		
		//SE OBTIENEN LOS DATOS
		$idusuario     = $_SESSION['idUsuario'];
		
		$idradiX       = trim($_POST['idradiX']);
		$radiX         = trim($_POST['radiX']);
		
		$id_juzgadoX   = trim($_POST['id_juzgadoX']);
		
		//-----------ARMAR DIRECTORIO RADICADO--------------
		
		//EJ: 17001400300220140017100 ---> 220140017100
		//EJ: 17001400301220140017100 ---> 1220140017100
		
		$valorradicado = $radiX;
		
		$cadena_juzgado;
		$valorradicado_8 = substr($valorradicado, 10, 2);
		$J;
		// Recorremos cada carï¿½cter de la cadena
		for($i=0; $i<strlen($valorradicado_8); $i++){
			
			if($valorradicado_8[0] == 0){
				
				$cadena_juzgado = substr($valorradicado, 11, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 11, 1);
			}
			
			if($valorradicado_8[0] == 1){
				
				$cadena_juzgado = substr($valorradicado, 10, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 10, 2);
			}
			
			
		}
		
		
		//-----------FIN ARMAR DIRECTORIO RADICADO---------
		
		
	
		$opcionX       = 1;
		
	
		//***********************************PARA EL ARCHIVO***************************************
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "EXPEDIENTE_DIGITAL_2";
		$nom  = trim($J."/".$cadena_juzgado);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//***********************************FIN PARA EL ARCHIVO***************************************
		
						$cadena_archivos = "";
					
						
						$error_transaccion   = 0; //variable para detectar error
						$msg = " ";
								
						//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
						//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
								
							
								
						try {  
									
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
									
									
									//for($i = 0; $i < count($_POST['idradicado']); $i++){
									
									$error_nombre     = 0;
									$contador_archivo = 0;
									$contador_excel   = 0;
						
									//---------------VALIDAR CANTIDAD ARCHIVOS VS INFORMACION DEL EXCEL 13 DE ABRIL 2021-----------------------
									
									
									//Iteramos registros de la tabla y Iteramos el arreglo de archivos
									for($i = 0; $i < count($_POST['id']); $i++){
									
										$nombre_archivo_subir = $_FILES['archivo_carga']['name'][$i];
										
										if( !empty($nombre_archivo_subir) ){
										
											$contador_archivo = $contador_archivo + 1;
										}
										
										$contador_excel       = $contador_excel + 1;
										
									}
									
									if( $contador_excel != $contador_archivo ){
									
										$error_nombre = 1;
									
												
										echo '<script languaje="JavaScript"> 
									
												var cantidad_excel   = "'.$contador_excel.'";
																	
												var cantidad_archivos = "'.$contador_archivo.'";
																	
												alert("EL NUMERO DE ARCHIVOS SELECCIONADOS: "+cantidad_archivos+" NO ES IGUAL A LA INFORMACION DE LA TABLA: "+cantidad_excel);
																		
												var idradiX = "'.$idradiX.'";
												var radiX   = "'.$radiX.'";
																	
												location.href="index.php?controller=archivo&action=Listar_Indice_Electronico&datosINDICE="+idradiX+"******"+radiX;
																						
																
											</script>';
									
									}
									
									
									//---------------FIN VALIDAR CANTIDAD ARCHIVOS VS INFORMACION DEL EXCEL 13 DE ABRIL 2021-------------------
									
									
									
									
									//---------------VALIDAR QUE LA COLUMNA Nombre Documento CONCUERDE CON LOS ARCHIVOS A CARGAR---------------------------
									
									$bandera_nombre = 0;
									$iaux           = 0;
									
									for($i = 0; $i < count($_POST['id']); $i++){
									
									
										
						
										$nombre_columna_2 = explode(".",$_POST['d3ie'][$i]);
										
										if( count($nombre_columna_2) >= 2 ){
										
											$nombre_archivo_subir_2 = $_FILES['archivo_carga']['name'][$i];
											
											$nombre_columna         = $_POST['d3ie'][$i];
										}
										else{
										
											$nombre_archivo_subir   = explode(".",$_FILES['archivo_carga']['name'][$i]);
										
											$nombre_archivo_subir_2 = $nombre_archivo_subir[0];
											
											$nombre_columna         = $_POST['d3ie'][$i];
										
										}
										
										
										
										if( trim($nombre_archivo_subir_2) == trim($nombre_columna) ){
										
											$bandera_nombre = 0;
										}
										else{
										
											$bandera_nombre = 1;
											
											$iaux = $i + 1;
											$i    = count($_POST['id']);
										}
										
										
										
									}
									
									if($bandera_nombre == 1){
									
									
										$error_nombre = 1;
									
												
										echo '<script languaje="JavaScript"> 
									
												var nombre_archivo_subir = "'.$nombre_archivo_subir_2.'";
																	
												var nombre_columna       = "'.$nombre_columna.'";
												
												var registro             = "'.$iaux.'";
																	
												alert("EL NOMBRE DEL ARCHIVO : "+nombre_archivo_subir+" NO ES IGUAL AL NOMBRE DEL ARCHIVO DE LA COLUMNA Nombre Documento: "+nombre_columna+" REGISTRO : "+registro);
																		
												var idradiX = "'.$idradiX.'";
												var radiX   = "'.$radiX.'";
																	
												location.href="index.php?controller=archivo&action=Listar_Indice_Electronico&datosINDICE="+idradiX+"******"+radiX;
																						
																
											</script>';
									
									}
									
									
									//---------------FIN VALIDAR QUE LA COLUMNA Nombre Documento CONCUERDE CON LOS ARCHIVOS A CARGAR-----------------------
									
									
									
									
									//---------------VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									
									
									for($i = 0; $i < count($_POST['id']); $i++){
									
									
									
											//$nombre_archivo = "demanda_";
											
										
											$nombre_archivo = $_FILES['archivo_carga']['name'][$i];
											
											for($x = 0; $x < strlen($nombre_archivo); $x++) {
											
												//CAPTUTA ASCII CARACTER
												 //caracter = ord(x);
												 
												 //echo "<br>"."CARACTER: ".$nombre_archivo[$x]." ASCII: ".ord($nombre_archivo[$x]);
												 
												 $caracter = ord($nombre_archivo[$x]);
												 
												 if( 
																					
																					 
														($caracter >= 32  && $caracter <= 44)   ||
														($caracter >= 47  && $caracter <= 47)   || 
														($caracter >= 58  && $caracter <= 64)   || 
														($caracter >= 91  && $caracter <= 94)   || 
														($caracter >= 96  && $caracter <= 96)   ||
														($caracter >= 123 && $caracter <= 254)  
																					 
												) {
														
														//echo "CARACTER NO VALIDO EN NOMBRE DE ARCHIVO:".$nombre_archivo[$x]."<br>"."<br>"." SOLO SE PERMITE EL CARACTER RAYA AL MEDIO (-) Y NOMBRES CONFORMADOS POR LETRAS, NUMEROS Y TODO PEGADO";
														
														$x = strlen($nombre_archivo);
														
														$error_nombre = 1;
														
														$i = count($_POST['id']);
														
														$idcaracter = chr($caracter);
														
														echo '<script languaje="JavaScript"> 
									
																	var nombre_archivoX = "'.$nombre_archivo.'";
																	
																	var idcaracter      = "'.$idcaracter.'";
																	
																	
																	alert("CARACTER NO VALIDO EN NOMBRE DE ARCHIVO: "+nombre_archivoX+" CARACTER: "+idcaracter+" SOLO SE PERMITE EL CARACTER RAYA AL MEDIO (-), RAYA AL PISO (_) Y NOMBRES CONFORMADOS POR LETRAS O NUMEROS Y TODO PEGADO");
																	

																	
																	var idradiX = "'.$idradiX.'";
																	var radiX   = "'.$radiX.'";
																	
																	location.href="index.php?controller=archivo&action=Listar_Indice_Electronico&datosINDICE="+idradiX+"******"+radiX;
																						
																
															</script>';
														
												
												}
												
												
												
											}
									
									
									
									}
									
									
									
									//---------------FIN VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									
									//REALIZA REGISTRO, NO EXISTE INCONSISTENCIAS EN NOMBRE DE ARCHIVO(S)
									if($error_nombre == 0){
									
										//SE USA EL FOR INVERSO, PARA QUE EN LA VISTA
										//expediente_folio_nuevo.php, CADA VEZ QUE SE ADICIONE UN NUEVO FORMULARIO 
										//PARA AGREGAR NUEVO FOLIO, EL FORMULARIO QUE SE DESPLAZA Y VA QUEDANDO
										//DE ULTIMO SEA EL PRIMERO EN EL REGISTRO EN LA TABLA expe_digital EN SU ID
										//AUTONUMERICO
										//for($i = count($_POST['id']) - 1; $i >= 0 ; $i--){
										
										//AQUI EL FORSE USA COMO SIEMPRE DEL PRIMERO AL ULTIMO
										//TAL CUAL SUBIO EL EXCEL .CSV
										for($i = 0; $i < count($_POST['id']); $i++){
										
										
											$id_ie      = trim($_POST['id'][$i]);
											
											$idradicado = trim($idradiX);
											$fecha      = trim($_POST['d7ie'][$i]);
											$hora       = $horalog;
											
											
											$folios     = trim($_POST['d9ie'][$i]);
											
											$cuaderno   = trim($_POST['d17ie'][$i]);
											$des        = utf8_decode(trim($_POST['d3ie'][$i]));	
											
											
											$dependencia = trim($_POST['d18ie'][$i]);;
											
											//SE DEFINE RANGO DE FECHAS DE CREACION DOCUMENTO
											//ORIGEN = 1 DIGITALIZADO
											//if($digitalizadoX == 1){
											if(trim($_POST['d14ie'][$i]) == 1){
											
												$digitalizadoX = 1;
											
												$fecha_de  = trim($_POST['d5ie'][$i]);
												$fecha_a   = trim($_POST['d6ie'][$i]);
												
												$fecha_cre = trim('0000-00-00');
												
											}
										    //SE DEFINE SOLO FECHA DE CREACION DOCUMENTO
											//ORIGEN = 2 ELECTRONICO
											else{
											
												$digitalizadoX = 2;
												
												$fecha_cre = trim($_POST['d4ie'][$i]);
												
												$fecha_de  = trim('0000-00-00');
												$fecha_a   = trim('0000-00-00');
											}
								
								
											$obs = utf8_decode(trim($_POST['d15ie'][$i]));
											
											$fecha_estado = '0000-00-00';
											
											$orden_documento = trim($_POST['d8ie'][$i]);
				
											if( !empty( $_FILES['archivo_carga']['name'] ) ){
											
												
												//AQUI SE CREA EL DIRECTORIO
												//$dir_idradi = 'uploads/' .$_POST['idradicado'][$i];
												//$dir_idradi = $raiz.'/' .$_POST['idradicado'][$i];
												$dir_idradi = $raiz.'/' .$nom;
												
												if(is_dir($dir_idradi)){$bandera=0;}
												else{mkdir($dir_idradi, 0, true);}
											
												//$foto = date('ymdhis') . '-' . strtolower($_FILES['Foto']['name'][$i]);
												$foto = date('ymdhis') . '-' . $_FILES['archivo_carga']['name'][$i];
												$tipo = $_FILES['archivo_carga']['type'][$i];
												$ruta = utf8_decode($dir_idradi.'/'.$foto);
												
												//move_uploaded_file ($_FILES['Foto']['tmp_name'][$i], 'uploads/' . $foto);
												//move_uploaded_file ($_FILES['Foto']['tmp_name'][$i], utf8_decode($ruta));
												move_uploaded_file ($_FILES['archivo_carga']['tmp_name'][$i],$ruta);
												
												
												//usleep ï¿½ Retrasar la ejecuciï¿½n en microsegundos
												//Esperar 1 segundos
												//SE APLICA ESTA ACCION PARA QUE EL ID CAMBIE EN UN SEGUNDO date('ymdhis') 
												//Y NO SEA EL MISMO
												usleep(1000000);
							
												
											}
											
											//SE CIERRAN LOS FOLIOS Y SE UBICA DONDE
											//SE CARGA EL ARCHIVO, YA QUE SE CALCULAN
											//AUTOMATICAMENTE SEGUN EL NUMERO DE PAGINAS DEL ARCHIVO
											//$folios = $modelo->numeroPaginasPdf($ruta);
											
											echo '<script languaje="JavaScript"> 
										
														var ruta = "'.$ruta.'";
														var dat_3 = "'.$folios.'";
														
														alert("FOLIOS: "+dat_3+" RUTA:"+ruta);
														
											
												</script>';
											
											$this->db->exec("INSERT INTO expe_digital (idradicado,fecha,hora,folios,cuaderno,tipo,ruta,des,idusuario,estado,para_estado,idjuzgado,fecha_estado,
											                 ip_equipo_registra,nombre_equipo_registra,id_dependencia,
															 fecha_creacion,fecha_de,fecha_a,origen,obs,id_ie,orden_documento) 
															 VALUES ('$idradicado','$fecha','$hora','$folios','$cuaderno','$tipo','$ruta','$des','$idusuario',1,'$para_estado','$id_juzgadoX','$fecha_estado',
															 '$ip_equipo_registra','$nombre_equipo_registra','$dependencia',
															 '$fecha_cre','$fecha_de','$fecha_a','$digitalizadoX','$obs','$id_ie','$orden_documento')");
															 
											
											//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
											$last_id = $this->db->lastInsertId();
										
											 
											
											//HISTORIAL
											$actuacion = 'REGISTRO FOLIO(S) MASIVO';
											$tablas    = 'expe_digital';
											$tipo      = 'RF';
											$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo,idexpdigi,
											                 ip_equipo_registra,nombre_equipo_registra,id_dependencia,
															 fecha_creacion,fecha_de,fecha_a,origen,obs,id_ie,orden_documento)
															 VALUES('$idradiX','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$ruta','$tipo','$last_id',
															 '$ip_equipo_registra','$nombre_equipo_registra','$dependencia',
															 '$fecha_cre','$fecha_de','$fecha_a','$digitalizadoX','$obs','$id_ie','$orden_documento')");
															 
															 
										 	//ACTUALIZAR activo = 0 PARA QUE YA NO SE VISUALIZEN LOS
											//REGISTROS CARGADOS
											$this->db->exec("UPDATE expe_indice_electronico 
											                 SET activo = 0 
															 WHERE id = '$id_ie'");					 
															 
										}
										
										
										
										
													
										//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
																				
										//SE TERMINA LA TRANSACCION  
										$this->db->commit();
																
										//echo $msg;
									
									
									
									}//FIN if($error_nombre == 0){
									else{
									
										$error_transaccion = 1;
									}
											
									
									  
						} 
						catch (Exception $e) {
									
							$msg = "ERROR EN PROCESO: ".$e->getMessage();			
						
							
										
										
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
							
					
							//echo $msg;
										
							$error_transaccion   = 1;
							
							
						}
							
										
							
						if($error_transaccion){
								
							//echo $msg;
							
							//SE ADIICONA ESTA PARTE PARA QUE SE QUEDE EN REGISTRAR FOLIO
							//Y SEA POSIBLE ORGANIZAR EL NOMBRE ARCHIVO CON LA INCOSISTENCIA
							if($error_nombre == 1){
							
								$error_nombre = 1;
							
							}
							else{
							
								//PARA QUE EN LA VISTA EXPEDIENTE_DIGITALNO ENTRE
								//CUANDO LOS PROCESOS SON CORRECTOS
								$opcionX = 0;
								
								echo '<script languaje="JavaScript"> 
										
					
										var msg = "'.$msg.'";	
										
										var idradiX = "'.$idradiX.'";
										var radiX   = "'.$radiX.'";
										var opcionX = "'.$opcionX.'";
										
										
										alert(msg);
										
										location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
										
										
									  </script>';
									  
									  
							}
							
							
								
						}
						else{
						
						
					
							header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX);
		
								
						}
					
					

				
  	}
	
	public function adicionar_folios_masivoANTERIOR_210421(){
	
		set_time_limit (240000000);
		
		$modelo = new archivoModel();
		
		//DATOS DE EQUIPO NOMBRE Y IP
		$nombre_equipo_registra = gethostbyaddr( $_SERVER['REMOTE_ADDR'] );
		//$nombre_equipo_registra = gethostbyaddr( $_SERVER['HTTP_CLIENT_IP'] );
		$ip_equipo_registra     = gethostbyname($nombre_equipo_registra);
		
		//-------------------------------------------------------------------------
		//IDENTIFICAR QUE EL USUARIO EN SESION, PERTENECE 
		//A JUZGADO 1 O 2 DE EJECUCION Y NO A LA OFICINA DE EJECUCION
		//CON EL OBJETO, QUE AL REGISTRAR EL FOLIO NUEVO
		//EL SISTEMA IDENTIFIQUE QUE ESTE REGISTRO Y AUTO
		//SALE PARA ESTADO EL DIA SIGUIENTE 
		$Jid_juzgado = $_SESSION['id_juzgado'];
		
		$para_estado = 0;
		
		if($Jid_juzgado == 15 || $Jid_juzgado == 16){
		
			$para_estado = 1;
			$idjuzgado   = $Jid_juzgado;
			
		}
		else{
		
			$para_estado = 0;
			$idjuzgado   = 0;
		}
		//-------------------------------------------------------------------------
		
		
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
		
		
		//SE OBTIENEN LOS DATOS
		$idusuario     = $_SESSION['idUsuario'];
		
		$idradiX       = trim($_POST['idradiX']);
		$radiX         = trim($_POST['radiX']);
		
		$id_juzgadoX   = trim($_POST['id_juzgadoX']);
		
		//-----------ARMAR DIRECTORIO RADICADO--------------
		
		//EJ: 17001400300220140017100 ---> 220140017100
		//EJ: 17001400301220140017100 ---> 1220140017100
		
		$valorradicado = $radiX;
		
		$cadena_juzgado;
		$valorradicado_8 = substr($valorradicado, 10, 2);
		$J;
		// Recorremos cada carï¿½cter de la cadena
		for($i=0; $i<strlen($valorradicado_8); $i++){
			
			if($valorradicado_8[0] == 0){
				
				$cadena_juzgado = substr($valorradicado, 11, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 11, 1);
			}
			
			if($valorradicado_8[0] == 1){
				
				$cadena_juzgado = substr($valorradicado, 10, 13);
				
				$i = strlen($valorradicado_8);
				
				$J = "J".substr($valorradicado, 10, 2);
			}
			
			
		}
		
		
		//-----------FIN ARMAR DIRECTORIO RADICADO---------
		
		
	
		$opcionX       = 1;
		
	
		//***********************************PARA EL ARCHIVO***************************************
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "EXPEDIENTE_DIGITAL_2";
		$nom  = trim($J."/".$cadena_juzgado);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//***********************************FIN PARA EL ARCHIVO***************************************
		
						$cadena_archivos = "";
					
						
						$error_transaccion   = 0; //variable para detectar error
						$msg = " ";
								
						//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
						//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
								
							
								
						try {  
									
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
									
									
									//for($i = 0; $i < count($_POST['idradicado']); $i++){
									
									$error_nombre     = 0;
									$contador_archivo = 0;
									$contador_excel   = 0;
						
									//---------------VALIDAR CANTIDAD ARCHIVOS VS INFORMACION DEL EXCEL 13 DE ABRIL 2021-----------------------
									
									
									//Iteramos registros de la tabla y Iteramos el arreglo de archivos
									for($i = 0; $i < count($_POST['id']); $i++){
									
										$nombre_archivo_subir = $_FILES['archivo_carga']['name'][$i];
										
										if( !empty($nombre_archivo_subir) ){
										
											$contador_archivo = $contador_archivo + 1;
										}
										
										$contador_excel       = $contador_excel + 1;
										
									}
									
									if( $contador_excel != $contador_archivo ){
									
										$error_nombre = 1;
									
												
										echo '<script languaje="JavaScript"> 
									
												var cantidad_excel   = "'.$contador_excel.'";
																	
												var cantidad_archivos = "'.$contador_archivo.'";
																	
												alert("EL NUMERO DE ARCHIVOS SELECCIONADOS: "+cantidad_archivos+" NO ES IGUAL A LA INFORMACION DE LA TABLA: "+cantidad_excel);
																		
												var idradiX = "'.$idradiX.'";
												var radiX   = "'.$radiX.'";
																	
												location.href="index.php?controller=archivo&action=Listar_Indice_Electronico&datosINDICE="+idradiX+"******"+radiX;
																						
																
											</script>';
									
									}
									
									
									//---------------FIN VALIDAR CANTIDAD ARCHIVOS VS INFORMACION DEL EXCEL 13 DE ABRIL 2021-------------------
									
									
									
									
									//---------------VALIDAR QUE LA COLUMNA Nombre Documento CONCUERDE CON LOS ARCHIVOS A CARGAR---------------------------
									
									$bandera_nombre = 0;
									$iaux           = 0;
									
									for($i = 0; $i < count($_POST['id']); $i++){
									
									
										
						
										$nombre_columna_2 = explode(".",$_POST['d3ie'][$i]);
										
										if( count($nombre_columna_2) >= 2 ){
										
											$nombre_archivo_subir_2 = $_FILES['archivo_carga']['name'][$i];
											
											$nombre_columna         = $_POST['d3ie'][$i];
										}
										else{
										
											$nombre_archivo_subir   = explode(".",$_FILES['archivo_carga']['name'][$i]);
										
											$nombre_archivo_subir_2 = $nombre_archivo_subir[0];
											
											$nombre_columna         = $_POST['d3ie'][$i];
										
										}
										
										
										
										if( trim($nombre_archivo_subir_2) == trim($nombre_columna) ){
										
											$bandera_nombre = 0;
										}
										else{
										
											$bandera_nombre = 1;
											
											$iaux = $i + 1;
											$i    = count($_POST['id']);
										}
										
										
										
									}
									
									if($bandera_nombre == 1){
									
									
										$error_nombre = 1;
									
												
										echo '<script languaje="JavaScript"> 
									
												var nombre_archivo_subir = "'.$nombre_archivo_subir_2.'";
																	
												var nombre_columna       = "'.$nombre_columna.'";
												
												var registro             = "'.$iaux.'";
																	
												alert("EL NOMBRE DEL ARCHIVO : "+nombre_archivo_subir+" NO ES IGUAL AL NOMBRE DEL ARCHIVO DE LA COLUMNA Nombre Documento: "+nombre_columna+" REGISTRO : "+registro);
																		
												var idradiX = "'.$idradiX.'";
												var radiX   = "'.$radiX.'";
																	
												location.href="index.php?controller=archivo&action=Listar_Indice_Electronico&datosINDICE="+idradiX+"******"+radiX;
																						
																
											</script>';
									
									}
									
									
									//---------------FIN VALIDAR QUE LA COLUMNA Nombre Documento CONCUERDE CON LOS ARCHIVOS A CARGAR-----------------------
									
									
									
									
									//---------------VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									
									
									for($i = 0; $i < count($_POST['id']); $i++){
									
									
									
											//$nombre_archivo = "demanda_";
											
										
											$nombre_archivo = $_FILES['archivo_carga']['name'][$i];
											
											for($x = 0; $x < strlen($nombre_archivo); $x++) {
											
												//CAPTUTA ASCII CARACTER
												 //caracter = ord(x);
												 
												 //echo "<br>"."CARACTER: ".$nombre_archivo[$x]." ASCII: ".ord($nombre_archivo[$x]);
												 
												 $caracter = ord($nombre_archivo[$x]);
												 
												 if( 
																					
																					 
														($caracter >= 32  && $caracter <= 44)   ||
														($caracter >= 47  && $caracter <= 47)   || 
														($caracter >= 58  && $caracter <= 64)   || 
														($caracter >= 91  && $caracter <= 94)   || 
														($caracter >= 96  && $caracter <= 96)   ||
														($caracter >= 123 && $caracter <= 254)  
																					 
												) {
														
														//echo "CARACTER NO VALIDO EN NOMBRE DE ARCHIVO:".$nombre_archivo[$x]."<br>"."<br>"." SOLO SE PERMITE EL CARACTER RAYA AL MEDIO (-) Y NOMBRES CONFORMADOS POR LETRAS, NUMEROS Y TODO PEGADO";
														
														$x = strlen($nombre_archivo);
														
														$error_nombre = 1;
														
														$i = count($_POST['id']);
														
														$idcaracter = chr($caracter);
														
														echo '<script languaje="JavaScript"> 
									
																	var nombre_archivoX = "'.$nombre_archivo.'";
																	
																	var idcaracter      = "'.$idcaracter.'";
																	
																	
																	alert("CARACTER NO VALIDO EN NOMBRE DE ARCHIVO: "+nombre_archivoX+" CARACTER: "+idcaracter+" SOLO SE PERMITE EL CARACTER RAYA AL MEDIO (-), RAYA AL PISO (_) Y NOMBRES CONFORMADOS POR LETRAS O NUMEROS Y TODO PEGADO");
																	

																	
																	var idradiX = "'.$idradiX.'";
																	var radiX   = "'.$radiX.'";
																	
																	location.href="index.php?controller=archivo&action=Listar_Indice_Electronico&datosINDICE="+idradiX+"******"+radiX;
																						
																
															</script>';
														
												
												}
												
												
												
											}
									
									
									
									}
									
									
									
									//---------------FIN VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									
									//REALIZA REGISTRO, NO EXISTE INCONSISTENCIAS EN NOMBRE DE ARCHIVO(S)
									if($error_nombre == 0){
									
										//SE USA EL FOR INVERSO, PARA QUE EN LA VISTA
										//expediente_folio_nuevo.php, CADA VEZ QUE SE ADICIONE UN NUEVO FORMULARIO 
										//PARA AGREGAR NUEVO FOLIO, EL FORMULARIO QUE SE DESPLAZA Y VA QUEDANDO
										//DE ULTIMO SEA EL PRIMERO EN EL REGISTRO EN LA TABLA expe_digital EN SU ID
										//AUTONUMERICO
										//for($i = count($_POST['id']) - 1; $i >= 0 ; $i--){
										
										//AQUI EL FORSE USA COMO SIEMPRE DEL PRIMERO AL ULTIMO
										//TAL CUAL SUBIO EL EXCEL .CSV
										for($i = 0; $i < count($_POST['id']); $i++){
										
										
											$id_ie      = trim($_POST['id'][$i]);
											
											$idradicado = trim($idradiX);
											$fecha      = trim($_POST['d7ie'][$i]);
											$hora       = $horalog;
											
											
											$folios     = trim($_POST['d9ie'][$i]);
											
											$cuaderno   = trim($_POST['d17ie'][$i]);
											$des        = utf8_decode(trim($_POST['d3ie'][$i]));	
											
											
											$dependencia = trim($_POST['d18ie'][$i]);;
											
											//SE DEFINE RANGO DE FECHAS DE CREACION DOCUMENTO
											//ORIGEN = 1 DIGITALIZADO
											//if($digitalizadoX == 1){
											if(trim($_POST['d14ie'][$i]) == 1){
											
												$digitalizadoX = 1;
											
												$fecha_de  = trim($_POST['d5ie'][$i]);
												$fecha_a   = trim($_POST['d6ie'][$i]);
												
												$fecha_cre = trim('0000-00-00');
												
											}
										    //SE DEFINE SOLO FECHA DE CREACION DOCUMENTO
											//ORIGEN = 2 ELECTRONICO
											else{
											
												$digitalizadoX = 2;
												
												$fecha_cre = trim($_POST['d4ie'][$i]);
												
												$fecha_de  = trim('0000-00-00');
												$fecha_a   = trim('0000-00-00');
											}
								
								
											$obs = utf8_decode(trim($_POST['d15ie'][$i]));
											
											$fecha_estado = '0000-00-00';
											
				
											if( !empty( $_FILES['archivo_carga']['name'] ) ){
											
												
												//AQUI SE CREA EL DIRECTORIO
												//$dir_idradi = 'uploads/' .$_POST['idradicado'][$i];
												//$dir_idradi = $raiz.'/' .$_POST['idradicado'][$i];
												$dir_idradi = $raiz.'/' .$nom;
												
												if(is_dir($dir_idradi)){$bandera=0;}
												else{mkdir($dir_idradi, 0, true);}
											
												//$foto = date('ymdhis') . '-' . strtolower($_FILES['Foto']['name'][$i]);
												$foto = date('ymdhis') . '-' . $_FILES['archivo_carga']['name'][$i];
												$tipo = $_FILES['archivo_carga']['type'][$i];
												$ruta = utf8_decode($dir_idradi.'/'.$foto);
												
												//move_uploaded_file ($_FILES['Foto']['tmp_name'][$i], 'uploads/' . $foto);
												//move_uploaded_file ($_FILES['Foto']['tmp_name'][$i], utf8_decode($ruta));
												move_uploaded_file ($_FILES['archivo_carga']['tmp_name'][$i],$ruta);
												
												
							
												
											}
											
											//SE CIERRAN LOS FOLIOS Y SE UBICA DONDE
											//SE CARGA EL ARCHIVO, YA QUE SE CALCULAN
											//AUTOMATICAMENTE SEGUN EL NUMERO DE PAGINAS DEL ARCHIVO
											//$folios = $modelo->numeroPaginasPdf($ruta);
											
											echo '<script languaje="JavaScript"> 
										
														var ruta = "'.$ruta.'";
														var dat_3 = "'.$folios.'";
														
														alert("FOLIOS: "+dat_3+" RUTA:"+ruta);
														
											
												</script>';
											
											$this->db->exec("INSERT INTO expe_digital (idradicado,fecha,hora,folios,cuaderno,tipo,ruta,des,idusuario,estado,para_estado,idjuzgado,fecha_estado,
											                 ip_equipo_registra,nombre_equipo_registra,id_dependencia,
															 fecha_creacion,fecha_de,fecha_a,origen,obs,id_ie) 
															 VALUES ('$idradicado','$fecha','$hora','$folios','$cuaderno','$tipo','$ruta','$des','$idusuario',1,'$para_estado','$id_juzgadoX','$fecha_estado',
															 '$ip_equipo_registra','$nombre_equipo_registra','$dependencia',
															 '$fecha_cre','$fecha_de','$fecha_a','$digitalizadoX','$obs','$id_ie')");
															 
											
											//OBTENGO EL ULTIMO ID REGISTRADO DEL ULTIMO INSERT EN LA TABLA siepro_audiencia_juzgado
											$last_id = $this->db->lastInsertId();
										
											 
											
											//HISTORIAL
											$actuacion = 'REGISTRO FOLIO(S) MASIVO';
											$tablas    = 'expe_digital';
											$tipo      = 'RF';
											$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,archivos,tipo,idexpdigi,
											                 ip_equipo_registra,nombre_equipo_registra,id_dependencia,
															 fecha_creacion,fecha_de,fecha_a,origen,obs,id_ie)
															 VALUES('$idradiX','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$ruta','$tipo','$last_id',
															 '$ip_equipo_registra','$nombre_equipo_registra','$dependencia',
															 '$fecha_cre','$fecha_de','$fecha_a','$digitalizadoX','$obs','$id_ie')");
															 
															 
										 	//ACTUALIZAR activo = 0 PARA QUE YA NO SE VISUALIZEN LOS
											//REGISTROS CARGADOS
											$this->db->exec("UPDATE expe_indice_electronico 
											                 SET activo = 0 
															 WHERE id = '$id_ie'");					 
															 
										}
										
										
										
										
													
										//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
																				
										//SE TERMINA LA TRANSACCION  
										$this->db->commit();
																
										//echo $msg;
									
									
									
									}//FIN if($error_nombre == 0){
									else{
									
										$error_transaccion = 1;
									}
											
									
									  
						} 
						catch (Exception $e) {
									
							$msg = "ERROR EN PROCESO: ".$e->getMessage();			
						
							
										
										
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
							
					
							//echo $msg;
										
							$error_transaccion   = 1;
							
							
						}
							
										
							
						if($error_transaccion){
								
							//echo $msg;
							
							//SE ADIICONA ESTA PARTE PARA QUE SE QUEDE EN REGISTRAR FOLIO
							//Y SEA POSIBLE ORGANIZAR EL NOMBRE ARCHIVO CON LA INCOSISTENCIA
							if($error_nombre == 1){
							
								$error_nombre = 1;
							
							}
							else{
							
								//PARA QUE EN LA VISTA EXPEDIENTE_DIGITALNO ENTRE
								//CUANDO LOS PROCESOS SON CORRECTOS
								$opcionX = 0;
								
								echo '<script languaje="JavaScript"> 
										
					
										var msg = "'.$msg.'";	
										
										var idradiX = "'.$idradiX.'";
										var radiX   = "'.$radiX.'";
										var opcionX = "'.$opcionX.'";
										
										
										alert(msg);
										
										location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
										
										
									  </script>';
									  
									  
							}
							
							
								
						}
						else{
						
						
					
							header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX);
		
								
						}
					
					

				
  	}
	
	public function get_fechacreacion_MEMOX($idmemorial){
	
		
		$listar = $this->db->prepare("SELECT fecha_creacion FROM correspondencia 
		                              WHERE id = '$idmemorial'");
								
		$listar->execute();
									
		return $listar;							
		
	}
	
	//ADICIONADO EL 19 DE ABRIL 2021
	public function get_orden_documento_siguente($idcuaderno,$idradicado){
	
		
		$listar = $this->db->prepare("SELECT MAX(orden_documento + 1) AS orden_documento_siguente
									  FROM expe_digital
									  WHERE cuaderno = '$idcuaderno' AND idradicado = '$idradicado' AND estado = 1");
								
		$listar->execute();
									
		return $listar;							
		
	}
	
	public function get_cantidad_documentos($idcuaderno,$idradicado){
	
		
		$listar = $this->db->prepare("SELECT COUNT(id) AS numero FROM expe_digital
				 					  WHERE cuaderno = '$idcuaderno' AND idradicado = '$idradicado' AND estado = 1");
								
		$listar->execute();
									
		return $listar;							
		
	}
	
	public function get_nuevo_nombre($nombre_archivoX,$orden_documento_siguente){
	
		
		$bandera_fecha    = 0;
	
		$nombre_archivo       = explode(".",$nombre_archivoX);
		$nombre_archivo_2     = $nombre_archivo[0];
		$nuevo_nombre_archivo = $nombre_archivo_2;
		
		
		//CARGAMOS VECTOR $letras
		$letras                 = array();
		$nuevo_nombre_archivo_2 = "";
		$bandera_numero         = 0;
		
		for($x = 0; $x < strlen($nuevo_nombre_archivo); $x++){
		
			$letras[$x] = $nuevo_nombre_archivo[$x];
		}
		
		//IMPRIME VECTOR
		/*var_dump($letras);
		echo "<br>";
		echo count($letras);
		echo "<br>";
		echo $letras[46];
		echo "<br>";
		$caracter = ord($letras[46]);
		echo $caracter;*/
		
		$long_letras = count($letras);
		//RECORREMOS VECTOR $letras Y BUSCAMOS POSICIONES NUMERO
		//HASTA QUE SE ENCUENTRE UN CARACTER LETRA DIFERENTE A NUMERO
		//Y ELIMINAMOS DEL VECTOR $letras LOS NUMEROS ENCONTRADOS ANTES DE 
		//ENCONTRAR UNA LETRA
		for($x = 0; $x < $long_letras; $x++) {
		
			$caracter = ord($letras[$x]);
			
			//ASCCI NUMEROS 0 - 9 (48 - 57) y RAYA AL MEDIO - (45)										 
			if( ($caracter >= 48 && $caracter <= 57) || $caracter == 45 ){
															
				$bandera_numero = 0;
				//ELIMINAMOS POSICION
				unset($letras[$x]);
				
			}
			else{
	
				//PARAMOS EL FOR
				//$x = count($letras);
				$x = $long_letras;
			
			}
			
		
		}
		
		//El elemento ï¿½210409112903ï¿½ se elimina, pero la posiciï¿½n que tenï¿½a se mantiene. Si imprimimos el array el resultado serï¿½
		//Posiciï¿½n 0 = null
		//Posiciï¿½n 1 = xxx
		//Posiciï¿½n 2 = xxx
		//Por eso aplicamos array_values
		//Para reordenar las posiciones, el resultado serï¿½
		//Posiciï¿½n 0 = xxx
		//Posiciï¿½n 1 = xxx
		$letras = array_values($letras);
		
		//RECORREMOS EL VECTOR $letras Y CONSTRUIMOS EL NOMBRE DEL ARCHIVO NUEVO
		//EN LA VARIABLE $nuevo_nombre_archivo_2
		for($x = 0; $x < count($letras); $x++) {
		
		
			$nuevo_nombre_archivo_2 .= $letras[$x];
		
		}
		
		if($orden_documento_siguente >= 1 && $orden_documento_siguente <= 9){												
		
			$nuevo_nombre_archivoX = "0".$orden_documento_siguente.$nuevo_nombre_archivo_2;
		}
		else{
		
			$nuevo_nombre_archivoX = $orden_documento_siguente.$nuevo_nombre_archivo_2;
		}
													
		return trim($nuevo_nombre_archivoX);
		
	
	}
	
	public function get_nuevo_nombre_2ANTERIOR($nombre_archivoX,$orden_documento_siguente){
	
	
		$caracterY  = 0;
		$caracterM  = 0;
		$caracterD  = 0;
		$caracterH  = 0;
		$caracterMI = 0;
		$caracterS  = 0;
		
	
		$bandera_fecha    = 0;
		
		$nombre_archivo   = explode(".",$nombre_archivoX);
		//NOMBRE ARCHIVO SI EXTENSION
		//EJ: 200911121732-01-201900151OrdenaAOECMNotificarADemandado-Decreto720210036900
		$nombre_archivo_2 = $nombre_archivo[0];
		//SE DIVIDE EL ARCHIVO POR CARACTER "-"
		//EJ: 200911121732	01	201900151OrdenaAOECMNotificarADemandado	Decreto720210036900
		$nombre_archivo_3 = explode("-",$nombre_archivo_2);
		
		$nuevo_nombre_archivo = "";
		
		//QUITAMOS DEL NOMBRE DEL ARCHIVO EL IDENTIFICADOR ymdhis-XYZ ---> 210422023359-07CONSTANCIA120160040500.pdf
		for($x = 0; $x < count($nombre_archivo_3); $x++) {
		
			//echo $nombre_archivo_3[$x]."<br>"."<br>";
			
			$idcaracter = $nombre_archivo_3[$x];
			
			if( strlen($idcaracter) == 12 ){
		
				for($y = 0; $y < strlen($idcaracter); $y = $y + 2) {
					
					$caracterX = $idcaracter[$y].$idcaracter[$y + 1];
					
					//YEAR
					if($y == 0){
					
					
						if($caracterX >= 20){
							
							$caracterY  = 1;
						}
					
						//echo $idcaracter[$y].$idcaracter[$y + 1]."<br>"."<br>";
					}
					//MES
					if($y == 2){
					
						if($caracterX >= 0 && $caracterX <= 12){
							
							$caracterM  = 1;	
						}
					
						//echo $idcaracter[$y].$idcaracter[$y + 1]."<br>"."<br>";
					}
					//DIA
					if($y == 4){
					
						if($caracterX >= 0 && $caracterX <= 31){
							
							$caracterD  = 1;	
						}
						
						//echo $idcaracter[$y].$idcaracter[$y + 1]."<br>"."<br>";
					}
					//HORA
					if($y == 6){
					
						if($caracterX >= 0 && $caracterX <= 12){
							
							$caracterH  = 1;	
						}
						
						//echo $idcaracter[$y].$idcaracter[$y + 1]."<br>"."<br>";
					}
					//MINUTOS
					if($y == 8){
					
						if($caracterX >= 0 && $caracterX <= 59){
							
							$caracterMI  = 1;	
						}
						
						//echo $idcaracter[$y].$idcaracter[$y + 1]."<br>"."<br>";
					}
					//SEGUNDOS
					if($y == 10){
					
						if($caracterX >= 0 && $caracterX <= 59){
							
							$caracterS  = 1;	
						}
						
						//echo $idcaracter[$y].$idcaracter[$y + 1]."<br>"."<br>";
					}
					
					
				}
				
				//ES IDENTIFICAR DEL FORMATO date('ymdhis')
				if($caracterY == 1 && $caracterM == 1 && $caracterD == 1 && $caracterH == 1 && $caracterMI == 1 && $caracterS == 1) {
					 
					 $bandera_fecha = 1;
				} 
				else{
				
					 $nuevo_nombre_archivo .= $idcaracter;
				}
	
			
			}//FIN if( strlen($nombre_archivo_3[$x]) == 12 ){
			else{
			
				$nuevo_nombre_archivo .= $idcaracter;
			}
			
			
			$caracterY  = 0;
			$caracterM  = 0;
			$caracterD  = 0;
			$caracterH  = 0;
			$caracterMI = 0;
			$caracterS  = 0;
			
		}//FOR PRINCIPAL for($x = 0; $x < count($nombre_archivo_3); $x++) {
		
		
		//CARGAMOS VECTOR $letras
		$letras                 = array();
		$nuevo_nombre_archivo_2 = "";
		$bandera_numero         = 0;
		
		for($x = 0; $x < strlen($nuevo_nombre_archivo); $x++){
		
			$letras[$x] = $nuevo_nombre_archivo[$x];
		}
		
		//IMPRIME VECTOR
		//var_dump($letras);
		
		$long_letras = count($letras);
		//RECORREMOS VECTOR $letras Y BUSCAMOS POSICIONES NUMERO
		//HASTA QUE SE ENCUENTRE UN CARACTER LETRA DIFERENTE A NUMERO
		//Y ELIMINAMOS DEL VECTOR $letras LOS NUMEROS ENCONTRADOS ANTES DE 
		//ENCONTRAR UNA LETRA
		for($x = 0; $x < $long_letras; $x++) {
		
			$caracter = ord($letras[$x]);
			
			//ASCCI NUMEROS 0 - 9										 
			if($caracter >= 48 && $caracter <= 57){
															
				$bandera_numero = 0;
				//ELIMINAMOS POSICION
				unset($letras[$x]);
			}
			else{
	
				//PARAMOS EL FOR
				//$x = count($letras);
				$x = $long_letras;
			
			}
			
		
		}
		
		//El elemento ï¿½210409112903ï¿½ se elimina, pero la posiciï¿½n que tenï¿½a se mantiene. Si imprimimos el array el resultado serï¿½
		//Posiciï¿½n 0 = null
		//Posiciï¿½n 1 = xxx
		//Posiciï¿½n 2 = xxx
		//Por eso aplicamos array_values
		//Para reordenar las posiciones, el resultado serï¿½
		//Posiciï¿½n 0 = xxx
		//Posiciï¿½n 1 = xxx
		$letras = array_values($letras);
		
		//RECORREMOS EL VECTOR $letras Y CONSTRUIMOS EL NOMBRE DEL ARCHIVO NUEVO
		//EN LA VARIABLE $nuevo_nombre_archivo_2
		for($x = 0; $x < count($letras); $x++) {
		
		
			$nuevo_nombre_archivo_2 .= $letras[$x];
		
		}
		
		
		if($orden_documento_siguente >= 1 && $orden_documento_siguente <= 9){												
		
			$nuevo_nombre_archivoX = "0".$orden_documento_siguente.$nuevo_nombre_archivo_2;
		}
		else{
		
			$nuevo_nombre_archivoX = $orden_documento_siguente.$nuevo_nombre_archivo_2;
		}
													
		return trim($nuevo_nombre_archivoX);
									
		
	}
	
	//NO SE LE CONCATENA orden_documento_siguente YA QUE ESTE YA LO TRAE EL ARCHIVO
	/*
	if($orden_documento_siguente >= 1 && $orden_documento_siguente <= 9){												
		
		$nuevo_nombre_archivo = "0".$orden_documento_siguente.$nuevo_nombre_archivo;
	}
	else{
		$nuevo_nombre_archivo = $orden_documento_siguente.$nuevo_nombre_archivo;
	}
	*/
	public function get_nuevo_nombreVISUAL($nombre_archivoX,$orden_documento_siguente){
	
	
		$caracterY  = 0;
		$caracterM  = 0;
		$caracterD  = 0;
		$caracterH  = 0;
		$caracterMI = 0;
		$caracterS  = 0;
		
	
		$bandera_fecha    = 0;
		
		$nombre_archivo   = explode(".",$nombre_archivoX);
		//NOMBRE ARCHIVO SI EXTENSION
		//EJ: 200911121732-01-201900151OrdenaAOECMNotificarADemandado-Decreto720210036900
		$nombre_archivo_2 = $nombre_archivo[0];
		//SE DIVIDE EL ARCHIVO POR CARACTER "-"
		//EJ: 200911121732	01	201900151OrdenaAOECMNotificarADemandado	Decreto720210036900
		$nombre_archivo_3 = explode("-",$nombre_archivo_2);
		
		$nuevo_nombre_archivo = "";
		
		for($x = 0; $x < count($nombre_archivo_3); $x++) {
		
			//echo $nombre_archivo_3[$x]."<br>"."<br>";
			
			$idcaracter = $nombre_archivo_3[$x];
			
			if( strlen($idcaracter) == 12 ){
		
				for($y = 0; $y < strlen($idcaracter); $y = $y + 2) {
					
					$caracterX = $idcaracter[$y].$idcaracter[$y + 1];
					
					//YEAR
					if($y == 0){
					
					
						if($caracterX >= 20){
							
							$caracterY  = 1;
						}
					
						//echo $idcaracter[$y].$idcaracter[$y + 1]."<br>"."<br>";
					}
					//MES
					if($y == 2){
					
						if($caracterX >= 1 && $caracterX <= 12){
							
							$caracterM  = 1;	
						}
					
						//echo $idcaracter[$y].$idcaracter[$y + 1]."<br>"."<br>";
					}
					//DIA
					if($y == 4){
					
						if($caracterX >= 1 && $caracterX <= 31){
							
							$caracterD  = 1;	
						}
						
						//echo $idcaracter[$y].$idcaracter[$y + 1]."<br>"."<br>";
					}
					//HORA
					if($y == 6){
					
						if($caracterX >= 1 && $caracterX <= 24){
							
							$caracterH  = 1;	
						}
						
						//echo $idcaracter[$y].$idcaracter[$y + 1]."<br>"."<br>";
					}
					//MINUTOS
					if($y == 8){
					
						if($caracterX >= 0 && $caracterX <= 59){
							
							$caracterMI  = 1;	
						}
						
						//echo $idcaracter[$y].$idcaracter[$y + 1]."<br>"."<br>";
					}
					//SEGUNDOS
					if($y == 10){
					
						if($caracterX >= 0 && $caracterX <= 59){
							
							$caracterS  = 1;	
						}
						
						//echo $idcaracter[$y].$idcaracter[$y + 1]."<br>"."<br>";
					}
					
					
				}
				
				//ES IDENTIFICAR DEL FORMATO date('ymdhis')
				if($caracterY == 1 && $caracterM == 1 && $caracterD == 1 && $caracterH == 1 && $caracterMI == 1 && $caracterS == 1) {
					 
					 $bandera_fecha = 1;
				} 
				else{
				
					 $nuevo_nombre_archivo .= $idcaracter;
				}
	
			
			}//FIN if( strlen($nombre_archivo_3[$x]) == 12 ){
			else{
			
				$nuevo_nombre_archivo .= $idcaracter;
			}
			
			$caracterY  = 0;
			$caracterM  = 0;
			$caracterD  = 0;
			$caracterH  = 0;
			$caracterMI = 0;
			$caracterS  = 0;
			
			
		}//FOR PRINCIPAL for($x = 0; $x < count($nombre_archivo_3); $x++) {
		
		
							
		return trim($nuevo_nombre_archivo);
									
		
	}
	
	public function get_nuevo_nombreANTERIOR($nombre_archivoX,$orden_documento_siguente){
	
		
		$nombre_archivo   = explode(".",$nombre_archivoX);
		$nombre_archivo_2 = $nombre_archivo[0];
		
		$nuevo_nombre_archivo = "";
													
		for($x = 0; $x < strlen($nombre_archivo_2); $x++) {
			
			//$caracter >= 65 && $caracter <= 90  MAYUSCULAS
			//$caracter >= 97 && $caracter <= 122 MINUSCULAS
													
			$caracter = ord($nombre_archivo_2[$x]);
														 
			if( 
			
				($caracter >= 65 && $caracter <= 90) || 
				($caracter >= 97 && $caracter <= 122)  
			
					
			) {
																
				$idcaracter            = chr($caracter);
				$nuevo_nombre_archivo .= $idcaracter;
			
														
			}
														
														
		}
		
		if($orden_documento_siguente >= 1 && $orden_documento_siguente <= 9){												
		
			$nuevo_nombre_archivo = "0".$orden_documento_siguente.$nuevo_nombre_archivo;
		}
		else{
			$nuevo_nombre_archivo = $orden_documento_siguente.$nuevo_nombre_archivo;
		}
													
		return trim($nuevo_nombre_archivo);
									
		
	}
	
	public function get_caracteres_archivo($narchivoX){
	
		$narchivoX_1 = explode(".",$narchivoX);
		$narchivoX_2 = $narchivoX_1[0];
	
		$ncaracteres = strlen($narchivoX_2);
									
		return $ncaracteres;							
		
	}
	
	public function validar_nombre_archivo($narchivoX){
	
		$narchivoX_1    = explode(".",$narchivoX);
		$narchivoX_2    = $narchivoX_1[0];
		$nombre_archivo = $narchivoX_2;
		$fila_error     = 0;
	
		for($x = 0; $x < strlen($nombre_archivo); $x++) {
											
			$caracter = ord($nombre_archivo[$x]);
												 
			if( 
																					
																					 
				($caracter >= 32  && $caracter <= 47)  ||
				($caracter >= 58  && $caracter <= 64)  || 
				($caracter >= 91  && $caracter <= 96)  || 
				($caracter >= 123 && $caracter <= 254)  
																					 
			) {
														
				
				$fila_error = $x;
				$x          = strlen($nombre_archivo);									
				$idcaracter = chr($caracter);
											
												
			}
												
												
												
		}
									
		return $fila_error."//////".$idcaracter."//////".$nombre_archivo;							
		
	}
	
	//7 DE MAYO 2021
	
	public function get_renombrar_cuaderno($idradiX,$cuadernoX,$cuaderno,$nom){
	
	
		set_time_limit (240000000);
		
		$modelo = new archivoModel();
	
	
		$bandera_renombrar = 0;
		$orden_documento   = 1;
		$i                 = 0;
		$archivo_existe_1  = 0;
		$bandera_iguales   = 0;
		
		
		try {  
									
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
			//EMPIEZA LA TRANSACCION
			$this->db->beginTransaction();
			
			//RENOMBRAR CUADERNO ORIGEN y CUADERNO DESTIDO
			
			//WHILE CUADERNOS
			while($i < 2){
			
				//CUADERNO ORIGEN
				if($i == 0){
				
					$listarRENOM = $this->db->prepare("SELECT * FROM expe_digital 
													   WHERE idradicado = '$idradiX' AND cuaderno = '$cuadernoX' AND estado = 1
													   ORDER BY fecha,id");
													   
				}
				//CUADERNO DESTINO
				if($i == 1){
				
					$listarRENOM = $this->db->prepare("SELECT * FROM expe_digital 
													   WHERE idradicado = '$idradiX' AND cuaderno = '$cuaderno' AND estado = 1
													   ORDER BY fecha,id");
													   
				}
				
														
				$listarRENOM->execute();
				
				//WHILE QUE RECORRE LOS DOCUMENTOS DEL CUEDERNO PARA RENOMBRALOS
				while($filaRENOM = $listarRENOM->fetch()){
				
					$idfolioRENOM        = $filaRENOM[id];
					$ruta_ANTERIOR_RENOM = $filaRENOM[ruta];
					
					//NOMBRE ARCHIVO
					$ruta_memo_1 = explode("/",$ruta_ANTERIOR_RENOM);
					$ruta_memo_2 = trim($ruta_memo_1[3]);
															
					//NUEVO NOMBRE ARCHIVO
					$nuevo_nombre_archivo = $modelo->get_nuevo_nombre($ruta_memo_2,$orden_documento);
					
					$nombre_archivo_tipo   = explode(".",$ruta_memo_2);
															
					$nueva_ruta_expediente = "EXPEDIENTE_DIGITAL_2/".$nom."/".date('ymdhis') . '-' .$nuevo_nombre_archivo.".".$nombre_archivo_tipo[1];
					
					//usleep ï¿½ Retrasar la ejecuciï¿½n en microsegundos
					//Esperar 1 segundos
					//SE APLICA ESTA ACCION PARA QUE EL ID CAMBIE EN UN SEGUNDO date('ymdhis') 
					//Y NO SEA EL MISMO
					usleep(1000000);

															
					$antigua_ruta_expediente = $ruta_ANTERIOR_RENOM;
					
					
					if (file_exists($antigua_ruta_expediente)) {
						
						$archivo_existe_1 = 1;
					}
					else{
						
						$bandera_renombrar = 1;
						$archivo_existe_1  = 0;
						$msg .= "1.SE EDITA EL ARCHIVO CORRECTAMENTE, PERO EL ARCHIVO CON RUTA ANTERIOR NO EXISTE:".$antigua_ruta_expediente;
						
								
					}
					
					
					
					if($archivo_existe_1 == 1){
					
						//SI ES IGUAL NO SE RENOMBRA DE NUEVO EL ARCHIVO
						if( trim('C:/wamp/www/ejecucion/'.$antigua_ruta_expediente) == trim('C:/wamp/www/ejecucion/'.$nueva_ruta_expediente) ){
						
							$bandera_iguales = 1;
						
						}
						else{
															
							if ( rename('C:/wamp/www/ejecucion/'.$antigua_ruta_expediente, 'C:/wamp/www/ejecucion/'.$nueva_ruta_expediente) ) {										
							//if ( rename($antigua_ruta_expediente,$nueva_ruta_expediente) ) {
							
								$bandera_renombrar = 0;
																		
								$ruta_NUEVA_RENOM  = $nueva_ruta_expediente;
																	
														
							} 
							else{
																	
								$bandera_renombrar = 1;
								$msg .= "2.SE EDITA EL ARCHIVO CORRECTAMENTE, PERO SE PRESENTA UN ERROR AL RENOMBRAR LOS ARCHIVOS DEL EXPEDIENTE".", CUADERNO: ".$cuadernoX.", REGISTRO: ".$orden_documento.
										", RUTA ANTERIOR: ".$antigua_ruta_expediente.", RUTA NUEVA: ".$nueva_ruta_expediente;
																	
																		
							}
							
						}
						
						
					}	
					
					//NO SE PRESENTA NINGUN ERROR
					if($bandera_renombrar == 0){
					
						//NO SE ACTUALIZA RUTA, NI ORDEN, YA QUE TANTO
						//RUTA ANTIGUA COMO NUEVA SON IGUALES
						if($bandera_iguales == 0){
						
							$this->db->exec("
												UPDATE expe_digital SET 
												
													ruta            = '$ruta_NUEVA_RENOM',
													orden_documento = '$orden_documento'
													
												WHERE id = '$idfolioRENOM' 
																					
																					
											");
											
							
							
							$orden_documento  = $orden_documento + 1;		
							
						}	
						
					}
					else{
					
						//SE FRENA WHILE CUADERNOS Y WHILE QUE RECORRE LOS DOCUMENTOS DEL CUADERNO PARA RENOMBRALOS
						break 2;
						
					
					}
					
					$bandera_renombrar = 0;				
					$archivo_existe_1  = 0;
					$bandera_iguales   = 0;

				
				}//FIN WHILE QUE RECORRE LOS DOCUMENTOS DEL CUADERNO PARA RENOMBRALOS
				
				/*if($bandera_renombrar == 0){
					//SE TERMINA LA TRANSACCION  
					$this->db->commit();
				}*/
				
				
				$i = $i + 1;
				
				$orden_documento   = 1;
				
				
				
			}//FIN WHILE CUADERNOS		
			
			
			//1 NOTA:
			//SE CIERRA if($bandera_renombrar == 0) 
			// DONDE SE TERMINA LA TRANSACCION ---> $this->db->commit();
			//YA QUE CUANDO TODO ES CORRRECTO EL ARCHIVO SE RENOMBRA
			//Y TAMBIEN SE ACTUALIZA EN LA BASE DE DATOS EL CAMPO RUTA
			//PERO SI EL PROCESO FALLA EN EL CAMINO AL RENOMBRAR UN ARCHIVO 
			//EL PROCESO PARA LOS WHILE Y SOLO EN if($bandera_renombrar == 0){
			//SE APLICABA $this->db->commit(); Y COMO SE PRESENTO UN ERROR
			//ENTONCES NO SE APLICA EN LA BASE DE DATOS LOS CAMBIOS
			//PERO LOS ARCHIVOS QUE NO PRESENTARON PROBLEMA SI SE RENOMBRARON
			//QUEDANDO ICONSISTENCIA CON SU NOMBRE EN EL DIRECTORIO ESPECIFICO
			//Y COLUMNA RUTA TABALA expe_digital
			
			//if($bandera_renombrar == 0){
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
			//}
				
				
		} 
		catch (Exception $e) {
		
										
			$msg .= " 3.ERROR AL RENOMBRAR LOS ARCHIVOS DEL EXPEDIENTE: ".$e->getMessage();			
							
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			//SE CIERRA POR LO MISMO DE LA 1 NOTA: ES DECIR SI O SI
			//DEBE GRABAR EN LA BASE DE DATOS
			//$this->db->rollBack();
			
			$this->db->commit();
								
			$bandera_renombrar = 1;
								
								
		}
		
		//return $bandera_renombrar;
			
		return $bandera_renombrar."******".$msg;
	
	}
	
	
	public function ordenar_expediente(){
	
	
		set_time_limit (240000000);
		
		
		$modelo = new archivoModel();
		
		
		//SE OBTIENEN LOS DATOS
		$idusuario = trim($_SESSION['idUsuario']);
		
		
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
		
	
		$datosexpOEX = explode("******",trim($_GET['datosexpOEX']));
		
		$idradiX     = trim($datosexpOEX[0]);
		$radiX       = trim($datosexpOEX[1]);
		
	
		$bandera_renombrar = 0;
		$orden_documento   = 1;
		$i                 = 0;
		$archivo_existe_1  = 0;
		$bandera_iguales   = 0;
		
		
		try {  
									
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
			//EMPIEZA LA TRANSACCION
			$this->db->beginTransaction();
			
			
			$listarCUADERNOS = $this->db->prepare("SELECT cuaderno FROM expe_digital
                                                   WHERE idradicado = '$idradiX'
												   GROUP BY cuaderno");
													
				
				
			$listarCUADERNOS->execute();
			
			//WHILE QUE RECORRE LOS CUADERNOS QUE FORMAN EL EXPEDIENTE
		    while($filaCUADERNOS = $listarCUADERNOS->fetch()){
			
			
				$cuadernoX   = $filaCUADERNOS[cuaderno];
				
				
				$listarRENOM = $this->db->prepare("SELECT * FROM expe_digital 
												   WHERE idradicado = '$idradiX' AND cuaderno = '$cuadernoX' AND estado = 1
												   ORDER BY fecha,id");
														
																				
				$listarRENOM->execute();
					
				//WHILE QUE RECORRE LOS DOCUMENTOS DEL CUADERNO PARA RENOMBRALOS
				while($filaRENOM = $listarRENOM->fetch()){
					
					$idfolioRENOM        = $filaRENOM[id];
					$ruta_ANTERIOR_RENOM = $filaRENOM[ruta];
						
					//NOMBRE ARCHIVO
					$ruta_memo_1 = explode("/",$ruta_ANTERIOR_RENOM);
					$ruta_memo_2 = trim($ruta_memo_1[3]);
					
					//JUZGADO ORIGEN
					//EJEMPLO:
					//EXPEDIENTE_DIGITAL_2/J2/220190003300/210504023724-01Cuadernodemedidas.pdf
					//SOLO ESTA PARTE ---> J2/220190003300
					$nom         = trim($ruta_memo_1[1]."/".$ruta_memo_1[2]);
																
					//NUEVO NOMBRE ARCHIVO
					$nuevo_nombre_archivo    = $modelo->get_nuevo_nombre($ruta_memo_2,$orden_documento);
						
					$nombre_archivo_tipo     = explode(".",$ruta_memo_2);
																
					$nueva_ruta_expediente   = "EXPEDIENTE_DIGITAL_2/".$nom."/".date('ymdhis') . '-' .$nuevo_nombre_archivo.".".$nombre_archivo_tipo[1];
					
					//usleep ï¿½ Retrasar la ejecuciï¿½n en microsegundos
					//Esperar 1 segundos
					//SE APLICA ESTA ACCION PARA QUE EL ID CAMBIE EN UN SEGUNDO date('ymdhis') 
					//Y NO SEA EL MISMO
					usleep(1000000);
																
					$antigua_ruta_expediente = $ruta_ANTERIOR_RENOM;
						
						
					if (file_exists($antigua_ruta_expediente)) {
							
						$archivo_existe_1 = 1;
					}
					else{
							
						$bandera_renombrar = 1;
						$archivo_existe_1  = 0;
						$msg .= "ARCHIVO RUTA ANTERIOR NO EXISTE: ".$antigua_ruta_expediente;
						
					}
						
						
						
					if($archivo_existe_1 == 1){
					
						//SI ES IGUAL NO SE RENOMBRA DE NUEVO EL ARCHIVO
						if( trim('C:/wamp/www/ejecucion/'.$antigua_ruta_expediente) == trim('C:/wamp/www/ejecucion/'.$nueva_ruta_expediente) ){
						
							$bandera_iguales = 1;
						
						}
						else{
															
							if ( rename('C:/wamp/www/ejecucion/'.$antigua_ruta_expediente, 'C:/wamp/www/ejecucion/'.$nueva_ruta_expediente) ) {										
							//if ( rename($antigua_ruta_expediente,$nueva_ruta_expediente) ) {
							
								$bandera_renombrar = 0;
																		
								$ruta_NUEVA_RENOM  = $nueva_ruta_expediente;
																	
														
							} 
							else{
																	
								$bandera_renombrar = 1;
								$msg .= "1.ERROR AL RENOMBRAR LOS ARCHIVOS DEL EXPEDIENTE".", CUADERNO: ".$cuadernoX.", REGISTRO: ".$orden_documento.
										", RUTA ANTERIOR: ".$antigua_ruta_expediente.", RUTA NUEVA: ".$nueva_ruta_expediente;
																	
																		
							}
							
						}
						
						
					}	
						
					if($bandera_renombrar == 0){
						
						//NO SE ACTUALIZA RUTA, NI ORDEN, YA QUE TANTO
						//RUTA ANTIGUA COMO NUEVA SON IGUALES
						if($bandera_iguales == 0){
						
							$this->db->exec("
												UPDATE expe_digital SET 
												
													ruta            = '$ruta_NUEVA_RENOM',
													orden_documento = '$orden_documento'
													
												WHERE id = '$idfolioRENOM' 
																					
																					
											");
											
							
							
							$orden_documento  = $orden_documento + 1;		
							
							
							
						}
									
							
					}
					else{
						
						//SE FRENA WHILE CUADERNOS Y WHILE QUE RECORRE LOS DOCUMENTOS DEL CUADERNO PARA RENOMBRALOS
						break 2;
							
						
					}
										
					$bandera_renombrar = 0;	
					$archivo_existe_1  = 0;
					$bandera_iguales   = 0;
				
					
				}//FIN WHILE QUE RECORRE LOS DOCUMENTOS DEL CUADERNO PARA RENOMBRALOS
					
				
			
				$orden_documento  = 1;
				
					
					
			
			}//FIN WHILE QUE RECORRE LOS CUADERNOS QUE FORMAN EL EXPEDIENTE
			
			
			//NOTA:
			//SE DEJA TANDO EN if($bandera_renombrar == 0) Y if($bandera_renombrar == 1) 
			//SE TERMINA LA TRANSACCION ---> $this->db->commit();
			//YA QUE CUANDO TODO ES CORRRECTO EL ARCHIVO SE RENOMBRA
			//Y TAMBIEN SE ACTUALIZA EN LA BASE DE DATOS EL CAMPO RUTA
			//PERO SI EL PROCESO FALLA EN EL CAMINO AL RENOMBRAR UN ARCHIVO 
			//EL PROCESO PARA LOS WHILE Y SOLO EN if($bandera_renombrar == 0){
			//SE APLICABA $this->db->commit(); Y COMO SE PRESENTO UN ERROR
			//ENTONCES NO SE APLICA EN LA BASE DE DATOS LOS CAMBIOS
			//PERO LOS ARCHIVOS QUE NO PRESENTARON PROBLEMA SI SE RENOMBRARON
			//QUEDANDO ICONSISTENCIA CON SU NOMBRE EN EL DIRECTORIO ESPECIFICO
			//Y COLUMNA RUTA TABALA expe_digital
			if($bandera_renombrar == 0){
			
				
				$actuacion = 'SE ORDENAR EXPEDIENTE, SIN INCONSISTENCIAS EN EXISTENCIA Y RENOMBRAMIENTO DE ARCHIVOS';
			    $tablas    = 'expe_digital';
				$tipo      = 'OEXPE';
				$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,tipo)
								 VALUES('$idradiX','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$tipo')");
			
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				//header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX);
				
				
				$msg .= "1.PROCESO ORDENAR EXPEDIENTE, SE REALIZA CORRECTAMENTE, ID RADICADO:  ".$idradiX." RADICADO: ".$radiX;
				
				//CUANDO LOS PROCESOS SON CORRECTOS
				$opcionX = 0;
							
				echo '<script languaje="JavaScript"> 
									
				
						var msg = "'.$msg.'";	
									
									
						var idradiX = "'.$idradiX.'";
						var radiX   = "'.$radiX.'";
						var opcionX = "'.$opcionX.'";
									
									
						alert(msg);
									
						location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
									
									
				 	 </script>';
			}
			
			if($bandera_renombrar == 1){
			
				$actuacion = '2.SE ORDENAR PARTE DEL EXPEDIENTE, YA QUE SE PRESENTA LA SIGUIENTE INCONSISTENCIA: '.$msg;
			    $tablas    = 'expe_digital';
				$tipo      = 'OPEXPE';
				$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,tipo)
								 VALUES('$idradiX','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$tipo')");
			
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
			
				//CUANDO LOS PROCESOS SON CORRECTOS
				$opcionX = 0;
							
				echo '<script languaje="JavaScript"> 
									
				
						var msg = "'.$msg.'";	
									
									
						var idradiX = "'.$idradiX.'";
						var radiX   = "'.$radiX.'";
						var opcionX = "'.$opcionX.'";
									
									
						alert("SE ORDENAR PARTE DEL EXPEDIENTE, YA QUE SE PRESENTA LA SIGUIENTE INCONSISTENCIA: "+msg);
									
						location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
									
									
				 	 </script>';
			
			}
				
				
		} 
		catch (Exception $e) {
		
										
			$msg .= " 3.ERROR AL RENOMBRAR LOS ARCHIVOS DEL EXPEDIENTE: ".$e->getMessage();			
							
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			//SE CIERRA POR LO MISMO DE LA 1 NOTA: ES DECIR SI O SI
			//DEBE GRABAR EN LA BASE DE DATOS
			//$this->db->rollBack();
			
			$this->db->commit();
								
			$bandera_renombrar = 1;
			
			
			//PARA QUE EM LA VISTA EXPEDIENTE_DIGITALNO ENTRE
			//CUANDO LOS PROCESOS SON CORRECTOS
			$opcionX = 0;
							
			echo '<script languaje="JavaScript"> 
									
				
						var msg = "'.$msg.'";	
									
									
						var idradiX = "'.$idradiX.'";
						var radiX   = "'.$radiX.'";
						var opcionX = "'.$opcionX.'";
									
									
						alert(msg);
									
						location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
									
									
				  </script>';
								
								
		}
		
		
			
	
	}
		
	
	public function get_renombrar_eliminar($idradiX,$cuadernoX){
	
	
		set_time_limit (240000000);
		
		$modelo = new archivoModel();
	
	
		$bandera_renombrar = 0;
		$orden_documento   = 1;
		$archivo_existe_1  = 0;
		$bandera_iguales   = 0;
		
		
		try {  
									
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
			//EMPIEZA LA TRANSACCION
			$this->db->beginTransaction();
			
			//RENOMBRAR CUADERNO DEL FOLIO ELIMINADO
			
			$listarRENOM = $this->db->prepare("SELECT * FROM expe_digital 
											   WHERE idradicado = '$idradiX' AND cuaderno = '$cuadernoX' AND estado = 1
											   ORDER BY fecha,id");
													   
				
														
			$listarRENOM->execute();
				
			//WHILE QUE RECORRE LOS DOCUMENTOS DEL CUEDERNO PARA RENOMBRALOS
			while($filaRENOM = $listarRENOM->fetch()){
				
					$idfolioRENOM        = $filaRENOM[id];
					$ruta_ANTERIOR_RENOM = $filaRENOM[ruta];
					
					//NOMBRE ARCHIVO
					$ruta_memo_1 = explode("/",$ruta_ANTERIOR_RENOM);
					$ruta_memo_2 = trim($ruta_memo_1[3]);
					
					//JUZGADO ORIGEN
					//EJEMPLO:
					//EXPEDIENTE_DIGITAL_2/J2/220190003300/210504023724-01Cuadernodemedidas.pdf
					//SOLO ESTA PARTE ---> J2/220190003300
					$nom         = trim($ruta_memo_1[1]."/".$ruta_memo_1[2]);
															
					//NUEVO NOMBRE ARCHIVO
					$nuevo_nombre_archivo = $modelo->get_nuevo_nombre($ruta_memo_2,$orden_documento);
					
					$nombre_archivo_tipo   = explode(".",$ruta_memo_2);
															
					$nueva_ruta_expediente = "EXPEDIENTE_DIGITAL_2/".$nom."/".date('ymdhis') . '-' .$nuevo_nombre_archivo.".".$nombre_archivo_tipo[1];
					
					//usleep ï¿½ Retrasar la ejecuciï¿½n en microsegundos
					//Esperar 1 segundos
					//SE APLICA ESTA ACCION PARA QUE EL ID CAMBIE EN UN SEGUNDO date('ymdhis') 
					//Y NO SEA EL MISMO
					usleep(1000000);
															
					$antigua_ruta_expediente = $ruta_ANTERIOR_RENOM;
					
					
					if (file_exists($antigua_ruta_expediente)) {
						
						$archivo_existe_1 = 1;
					}
					else{
						
						$bandera_renombrar = 1;
						$archivo_existe_1  = 0;
						$msg .= "1.SE ELIMINA EL ARCHIVO CORRECTAMENTE, PERO EL ARCHIVO CON RUTA ANTERIOR NO EXISTE:".$antigua_ruta_expediente;
						
								
					}
					
					
					
					if($archivo_existe_1 == 1){
					
						//SI ES IGUAL NO SE RENOMBRA DE NUEVO EL ARCHIVO
						if( trim('C:/wamp/www/ejecucion/'.$antigua_ruta_expediente) == trim('C:/wamp/www/ejecucion/'.$nueva_ruta_expediente) ){
						
							$bandera_iguales = 1;
						
						}
						else{
															
							if ( rename('C:/wamp/www/ejecucion/'.$antigua_ruta_expediente, 'C:/wamp/www/ejecucion/'.$nueva_ruta_expediente) ) {										
							//if ( rename($antigua_ruta_expediente,$nueva_ruta_expediente) ) {
							
								$bandera_renombrar = 0;
																		
								$ruta_NUEVA_RENOM  = $nueva_ruta_expediente;
																	
														
							} 
							else{
																	
								$bandera_renombrar = 1;
								$msg .= "2.SE ELIMINA EL ARCHIVO CORRECTAMENTE, PERO SE PRESENTA UN ERROR AL RENOMBRAR LOS ARCHIVOS DEL EXPEDIENTE".", CUADERNO: ".$cuadernoX.", REGISTRO: ".$orden_documento.
										", RUTA ANTERIOR: ".$antigua_ruta_expediente.", RUTA NUEVA: ".$nueva_ruta_expediente;
																	
																		
							}
							
						}
						
						
					}	
					
					//NO SE PRESENTA NINGUN ERROR
					if($bandera_renombrar == 0){
					
						//NO SE ACTUALIZA RUTA, NI ORDEN, YA QUE TANTO
						//RUTA ANTIGUA COMO NUEVA SON IGUALES
						if($bandera_iguales == 0){
						
							$this->db->exec("
												UPDATE expe_digital SET 
												
													ruta            = '$ruta_NUEVA_RENOM',
													orden_documento = '$orden_documento'
													
												WHERE id = '$idfolioRENOM' 
																					
																					
											");
											
							
							
							$orden_documento  = $orden_documento + 1;		
							
						}	
						
					}
					else{
					
						//SE FRENA WHILE QUE RECORRE LOS DOCUMENTOS DEL CUADERNO PARA RENOMBRALOS
						break 1;
						
					
					}
					
					$bandera_renombrar = 0;				
					$archivo_existe_1  = 0;
					$bandera_iguales   = 0;

				
			}//FIN WHILE QUE RECORRE LOS DOCUMENTOS DEL CUADERNO PARA RENOMBRALOS
				
				
			
			//NOTA:
			//SE CIERRA if($bandera_renombrar == 0) 
			// DONDE SE TERMINA LA TRANSACCION ---> $this->db->commit();
			//YA QUE CUANDO TODO ES CORRRECTO EL ARCHIVO SE RENOMBRA
			//Y TAMBIEN SE ACTUALIZA EN LA BASE DE DATOS EL CAMPO RUTA
			//PERO SI EL PROCESO FALLA EN EL CAMINO AL RENOMBRAR UN ARCHIVO 
			//EL PROCESO PARA LOS WHILE Y SOLO EN if($bandera_renombrar == 0){
			//SE APLICABA $this->db->commit(); Y COMO SE PRESENTO UN ERROR
			//ENTONCES NO SE APLICA EN LA BASE DE DATOS LOS CAMBIOS
			//PERO LOS ARCHIVOS QUE NO PRESENTARON PROBLEMA SI SE RENOMBRARON
			//QUEDANDO ICONSISTENCIA CON SU NOMBRE EN EL DIRECTORIO ESPECIFICO
			//Y COLUMNA RUTA TABALA expe_digital
			
			//if($bandera_renombrar == 0){
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
			//}
				
				
		} 
		catch (Exception $e) {
		
										
			$msg .= " 3.ERROR AL RENOMBRAR LOS ARCHIVOS DEL EXPEDIENTE: ".$e->getMessage();			
							
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			//SE CIERRA POR LO MISMO DE LA 1 NOTA: ES DECIR SI O SI
			//DEBE GRABAR EN LA BASE DE DATOS
			//$this->db->rollBack();
			
			$this->db->commit();
								
			$bandera_renombrar = 1;
								
								
		}
		
		//return $bandera_renombrar;
			
		return $bandera_renombrar."******".$msg;
	
	}
	
	//EMPIEZA DESARROLLO 4 DE JUNIO 2021 Y ENTRA A FUNCIONAR EL 10 DE JUNIO 2021
	
	public function renombrar_multiple_Masivo(){
	
	
		set_time_limit (240000000);
		
		
		$modelo = new archivoModel();
		
		
		//SE OBTIENEN LOS DATOS
		$idusuario = trim($_SESSION['idUsuario']);
		
		
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
		
	
		$idradiX       = trim($_POST['idradiX']);
		$radiX         = trim($_POST['radiX']);
		
	
		$bandera_renombrar = 0;
		$orden_documento   = 1;
		$i                 = 0;
		$archivo_existe_1  = 0;
		$bandera_iguales   = 0;
		
		$error_nombre      = 0;
		
		
		try {  
									
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
										
			//EMPIEZA LA TRANSACCION
			$this->db->beginTransaction();
		
		
			//---------------VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
									
									
									
			for($i = 0; $i < count($_POST['id']); $i++){
									
									
				//$nombre_archivo = $_FILES['archivo_carga']['name'][$i];
				
				$nombre_archivo = trim($_POST['d2ra'][$i]);//nuevo nombre archivo
											
				for($x = 0; $x < strlen($nombre_archivo); $x++) {
											
					$caracter = ord($nombre_archivo[$x]);
												 
					if( 
																					
																					 
							($caracter >= 32  && $caracter <= 44)   ||
							($caracter >= 47  && $caracter <= 47)   || 
							($caracter >= 58  && $caracter <= 64)   || 
							($caracter >= 91  && $caracter <= 94)   || 
							($caracter >= 96  && $caracter <= 96)   ||
							($caracter >= 123 && $caracter <= 254)  
																					 
					) {
														
							//echo "CARACTER NO VALIDO EN NOMBRE DE ARCHIVO:".$nombre_archivo[$x]."<br>"."<br>"." SOLO SE PERMITE EL CARACTER RAYA AL MEDIO (-) Y NOMBRES CONFORMADOS POR LETRAS, NUMEROS Y TODO PEGADO";
														
							$x = strlen($nombre_archivo);
														
							$error_nombre = 1;
														
							$i = count($_POST['id']);
														
							$idcaracter = chr($caracter);
														
							echo '<script languaje="JavaScript"> 
									
									var nombre_archivoX = "'.$nombre_archivo.'";
																	
									var idcaracter      = "'.$idcaracter.'";
																	
																	
									alert("CARACTER NO VALIDO EN NOMBRE DE ARCHIVO: "+nombre_archivoX+" CARACTER: "+idcaracter+" SOLO SE PERMITE EL CARACTER RAYA AL MEDIO (-), RAYA AL PISO (_) Y NOMBRES CONFORMADOS POR LETRAS O NUMEROS Y TODO PEGADO");
																	

																	
									var idradiX = "'.$idradiX.'";
									var radiX   = "'.$radiX.'";
																	
									location.href="index.php?controller=archivo&action=Renombrar_Archivos_Expediente&datosINDICE="+idradiX+"******"+radiX;
																						
																
								</script>';
														
												
					}
												
												
												
				}
									
									
									
			}
									
									
									
			//---------------FIN VALIDAR NOMBRE ARCHIVOS 24 DE AGOSTO 2020-------------------
			
			
			//REALIZA REGISTRO, NO EXISTE INCONSISTENCIAS EN NOMBRE DE ARCHIVO(S)
			if($error_nombre == 0){
			
			
				//FOR QUE RECORRE LOS DOCUMENTOS DEL CUADERNO PARA RENOMBRALOS
				//while($filaRENOM = $listarRENOM->fetch()){
				for($i = 0; $i < count($_POST['id']); $i++){
					
					$idfolioRENOM        = trim($_POST['id'][$i]);//id folio
					
					$dato_ra2            = trim($_POST['d2ra'][$i]);//nuevo nombre archivo
					//ESTE CAMPO SE COMPARA CON d2ra[] Y SI SON DIFERENTES, 
					//INDICA QUE ESE NOMBRE DE ESE ARCHIVO SE ESTA RENOMBRANDO
					//Y SE DEJA COMO CAMPO OCULTO
					$dato_ra2_b          = trim($_POST['d2ra_b'][$i]);
					
					$ruta_ANTERIOR_RENOM = trim($_POST['d3ra'][$i]);//ruta archivo ---> nombre actual archivo
					$cuadernoX			 = trim($_POST['d5ra'][$i]);//cuaderno
					$orden_documento     = trim($_POST['d4ra'][$i]);//orden documento
					
					
					//ESTE CAMPO SE COMPARA CON d2ra[] Y SI SON DIFERENTES, 
					//INDICA QUE ESE NOMBRE DE ESE ARCHIVO SE ESTA RENOMBRANDO
					//Y SE DEJA COMO CAMPO OCULTO
					if($dato_ra2 != $dato_ra2_b){
					
				
					//NOMBRE ARCHIVO
					$ruta_memo_1 = explode("/",$ruta_ANTERIOR_RENOM);
					$ruta_memo_2 = trim($ruta_memo_1[3]);
					
					$nombre_archivo_tipo = explode(".",$ruta_memo_2);
					
					$narchivo = $dato_ra2.".".$nombre_archivo_tipo[1];
					
					//JUZGADO ORIGEN
					//EJEMPLO:
					//EXPEDIENTE_DIGITAL_2/J2/220190003300/210504023724-01Cuadernodemedidas.pdf
					//SOLO ESTA PARTE ---> J2/220190003300
					$nom         = trim($ruta_memo_1[1]."/".$ruta_memo_1[2]);
																
					//NUEVO NOMBRE ARCHIVO
					$nuevo_nombre_archivo    = $modelo->get_nuevo_nombre($narchivo,$orden_documento);
						
					//$nombre_archivo_tipo     = explode(".",$ruta_memo_2);
																
					$nueva_ruta_expediente   = "EXPEDIENTE_DIGITAL_2/".$nom."/".date('ymdhis') . '-' .$nuevo_nombre_archivo.".".$nombre_archivo_tipo[1];
					
					//usleep ï¿½ Retrasar la ejecuciï¿½n en microsegundos
					//Esperar 1 segundos
					//SE APLICA ESTA ACCION PARA QUE EL ID CAMBIE EN UN SEGUNDO date('ymdhis') 
					//Y NO SEA EL MISMO
					usleep(1000000);
																
					$antigua_ruta_expediente = $ruta_ANTERIOR_RENOM;
						
						
					if (file_exists($antigua_ruta_expediente)) {
							
						$archivo_existe_1 = 1;
					}
					else{
							
						$bandera_renombrar = 1;
						$archivo_existe_1  = 0;
						$msg .= "ARCHIVO RUTA ANTERIOR NO EXISTE: ".$antigua_ruta_expediente;
						
					}
						
						
						
					if($archivo_existe_1 == 1){
					
						//SI ES IGUAL NO SE RENOMBRA DE NUEVO EL ARCHIVO
						if( trim('C:/wamp/www/ejecucion/'.$antigua_ruta_expediente) == trim('C:/wamp/www/ejecucion/'.$nueva_ruta_expediente) ){
						
							$bandera_iguales = 1;
						
						}
						else{
															
							if ( rename('C:/wamp/www/ejecucion/'.$antigua_ruta_expediente, 'C:/wamp/www/ejecucion/'.$nueva_ruta_expediente) ) {										
							//if ( rename($antigua_ruta_expediente,$nueva_ruta_expediente) ) {
							
								$bandera_renombrar = 0;
																		
								$ruta_NUEVA_RENOM  = $nueva_ruta_expediente;
																	
														
							} 
							else{
																	
								$bandera_renombrar = 1;
								$msg .= "1.ERROR AL RENOMBRAR LOS ARCHIVOS DEL EXPEDIENTE".", CUADERNO: ".$cuadernoX.", REGISTRO: ".$orden_documento.
										", RUTA ANTERIOR: ".$antigua_ruta_expediente.", RUTA NUEVA: ".$nueva_ruta_expediente;
																	
																		
							}
							
						}
						
						
					}	
						
					if($bandera_renombrar == 0){
						
						//NO SE ACTUALIZA RUTA, NI ORDEN, YA QUE TANTO
						//RUTA ANTIGUA COMO NUEVA SON IGUALES
						if($bandera_iguales == 0){
						
							$this->db->exec("
												UPDATE expe_digital SET 
												
													ruta            = '$ruta_NUEVA_RENOM',
													orden_documento = '$orden_documento'
													
												WHERE id = '$idfolioRENOM' 
																					
																					
											");
											
							
							
							//$orden_documento  = $orden_documento + 1;		
							
							
							
						}
									
							
					}
					else{
						
						//SE FRENA FOR QUE RECORRE LOS DOCUMENTOS DEL CUADERNO PARA RENOMBRALOS
						break 1;
							
						
					}
										
					$bandera_renombrar = 0;	
					$archivo_existe_1  = 0;
					$bandera_iguales   = 0;
					$error_nombre      = 0;
					
					
					}//FIN if($dato_ra2 != $dato_ra2_b){
				
					
				}//FIN FOR QUE RECORRE LOS DOCUMENTOS DEL CUADERNO PARA RENOMBRALOS
					
				
			}//FIN if($error_nombre == 0){
			else{
									
				$error_transaccion = 1;
			}
			
			//NOTA:
			//SE DEJA TANDO EN if($bandera_renombrar == 0) Y if($bandera_renombrar == 1) 
			//SE TERMINA LA TRANSACCION ---> $this->db->commit();
			//YA QUE CUANDO TODO ES CORRRECTO EL ARCHIVO SE RENOMBRA
			//Y TAMBIEN SE ACTUALIZA EN LA BASE DE DATOS EL CAMPO RUTA
			//PERO SI EL PROCESO FALLA EN EL CAMINO AL RENOMBRAR UN ARCHIVO 
			//EL PROCESO PARA EL FOR Y SOLO EN if($bandera_renombrar == 0){
			//SE APLICABA $this->db->commit(); Y COMO SE PRESENTO UN ERROR
			//ENTONCES NO SE APLICA EN LA BASE DE DATOS LOS CAMBIOS
			//PERO LOS ARCHIVOS QUE NO PRESENTARON PROBLEMA SI SE RENOMBRARON
			//QUEDANDO ICONSISTENCIA CON SU NOMBRE EN EL DIRECTORIO ESPECIFICO
			//Y COLUMNA RUTA TABALA expe_digital
			if($bandera_renombrar == 0 && $error_nombre == 0){
			
				
				$actuacion = 'SE RENOMBRAN LOS ARCHIVOS DEL EXPEDIENTE, SIN INCONSISTENCIAS EN EXISTENCIA Y RENOMBRAMIENTO DE ARCHIVOS';
			    $tablas    = 'expe_digital';
				$tipo      = 'RENOMEXPE';
				$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,tipo)
								 VALUES('$idradiX','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$tipo')");
			
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
				
				//header('Location: index.php?controller=archivo&action=Expediente_Digital&datosexp='.$idradiX.'******'.$radiX.'******'.$opcionX);
				
				
				$msg .= "1.PROCESO RENOMBRAN LOS ARCHIVOS DEL EXPEDIENTE, SE REALIZA CORRECTAMENTE, ID RADICADO:  ".$idradiX." RADICADO: ".$radiX;
				
				//CUANDO LOS PROCESOS SON CORRECTOS
				$opcionX = 0;
							
				echo '<script languaje="JavaScript"> 
									
				
						var msg = "'.$msg.'";	
									
									
						var idradiX = "'.$idradiX.'";
						var radiX   = "'.$radiX.'";
						var opcionX = "'.$opcionX.'";
									
									
						alert(msg);
									
						location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
									
									
				 	 </script>';
			}
			
			if($bandera_renombrar == 1 && $error_nombre == 0){
			
				$actuacion = '2.SE RENOMBRAN PARTE DE LOS ARCHIVOS DEL EXPEDIENTE, YA QUE SE PRESENTA LA SIGUIENTE INCONSISTENCIA: '.$msg;
			    $tablas    = 'expe_digital';
				$tipo      = 'RENOMEXPE';
				$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,tipo)
								 VALUES('$idradiX','$idusuario','$fechalog','$horalog','$actuacion','$tablas','$tipo')");
			
				//SE TERMINA LA TRANSACCION  
				$this->db->commit();
			
				//CUANDO LOS PROCESOS SON CORRECTOS
				$opcionX = 0;
							
				echo '<script languaje="JavaScript"> 
									
				
						var msg = "'.$msg.'";	
									
									
						var idradiX = "'.$idradiX.'";
						var radiX   = "'.$radiX.'";
						var opcionX = "'.$opcionX.'";
									
									
						alert("SE RENOMBRAN PARTE DE LOS ARCHIVOS DEL EXPEDIENTE, YA QUE SE PRESENTA LA SIGUIENTE INCONSISTENCIA: "+msg);
									
						location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
									
									
				 	 </script>';
			
			}
				
				
		} 
		catch (Exception $e) {
		
										
			$msg .= " 3.ERROR AL RENOMBRAR LOS ARCHIVOS DEL EXPEDIENTE: ".$e->getMessage();			
							
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			//SE CIERRA POR LO MISMO DE LA 1 NOTA: ES DECIR SI O SI
			//DEBE GRABAR EN LA BASE DE DATOS
			//$this->db->rollBack();
			
			$this->db->commit();
								
			$bandera_renombrar = 1;
			
			
			//PARA QUE EM LA VISTA EXPEDIENTE_DIGITALNO ENTRE
			//CUANDO LOS PROCESOS SON CORRECTOS
			$opcionX = 0;
							
			echo '<script languaje="JavaScript"> 
									
				
						var msg = "'.$msg.'";	
									
									
						var idradiX = "'.$idradiX.'";
						var radiX   = "'.$radiX.'";
						var opcionX = "'.$opcionX.'";
									
									
						alert(msg);
									
						location.href="index.php?controller=archivo&action=Expediente_Digital&datosexp="+idradiX+"******"+radiX+"******"+opcionX;
									
									
				  </script>';
								
								
		}
		
		
			
	
	}
	
	//NUEVO 24 DE JUNIO 2021
	
	public function bloquear_proceso(){
	
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		//$fechahora  = $modelo->get_fecha_actual();
		//$datosfecha = explode(" ",$fechahora);
		//$fechalog   = $datosfecha[0];
		
		$fechalog = $modelo->get_fecha_actual_amd();
		$horalog  = $modelo->get_hora_actual_24horas();
	
		//SE OBTIENEN LOS DATOS
		$idusuario = $_SESSION['idUsuario'];
		
		$id_radibloc1 = trim($_POST['id_radibloc1']);
		$radibloc1    = trim($_POST['radibloc1']);
		$BLOQUEADO    = $id_radibloc1.'BLOQUEADO';
		
					
					//SQL A EJECUTAR 
	
					$SQL_1 = "UPDATE ubicacion_expediente SET
					
								  radicado     = '$BLOQUEADO',
								  bloqueado    = 0,
								  fechablodes  = '$fechalog',
								  horablodes   = '$horalog',
							      iduserblodes = '$idusuario',
								  radiblodes   = '$radibloc1'
								  
							  WHERE id = '$id_radibloc1'";			
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$obs                = "PROCESO BLOQUEADO";
			
								$fechacarga_detalle = $fechalog." ".$horalog;
														 
								$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
											     VALUES('$id_radibloc1','$fechacarga_detalle','$obs','$idusuario')");				 
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							
							$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
				
						if($error_transaccion){
						
							echo $msg;
						
						}
						else{
							
							$msg = "PROCESO SE REALIZA CORRECTAMENTE";
							
							echo $msg;
						
						}
							
					
					
				
  	}
	
	public function desbloquear_proceso(){
	
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
	
		//SE OBTIENEN LOS DATOS
		$idusuario = $_SESSION['idUsuario'];
		
		$id_radibloc1 = trim($_POST['id_radibloc1']);
		$radibloc1    = trim($_POST['radibloc1']);
		
		
					
					//SQL A EJECUTAR 
	
					$SQL_1 = "UPDATE ubicacion_expediente SET
					
								  radicado     = '$radibloc1',
								  bloqueado    = 1,
								  fechablodes  = '$fechalog',
								  horablodes   = '$horalog',
							      iduserblodes = '$idusuario',
								  radiblodes   = NULL
								  
							  WHERE id = '$id_radibloc1'";		  
											
						
					
					
					$error_transaccion   = 0; //variable para detectar error
					$msg = " ";
					
				
					
						try {  
						
							$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
							//EMPIEZA LA TRANSACCION
							$this->db->beginTransaction();
							
							
								$obs                = "PROCESO DESBLOQUEADO";
			
								$fechacarga_detalle = $fechalog." ".$horalog;
														 
								$this->db->exec("INSERT INTO detalle_correspondencia (idcorrespondencia,fecha,observacion,idusuario) 
											     VALUES('$id_radibloc1','$fechacarga_detalle','$obs','$idusuario')");				 
								
								
		
								$this->db->exec($SQL_1);
								
								
								
								
								
								//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
								//SE TERMINA LA TRANSACCION  
								$this->db->commit();
											
								//echo $msg;
								
						
						  
						} 
						catch (Exception $e) {
						
							
							
							$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
							//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
							$this->db->rollBack();
							
						
							//echo $msg;
							
							$error_transaccion   = 1;
							
						}
						
				
						if($error_transaccion){
						
							echo $msg;
						
						}
						else{
							
							$msg = "PROCESO SE REALIZA CORRECTAMENTE";
							
							echo $msg;
						
						}
							
					
					
				
  	}
	
	public function lista_Expedientes_bloqueados(){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$fecha_actual = $modelo->get_fecha_actual_amd();
			
			
			$idusuario     = $_SESSION['idUsuario'];
			
										
			$listar = $this->db->prepare("
			
										 	SELECT t1.id,t1.fechablodes,t1.horablodes,t2.empleado,t1.radiblodes,t1.digitalizado
											FROM (ubicacion_expediente t1
											INNER JOIN pa_usuario t2 ON t1.iduserblodes = t2.id)
											WHERE t1.bloqueado = 0
											ORDER BY t1.id DESC"
											
										);
										
										
								

  			$listar->execute();

  			return $listar;
	
  	}
	
	public function lista_Expedientes_bloqueados_filtro($datoJXX1,$datoJXX2,$datoJXX3){
	
	
			set_time_limit (240000000);
	
			$idusuario  = $_SESSION['idUsuario'];
			
		
			$filtrox;
			
			$filtrof;
			
			$filtro1;
			
			
			if ( !empty($datoJXX1) ) {
			
				
				$filtro1 = " AND t1.radiblodes = '$datoJXX1' ";
			
			}

			if ( !empty($datoJXX2) && !empty($datoJXX3) ) {
			
				$filtrof   = " AND (t1.fechablodes >= '$datoJXX2' AND t1.fechablodes <= '$datoJXX3')";
				
				
			}
			
			
			$filtrox = $filtro1." ".$filtrof;
		
			
			
			
			$listar = $this->db->prepare("
			
										 	SELECT t1.id,t1.fechablodes,t1.horablodes,t2.empleado,t1.radiblodes,t1.digitalizado
											FROM (ubicacion_expediente t1
											INNER JOIN pa_usuario t2 ON t1.iduserblodes = t2.id)
											WHERE t1.id >= '1'" .$filtrox." AND t1.bloqueado = 0
											ORDER BY t1.id DESC" 
											
										);
										
		
			
  			$listar->execute();
			
			
			/*$SQL = "SELECT t1.id,t1.fechablodes,t1.horablodes,t2.empleado,t1.radiblodes
											FROM (ubicacion_expediente t1
											INNER JOIN pa_usuario t2 ON t1.iduserblodes = t2.id)
											WHERE t1.id >= '1'" .$filtrox." AND t1.bloqueado = 0";
											
											
			echo $SQL;*/								

  			return $listar;
	
  	}
	
	
	public function Expediente_Bloqueado($id_radi){
	
	
			set_time_limit (240000000);
			
			
			$modelo = new archivoModel();
			
			
			$listar = $this->db->prepare("
			
										 	SELECT COUNT(id) AS expebloqueado FROM ubicacion_expediente
											WHERE id = '$id_radi' AND bloqueado = 0"
											
										);
										
										
								

  			$listar->execute();

  			return $listar;
	
  	}
	
	//NUEVO 9 DE JULIO 2021
	
	public function Solicitud_Digitalizacion_Filtro_2($datoJXX1,$datoJXX2,$datoJXX3,$datoJXX4,$datoJXX5,$datoJXX6){
	
	
			set_time_limit (240000000);
	
			$idusuario  = $_SESSION['idUsuario'];
			
		
			$filtrox;
			
			$filtrof;
			
			$filtro1;
			$filtro4;
			$filtro5;
			$filtro6;
			
			
		
			/*$fechad    = trim($_GET['dato_1']);
			$fechah    = trim($_GET['dato_2']);
			
			$datox1    = trim($_GET['datox1']);
			$datox2    = trim($_GET['datox2']);
			$datox4    = trim($_GET['datox4']);*/
			
			
			
			if ( !empty($datoJXX1) ) {
			
	
				$filtro1 = " AND t2.radicado LIKE '%$datoJXX1%' ";
			
			}
			
			if ( !empty($datoJXX2) && !empty($datoJXX3) ) {
			
				$filtrof   = " AND (t1.fecha >= '$datoJXX2' AND t1.fecha <= '$datoJXX3')";
				
				
			}
			
			if ( !empty($datoJXX4) || $datoJXX4 == 1 ) {
			
				
				$filtro4 = " AND t1.bandera_res = '$datoJXX4' ";
			
			}
			
			if ( !empty($datoJXX5) ) {
			
	
				$filtro5 = " AND t3.nombre_usuario = '$datoJXX5' ";
			
			}
			
			if ( !empty($datoJXX6) ) {
			
	
				$filtro6 = " AND t3.empleado LIKE '%$datoJXX6%' ";
			
			}
			
			
			$filtrox = $filtro1." ".$filtro4." ".$filtro5." ".$filtro6." ".$filtrof;
		
			
			
			$listar = $this->db->prepare("
				
												SELECT t1.id,t2.id AS idradicado,t2.radicado,t3.empleado,t1.fecha,t1.hora,t3.esabogado,t3.correo,
												t1.respuesta,t1.fecha_res,t1.hora_res,t1.bandera_res,t1.idusuario_res,t1.ruta_respuesta,t3.nombre_usuario
												FROM ((expe_solicitud t1
												INNER JOIN ubicacion_expediente t2 ON t1.idradicado    = t2.id)
												INNER JOIN pa_usuario_expe      t3 ON t1.idsolicitante = t3.id)
												WHERE t1.id >= '1'" .$filtrox. "
												
												
										");
											
			
			
  			$listar->execute();
			
			

  			return $listar;
	
  	}
	
	public function radicar_solicitud_digitalizacion(){
	
		
		$modelo     = new archivoModel();
				
		$fecha_entrega = $modelo->get_fecha_actual_amd();
		$hora_militar  = $modelo->get_hora_actual_24horas();
		
		
		//SE OBTIENEN LOS DATOS
		$idusuario = $_SESSION['idUsuario'];
		
		$respuestaoecm = utf8_decode(trim($_POST['resexpedigi']));//RESPUESTA
	
		$idmemoexterno = trim($_POST['idmemoexterno']);//ID REGISTRO TABLA expe_solicitud
		
		
		//***********************************PARA EL ARCHIVO***************************************
		
		$sin_archivo   = trim($_POST['sin_archivo']);
	
		//CREO EL DIRECTORIO DEL USUARIO QUE NO ES MAS QUE EL ID DEL USUARIO DE LA TABLA pa_usuario 
		$raiz = "SOLICITUD_RESPUESTA";
		//ID DEL USUARIO DE LA TABLA pa_usuario
		$nom = trim($_SESSION['idUsuario']);
		//IDENTIFICA ERROR EN CARGA DEL ARCHIVO
		$erro_archivo = 0;
				
		//AQUI SE CREA EL DIRECTORIO
		//if(is_dir($raiz.'/'.$nom)){$bandera=0;}
		//else{mkdir($raiz.'/'.$nom, 0, true);}
				
		//CUANDO SOLO SE SUBE UN ARCHIVOS
		/*$nombre_archivo = $_FILES['archivo']['name']; 
		$tipo_archivo   = $_FILES['archivo']['type'];
		$tamano_archivo = $_FILES['archivo']['size'];*/ 
		
		
		//***********************************FIN PARA EL ARCHIVO***************************************
		
		$cadena_archivos     = "";						
		$error_transaccion   = 0; //variable para detectar error
		$msg = " ";
					
				
					
		try {  
						
			$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
			//EMPIEZA LA TRANSACCION
			$this->db->beginTransaction();
							
				
	
				//DEFINE ARCHIVO
				if($sin_archivo == 1){					
								
					//------------------------------------SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
										
					//AQUI SE CREA EL DIRECTORIO, CON EL ID ASIGNADO A LA DEMANDA
					if(is_dir($raiz.'/'.$nom.'/'.$idmemoexterno)){$bandera=0;}
					else{mkdir($raiz.'/'.$nom.'/'.$idmemoexterno, 0, true);}
	
					$mensage       = '';//Declaramos una variable mensaje quue almacenara el resultado de las operaciones.
					$archivo_error = 0;
										
					foreach ($_FILES as $key) //Iteramos el arreglo de archivos
					{
						if($key['error'] == UPLOAD_ERR_OK )//Si el archivo se paso correctamente Ccontinuamos 
						{
												
							$nombre_archivo = date('ymdHis'). '-' .$key['name'];//Obtenemos el nombre original del archivo y lo concatenamos con (Aï¿½oMesDiaHoramilitarMinutosSegundos)
							$temporal       = $key['tmp_name']; //Obtenemos la ruta Original del archivo
							//$Destino        = $ruta.$NombreOriginal;//Creamos una ruta de destino con la variable ruta y el nombre original del archivo	
							$ruta           = $raiz.'/'.$nom.'/'.$idmemoexterno.'/'.$nombre_archivo;
													
							move_uploaded_file($temporal, utf8_decode($ruta)); //Movemos el archivo temporal a la ruta especificada		
													
						}
										
						if ($key['error']=='') //Si no existio ningun error, retornamos un mensaje por cada archivo subido
						{
							
							//$mensage .= '-> Archivo <b>'.$NombreOriginal.'</b> Subido correctamente. <br>';
													
							$rutaarchivo = utf8_decode($raiz.'/'.$nom.'/'.$idmemoexterno.'/'.$nombre_archivo);
							
													
							//TABLA expe_solicitud
							
							$this->db->exec(
							
												"UPDATE expe_solicitud SET
									
													respuesta      = '$respuestaoecm',
													fecha_res      = '$fecha_entrega',
													hora_res       = '$hora_militar',
													bandera_res    = 1,
													idusuario_res  = '$idusuario',
													ruta_respuesta = '$rutaarchivo'
																			 
												WHERE id = '$idmemoexterno'"
															
											
							);				
											
								
											
							
							
													
							$cadena_archivos .= $rutaarchivo."******";
							
													
						}
						
						if ($key['error']!='')//Si existio algï¿½n error retornamos un el error por cada archivo.
						{
							$mensage .= '-> No se pudo subir el archivo <b>'.$nombre_archivo.'</b> debido al siguiente Error: n'.$key['error']; 
													
							$archivo_error = 1;
						}
											
					}
										
					//echo $mensage;// Regresamos los mensajes generados al cliente
										
					//------------------------------------FIN SUBIR LOS ARCHIVOS-----------------------------------------------------------------------
					
					
					
				}			
				//NO DEFINE ARCHIVO
				else{
				
							//TABLA expe_solicitud
							
							$this->db->exec(
							
												"UPDATE expe_solicitud SET
									
													respuesta      = '$respuestaoecm',
													fecha_res      = '$fecha_entrega',
													hora_res       = '$hora_militar',
													bandera_res    = 1,
													idusuario_res  = '$idusuario'
													
												WHERE id = '$idmemoexterno'"
															
											
							);				
				
				}
							
			
				
				
				//HISTORIAL
				$actuacion = 'REGISTRO RESPUESTA SOLICITUD DIGITALIZACION';
				$tablas    = 'expe_solicitud';
				$tipo      = 'RESSDIGI';
				//$cadena_archivos = "MUCHOS";
				$this->db->exec("INSERT INTO expe_historial(idda,idusuario,fecha,hora,actuacion,tablas,tipo)
								 VALUES('$idmemoexterno','$idusuario','$fecha_entrega','$hora_militar','$actuacion','$tablas','$tipo')");
												 
				
				$msg = "PROCESO SE REALIZA CORRECTAMENTE";
				
				
															
			//SE TERMINA LA TRANSACCION  
			$this->db->commit();
											
			echo $msg;
								
						
						  
		} 
		catch (Exception $e) {
						
							
			$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
			//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
			$this->db->rollBack();
							
						
			echo $msg;
							
							
		}
		
				
  	}
	
	
	
	//-----------------------------------FIN EXPEDIENTE DIGITAL---------------------------------------
	
	
	
	//********************************************************************************************
						//PARA EL MANEJO DE SOLICITUD SOPORTE TECNICO
						//ADICIONADO EL 10 DE JULIO 2019
	//********************************************************************************************
	
	public function registrar_solicitud(){
	
		
		$modelo     = new archivoModel();
				
		
		//DATOS PARA EL REGISTRO DEL LOG
		$fechahora  = $modelo->get_fecha_actual();
		$datosfecha = explode(" ",$fechahora);
		$fechalog   = $datosfecha[0];
		
		//$horalog    = $datosfecha[1];
		$horalog    = $modelo->get_hora_actual_24horas();
		
		//$accion       = "APRUEBA REMATE";
		//$detalle      = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
		//$tipolog      = 1;
		
		//SE OBTIENEN LOS DATOS
		$idusuario      = $_SESSION['idUsuario'];
		
		
		$datospartes = trim($_POST['datospartes']);
			
		$datospartes_1A = explode("******",$datospartes); 
		$longitud_1     = count($datospartes_1A);
		$i              = 0;
				
		while($i < $longitud_1 - 1){
				
				
			//2 EXPLODE
			$datospartes_1B = explode("//////",$datospartes_1A[$i]);
			
			$iduser_1 = explode("-",trim($datospartes_1B[0]));
			$iduser    = $iduser_1[0];		
			
			$des       = utf8_decode(trim($datospartes_1B[1]));
					
			
		
			//SQL A EJECUTAR 
			$SQL_1 = "INSERT INTO so_ticket(fecha,hora,des,iduser,respuesta,estado,iduserregistro)
					  VALUES('$fechalog','$horalog','$des','$iduser','-',0,'$idusuario')";			
											
						
					
					
			$error_transaccion   = 0; //variable para detectar error
			$msg = " ";
					
			//$accion  = "APRUEBA REMATE, ID REMATE: ".$idrema;
			//$detalle = $_SESSION['nombre']." ".$accion." ".$fechalog." "."a las: ".$horalog;
					
				
					
			try {  
						
				$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							
				//EMPIEZA LA TRANSACCION
				$this->db->beginTransaction();
							
								
								
					/*$this->db->exec("INSERT INTO log (fecha, accion,detalle,idusuario,idtipolog) 
									   VALUES ('$fechalog', '$accion','$detalle','$idusuario','$tipolog')");*/
								
								
		
					$this->db->exec($SQL_1);
								
								
								
					//$msg = "PROCESO SE REALIZA CORRECTAMENTE";
															
					//SE TERMINA LA TRANSACCION  
					$this->db->commit();
											
					//echo $msg;
								
						
						  
			} 
			catch (Exception $e) {
						
							
				$i = $longitud_1 - 1;
							
	
				$msg = "ERROR EN PROCESO: ".$e->getMessage();
							
							
				//NO TERMINA LA TRANSACCION SE PRESENTO UN ERROR
				$this->db->rollBack();
							
						
				//echo $msg;
							
				$error_transaccion   = 1;
							
			}
						
			$i = $i + 1;
					
					
					
		}//FIN WHILE
				
		if($error_transaccion){
				
			echo $msg;
				
		}
		else{
					
			$msg = "PROCESO SE REALIZA CORRECTAMENTE";
					
			echo $msg;
				
		}
				
			
				
				
  	}
	
	//********************************************************************************************
						
						//FIN PARA EL MANEJO DE SOLICITUD SOPORTE TECNICO
						
	//********************************************************************************************
	
	
	public function getRealIP(){

		if (isset($_SERVER["HTTP_CLIENT_IP"]))
		{
			return $_SERVER["HTTP_CLIENT_IP"];
		}
		elseif (isset($_SERVER["HTTP_X_FORWARDED_FOR"]))
		{
			return $_SERVER["HTTP_X_FORWARDED_FOR"];
		}
		elseif (isset($_SERVER["HTTP_X_FORWARDED"]))
		{
			return $_SERVER["HTTP_X_FORWARDED"];
		}
		elseif (isset($_SERVER["HTTP_FORWARDED_FOR"]))
		{
			return $_SERVER["HTTP_FORWARDED_FOR"];
		}
		elseif (isset($_SERVER["HTTP_FORWARDED"]))
		{
			return $_SERVER["HTTP_FORWARDED"];
		}
		else
		{
			return $_SERVER["REMOTE_ADDR"];
		}
	
	}

	
     
}//FIN CLASE
  
  




?>